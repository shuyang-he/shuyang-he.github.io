!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=76)}([function(e,n,t){"use strict";e.exports=t(23)},function(e,n,t){"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}var a,l,u;return[t].join("\n")}(n,e);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(t&&(u[2]?u[2]="".concat(t," and ").concat(u[2]):u[2]=t),n.push(u))}},n}},function(e,n,t){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),a=[];function l(e){for(var n=-1,t=0;t<a.length;t++)if(a[t].identifier===e){n=t;break}return n}function u(e,n){for(var t={},r=[],o=0;o<e.length;o++){var i=e[o],u=n.base?i[0]+n.base:i[0],c=t[u]||0,s="".concat(u," ").concat(c);t[u]=c+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:h(d,n),references:1}),r.push(s)}return r}function c(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var s,f=(s=[],function(e,n){return s[e]=n,s.filter(Boolean).join("\n")});function d(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(n,o);else{var i=document.createTextNode(o),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(i,a[n]):e.appendChild(i)}}function p(e,n,t){var r=t.css,o=t.media,i=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,A=0;function h(e,n){var t,r,o;if(n.singleton){var i=A++;t=m||(m=c(n)),r=d.bind(null,t,i,!1),o=d.bind(null,t,i,!0)}else t=c(n),r=p.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=o());var t=u(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=l(t[r]);a[o].references--}for(var i=u(e,n),c=0;c<t.length;c++){var s=l(t[c]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}t=i}}}},function(e,n,t){"use strict";function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}t.d(n,"a",(function(){return r}))},function(e,n,t){e.exports=t(26)()},function(e,n,t){"use strict";var r=t(7),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(m){var o=p(t);o&&o!==m&&e(n,o,r)}var a=s(t);f&&(a=a.concat(f(t)));for(var l=u(n),A=u(t),h=0;h<a.length;++h){var g=a[h];if(!(i[g]||r&&r[g]||A&&A[g]||l&&l[g])){var v=d(t,g);try{c(n,g,v)}catch(e){}}}}return n}},function(e,n,t){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=t(22)},function(e,n,t){"use strict";e.exports=t(28)},,function(e,n,t){"use strict";(function(e,r){var o,i=t(15);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);n.a=a}).call(this,t(14),t(29)(e))},function(e,n){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},t(n)}e.exports=t},function(e,n,t){"use strict";(function(e){var r=t(0),o=t.n(r),i=t(3),a=t(4),l=t.n(a),u="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e?e:{};function c(e){var n=[];return{on:function(e){n.push(e)},off:function(e){n=n.filter((function(n){return n!==e}))},get:function(){return e},set:function(t,r){e=t,n.forEach((function(n){return n(e,r)}))}}}var s=o.a.createContext||function(e,n){var t,o,a,s="__create-react-context-"+((u[a="__global_unique_id__"]=(u[a]||0)+1)+"__"),f=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).emitter=c(n.props.value),n}Object(i.a)(t,e);var r=t.prototype;return r.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?t=0:(t="function"==typeof n?n(r,o):1073741823,0!==(t|=0)&&this.emitter.set(e.value,t))}var i,a},r.render=function(){return this.props.children},t}(r.Component);f.childContextTypes=((t={})[s]=l.a.object.isRequired,t);var d=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}Object(i.a)(t,n);var r=t.prototype;return r.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?1073741823:n},r.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},r.getValue=function(){return this.context[s]?this.context[s].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(r.Component);return d.contextTypes=((o={})[s]=l.a.object,o),{Provider:f,Consumer:d}};n.a=s}).call(this,t(14))},function(e,n,t){var r=t(67);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,n){return l(i(e,n),n)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,n){for(var t,r=[],i=0,a=0,l="",s=n&&n.delimiter||"/";null!=(t=o.exec(e));){var f=t[0],d=t[1],p=t.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var m=e[a],A=t[2],h=t[3],g=t[4],v=t[5],y=t[6],b=t[7];l&&(r.push(l),l="");var C=null!=A&&null!=m&&m!==A,E="+"===y||"*"===y,w="?"===y||"*"===y,x=t[2]||s,k=g||v;r.push({name:h||i++,prefix:A||"",delimiter:x,optional:w,repeat:E,partial:C,asterisk:!!b,pattern:k?c(k):b?".*":"[^"+u(x)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",f(n)));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,n){return e.keys=n,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,n,t){r(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,i=!1!==t.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";n.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(t.delimiter||"/"),A=a.slice(-m.length)===m;return o||(a=(A?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&A?"":"(?="+m+"|$)",s(new RegExp("^"+a,f(t)),n)}function p(e,n,t){return r(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,n)}(e,n):r(e)?function(e,n,t){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],n,t).source);return s(new RegExp("(?:"+r.join("|")+")",f(t)),n)}(e,n,t):function(e,n,t){return d(i(e,t),n,t)}(e,n,t)}},function(e,n,t){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,n){for(var t,l,u=a(e),c=1;c<arguments.length;c++){for(var s in t=Object(arguments[c]))o.call(t,s)&&(u[s]=t[s]);if(r){l=r(t);for(var f=0;f<l.length;f++)i.call(t,l[f])&&(u[l[f]]=t[l[f]])}}return u}},function(e,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(e){"object"==typeof window&&(t=window)}e.exports=t},function(e,n,t){"use strict";function r(e){var n,t=e.Symbol;return"function"==typeof t?t.observable?n=t.observable:(n=t("observable"),t.observable=n):n="@@observable",n}t.d(n,"a",(function(){return r}))},function(e,n){e.exports=function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}},function(e,n){function t(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}},function(e,n,t){var r=t(30);e.exports=function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&r(e,n)}},function(e,n,t){var r=t(31),o=t(32);e.exports=function(e,n){return!n||"object"!==r(n)&&"function"!=typeof n?o(e):n}},function(e,n,t){"use strict";e.exports=function(e,n){return n||(n={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,n,t){"use strict";n.a=t.p+"assets/img/Max.jpg"},function(e,n,t){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=t(0),o=t(13),i=t(24);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,n,t,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,n,t,r,o,i,a,s,f){u=!1,c=null,l.apply(d,arguments)}var m=null,A=null,h=null;function g(e,n,t){var r=e.type||"unknown-event";e.currentTarget=h(t),function(e,n,t,r,o,i,l,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(a(198));var A=c;u=!1,c=null,s||(s=!0,f=A)}}(r,n,void 0,e),e.currentTarget=null}var v=null,y={};function b(){if(v)for(var e in y){var n=y[e],t=v.indexOf(e);if(!(-1<t))throw Error(a(96,e));if(!E[t]){if(!n.extractEvents)throw Error(a(97,e));for(var r in E[t]=n,t=n.eventTypes){var o=void 0,i=t[r],l=n,u=r;if(w.hasOwnProperty(u))throw Error(a(99,u));w[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&C(c[o],l,u);o=!0}else i.registrationName?(C(i.registrationName,l,u),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function C(e,n,t){if(x[e])throw Error(a(100,e));x[e]=n,k[e]=n.eventTypes[t].dependencies}var E=[],w={},x={},k={};function _(e){var n,t=!1;for(n in e)if(e.hasOwnProperty(n)){var r=e[n];if(!y.hasOwnProperty(n)||y[n]!==r){if(y[n])throw Error(a(102,n));y[n]=r,t=!0}}t&&b()}var S=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),T=null,P=null,B=null;function O(e){if(e=A(e)){if("function"!=typeof T)throw Error(a(280));var n=e.stateNode;n&&(n=m(n),T(e.stateNode,e.type,n))}}function N(e){P?B?B.push(e):B=[e]:P=e}function M(){if(P){var e=P,n=B;if(B=P=null,O(e),n)for(e=0;e<n.length;e++)O(n[e])}}function R(e,n){return e(n)}function z(e,n,t,r,o){return e(n,t,r,o)}function I(){}var F=R,j=!1,$=!1;function D(){null===P&&null===B||(I(),M())}function L(e,n,t){if($)return e(n,t);$=!0;try{return F(e,n,t)}finally{$=!1,D()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,G={},H={};function q(e,n,t,r,o,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=i}var V={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){V[e]=new q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];V[n]=new q(n,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){V[e]=new q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){V[e]=new q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){V[e]=new q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){V[e]=new q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){V[e]=new q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){V[e]=new q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){V[e]=new q(e,5,!1,e.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(Q,Y);V[n]=new q(n,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(Q,Y);V[n]=new q(n,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(Q,Y);V[n]=new q(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){V[e]=new q(e,1,!1,e.toLowerCase(),null,!1)})),V.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){V[e]=new q(e,1,!1,e.toLowerCase(),null,!0)}));var K=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,n,t,r){var o=V.hasOwnProperty(n)?V[n]:null;(null!==o?0===o.type:!r&&(2<n.length&&("o"===n[0]||"O"===n[0])&&("n"===n[1]||"N"===n[1])))||(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!W.call(H,e)||!W.call(G,e)&&(U.test(e)?H[e]=!0:(G[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}K.hasOwnProperty("ReactCurrentDispatcher")||(K.ReactCurrentDispatcher={current:null}),K.hasOwnProperty("ReactCurrentBatchConfig")||(K.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,ne=Z?Symbol.for("react.portal"):60106,te=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,oe=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,ae=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ue=Z?Symbol.for("react.forward_ref"):60112,ce=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function Ae(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function he(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case te:return"Fragment";case ne:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case ue:var n=e.render;return n=n.displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case fe:return he(e.type);case pe:return he(e.render);case de:if(e=1===e._status?e._result:null)return he(e)}return null}function ge(e){var n="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var t="";break e;default:var r=e._debugOwner,o=e._debugSource,i=he(e.type);t=null,r&&(t=he(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":t&&(i=" (created by "+t+")"),t="\n    in "+(r||"Unknown")+i}n+=t,e=e.return}while(e);return n}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ye(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function be(e){e._valueTracker||(e._valueTracker=function(e){var n=ye(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,i=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Ce(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=ye(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Ee(e,n){var t=n.checked;return o({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function we(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=ve(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function xe(e,n){null!=(n=n.checked)&&X(e,"checked",n,!1)}function ke(e,n){xe(e,n);var t=ve(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?Se(e,n.type,t):n.hasOwnProperty("defaultValue")&&Se(e,n.type,ve(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function _e(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function Se(e,n,t){"number"===n&&e.ownerDocument.activeElement===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}function Te(e,n){return e=o({children:void 0},n),(n=function(e){var n="";return r.Children.forEach(e,(function(e){null!=e&&(n+=e)})),n}(n.children))&&(e.children=n),e}function Pe(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+ve(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function Be(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return o({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:ve(t)}}function Ne(e,n){var t=ve(n.value),r=ve(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function Me(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}var Re="http://www.w3.org/1999/xhtml",ze="http://www.w3.org/2000/svg";function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fe(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var je,$e=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(n,t,r,o){MSApp.execUnsafeLocalFunction((function(){return e(n,t)}))}:e}((function(e,n){if(e.namespaceURI!==ze||"innerHTML"in e)e.innerHTML=n;else{for((je=je||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=je.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}}));function De(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}function Le(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Ue={animationend:Le("Animation","AnimationEnd"),animationiteration:Le("Animation","AnimationIteration"),animationstart:Le("Animation","AnimationStart"),transitionend:Le("Transition","TransitionEnd")},We={},Ge={};function He(e){if(We[e])return We[e];if(!Ue[e])return e;var n,t=Ue[e];for(n in t)if(t.hasOwnProperty(n)&&n in Ge)return We[e]=t[n];return e}S&&(Ge=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var qe=He("animationend"),Ve=He("animationiteration"),Qe=He("animationstart"),Ye=He("transitionend"),Ke="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var n=Xe.get(e);return void 0===n&&(n=new Map,Xe.set(e,n)),n}function Ze(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(1026&(n=e).effectTag)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function en(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function nn(e){if(Ze(e)!==e)throw Error(a(188))}function tn(e){if(!(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ze(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){t=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===t)return nn(o),e;if(i===r)return nn(o),n;i=i.sibling}throw Error(a(188))}if(t.return!==r.return)t=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===t){l=!0,t=o,r=i;break}if(u===r){l=!0,r=o,t=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===t){l=!0,t=i,r=o;break}if(u===r){l=!0,r=i,t=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e)))return null;for(var n=e;;){if(5===n.tag||6===n.tag)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===e)break;for(;!n.sibling;){if(!n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function rn(e,n){if(null==n)throw Error(a(30));return null==e?n:Array.isArray(e)?Array.isArray(n)?(e.push.apply(e,n),e):(e.push(n),e):Array.isArray(n)?[e].concat(n):[e,n]}function on(e,n,t){Array.isArray(e)?e.forEach(n,t):e&&n.call(t,e)}var an=null;function ln(e){if(e){var n=e._dispatchListeners,t=e._dispatchInstances;if(Array.isArray(n))for(var r=0;r<n.length&&!e.isPropagationStopped();r++)g(e,n[r],t[r]);else n&&g(e,n,t);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function un(e){if(null!==e&&(an=rn(an,e)),e=an,an=null,e){if(on(e,ln),an)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function cn(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function sn(e){if(!S)return!1;var n=(e="on"+e)in document;return n||((n=document.createElement("div")).setAttribute(e,"return;"),n="function"==typeof n[e]),n}var fn=[];function dn(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>fn.length&&fn.push(e)}function pn(e,n,t,r){if(fn.length){var o=fn.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=n,o.targetInst=t,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:n,targetInst:t,ancestors:[]}}function mn(e){var n=e.targetInst,t=n;do{if(!t){e.ancestors.push(t);break}var r=t;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(n=t.tag)&&6!==n||e.ancestors.push(t),t=St(r)}while(t);for(t=0;t<e.ancestors.length;t++){n=e.ancestors[t];var o=cn(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===t&&(a|=64);for(var l=null,u=0;u<E.length;u++){var c=E[u];c&&(c=c.extractEvents(r,n,i,o,a))&&(l=rn(l,c))}un(l)}}function An(e,n,t){if(!t.has(e)){switch(e){case"scroll":Yn(n,"scroll",!0);break;case"focus":case"blur":Yn(n,"focus",!0),Yn(n,"blur",!0),t.set("blur",null),t.set("focus",null);break;case"cancel":case"close":sn(e)&&Yn(n,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ke.indexOf(e)&&Qn(e,n)}t.set(e,null)}}var hn,gn,vn,yn=!1,bn=[],Cn=null,En=null,wn=null,xn=new Map,kn=new Map,_n=[],Sn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tn="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pn(e,n,t,r,o){return{blockedOn:e,topLevelType:n,eventSystemFlags:32|t,nativeEvent:o,container:r}}function Bn(e,n){switch(e){case"focus":case"blur":Cn=null;break;case"dragenter":case"dragleave":En=null;break;case"mouseover":case"mouseout":wn=null;break;case"pointerover":case"pointerout":xn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":kn.delete(n.pointerId)}}function On(e,n,t,r,o,i){return null===e||e.nativeEvent!==i?(e=Pn(n,t,r,o,i),null!==n&&(null!==(n=Tt(n))&&gn(n)),e):(e.eventSystemFlags|=r,e)}function Nn(e){var n=St(e.target);if(null!==n){var t=Ze(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=en(t)))return e.blockedOn=n,void i.unstable_runWithPriority(e.priority,(function(){vn(t)}))}else if(3===n&&t.stateNode.hydrate)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Mn(e){if(null!==e.blockedOn)return!1;var n=Zn(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==n){var t=Tt(n);return null!==t&&gn(t),e.blockedOn=n,!1}return!0}function Rn(e,n,t){Mn(e)&&t.delete(n)}function zn(){for(yn=!1;0<bn.length;){var e=bn[0];if(null!==e.blockedOn){null!==(e=Tt(e.blockedOn))&&hn(e);break}var n=Zn(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==n?e.blockedOn=n:bn.shift()}null!==Cn&&Mn(Cn)&&(Cn=null),null!==En&&Mn(En)&&(En=null),null!==wn&&Mn(wn)&&(wn=null),xn.forEach(Rn),kn.forEach(Rn)}function In(e,n){e.blockedOn===n&&(e.blockedOn=null,yn||(yn=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,zn)))}function Fn(e){function n(n){return In(n,e)}if(0<bn.length){In(bn[0],e);for(var t=1;t<bn.length;t++){var r=bn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Cn&&In(Cn,e),null!==En&&In(En,e),null!==wn&&In(wn,e),xn.forEach(n),kn.forEach(n),t=0;t<_n.length;t++)(r=_n[t]).blockedOn===e&&(r.blockedOn=null);for(;0<_n.length&&null===(t=_n[0]).blockedOn;)Nn(t),null===t.blockedOn&&_n.shift()}var jn={},$n=new Map,Dn=new Map,Ln=["abort","abort",qe,"animationEnd",Ve,"animationIteration",Qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function Un(e,n){for(var t=0;t<e.length;t+=2){var r=e[t],o=e[t+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:n},Dn.set(r,n),$n.set(r,i),jn[o]=i}}Un("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Un("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Un(Ln,2);for(var Wn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Gn=0;Gn<Wn.length;Gn++)Dn.set(Wn[Gn],0);var Hn=i.unstable_UserBlockingPriority,qn=i.unstable_runWithPriority,Vn=!0;function Qn(e,n){Yn(n,e,!1)}function Yn(e,n,t){var r=Dn.get(n);switch(void 0===r?2:r){case 0:r=Kn.bind(null,n,1,e);break;case 1:r=Xn.bind(null,n,1,e);break;default:r=Jn.bind(null,n,1,e)}t?e.addEventListener(n,r,!0):e.addEventListener(n,r,!1)}function Kn(e,n,t,r){j||I();var o=Jn,i=j;j=!0;try{z(o,e,n,t,r)}finally{(j=i)||D()}}function Xn(e,n,t,r){qn(Hn,Jn.bind(null,e,n,t,r))}function Jn(e,n,t,r){if(Vn)if(0<bn.length&&-1<Sn.indexOf(e))e=Pn(null,e,n,t,r),bn.push(e);else{var o=Zn(e,n,t,r);if(null===o)Bn(e,r);else if(-1<Sn.indexOf(e))e=Pn(o,e,n,t,r),bn.push(e);else if(!function(e,n,t,r,o){switch(n){case"focus":return Cn=On(Cn,e,n,t,r,o),!0;case"dragenter":return En=On(En,e,n,t,r,o),!0;case"mouseover":return wn=On(wn,e,n,t,r,o),!0;case"pointerover":var i=o.pointerId;return xn.set(i,On(xn.get(i)||null,e,n,t,r,o)),!0;case"gotpointercapture":return i=o.pointerId,kn.set(i,On(kn.get(i)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r)){Bn(e,r),e=pn(e,r,null,n);try{L(mn,e)}finally{dn(e)}}}}function Zn(e,n,t,r){if(null!==(t=St(t=cn(r)))){var o=Ze(t);if(null===o)t=null;else{var i=o.tag;if(13===i){if(null!==(t=en(o)))return t;t=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;t=null}else o!==t&&(t=null)}}e=pn(e,r,t,n);try{L(mn,e)}finally{dn(e)}return null}var et={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},nt=["Webkit","ms","Moz","O"];function tt(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||et.hasOwnProperty(e)&&et[e]?(""+n).trim():n+"px"}function rt(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=tt(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(et).forEach((function(e){nt.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),et[n]=et[e]}))}));var ot=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function it(e,n){if(n){if(ot[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62,""))}}function at(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var lt=Re;function ut(e,n){var t=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);n=k[n];for(var r=0;r<n.length;r++)An(n[r],e,t)}function ct(){}function st(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function ft(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dt(e,n){var t,r=ft(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ft(r)}}function pt(){for(var e=window,n=st();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=st((e=n.contentWindow).document)}return n}function mt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var At=null,ht=null;function gt(e,n){switch(e){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function vt(e,n){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var yt="function"==typeof setTimeout?setTimeout:void 0,bt="function"==typeof clearTimeout?clearTimeout:void 0;function Ct(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break}return e}function Et(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var wt=Math.random().toString(36).slice(2),xt="__reactInternalInstance$"+wt,kt="__reactEventHandlers$"+wt,_t="__reactContainere$"+wt;function St(e){var n=e[xt];if(n)return n;for(var t=e.parentNode;t;){if(n=t[_t]||t[xt]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=Et(e);null!==e;){if(t=e[xt])return t;e=Et(e)}return n}t=(e=t).parentNode}return null}function Tt(e){return!(e=e[xt]||e[_t])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pt(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Bt(e){return e[kt]||null}function Ot(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nt(e,n){var t=e.stateNode;if(!t)return null;var r=m(t);if(!r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}function Mt(e,n,t){(n=Nt(e,t.dispatchConfig.phasedRegistrationNames[n]))&&(t._dispatchListeners=rn(t._dispatchListeners,n),t._dispatchInstances=rn(t._dispatchInstances,e))}function Rt(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var n=e._targetInst,t=[];n;)t.push(n),n=Ot(n);for(n=t.length;0<n--;)Mt(t[n],"captured",e);for(n=0;n<t.length;n++)Mt(t[n],"bubbled",e)}}function zt(e,n,t){e&&t&&t.dispatchConfig.registrationName&&(n=Nt(e,t.dispatchConfig.registrationName))&&(t._dispatchListeners=rn(t._dispatchListeners,n),t._dispatchInstances=rn(t._dispatchInstances,e))}function It(e){e&&e.dispatchConfig.registrationName&&zt(e._targetInst,null,e)}function Ft(e){on(e,Rt)}var jt=null,$t=null,Dt=null;function Lt(){if(Dt)return Dt;var e,n,t=$t,r=t.length,o="value"in jt?jt.value:jt.textContent,i=o.length;for(e=0;e<r&&t[e]===o[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===o[i-n];n++);return Dt=o.slice(e,1<n?1-n:void 0)}function Ut(){return!0}function Wt(){return!1}function Gt(e,n,t,r){for(var o in this.dispatchConfig=e,this._targetInst=n,this.nativeEvent=t,e=this.constructor.Interface)e.hasOwnProperty(o)&&((n=e[o])?this[o]=n(t):"target"===o?this.target=r:this[o]=t[o]);return this.isDefaultPrevented=(null!=t.defaultPrevented?t.defaultPrevented:!1===t.returnValue)?Ut:Wt,this.isPropagationStopped=Wt,this}function Ht(e,n,t,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,n,t,r),o}return new this(e,n,t,r)}function qt(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Vt(e){e.eventPool=[],e.getPooled=Ht,e.release=qt}o(Gt.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Ut)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Ut)},persist:function(){this.isPersistent=Ut},isPersistent:Wt,destructor:function(){var e,n=this.constructor.Interface;for(e in n)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wt,this._dispatchInstances=this._dispatchListeners=null}}),Gt.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Gt.extend=function(e){function n(){}function t(){return r.apply(this,arguments)}var r=this;n.prototype=r.prototype;var i=new n;return o(i,t.prototype),t.prototype=i,t.prototype.constructor=t,t.Interface=o({},r.Interface,e),t.extend=r.extend,Vt(t),t},Vt(Gt);var Qt=Gt.extend({data:null}),Yt=Gt.extend({data:null}),Kt=[9,13,27,32],Xt=S&&"CompositionEvent"in window,Jt=null;S&&"documentMode"in document&&(Jt=document.documentMode);var Zt=S&&"TextEvent"in window&&!Jt,er=S&&(!Xt||Jt&&8<Jt&&11>=Jt),nr=String.fromCharCode(32),tr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,n){switch(e){case"keyup":return-1!==Kt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:tr,extractEvents:function(e,n,t,r){var o;if(Xt)e:{switch(e){case"compositionstart":var i=tr.compositionStart;break e;case"compositionend":i=tr.compositionEnd;break e;case"compositionupdate":i=tr.compositionUpdate;break e}i=void 0}else ar?or(e,t)&&(i=tr.compositionEnd):"keydown"===e&&229===t.keyCode&&(i=tr.compositionStart);return i?(er&&"ko"!==t.locale&&(ar||i!==tr.compositionStart?i===tr.compositionEnd&&ar&&(o=Lt()):($t="value"in(jt=r)?jt.value:jt.textContent,ar=!0)),i=Qt.getPooled(i,n,t,r),o?i.data=o:null!==(o=ir(t))&&(i.data=o),Ft(i),o=i):o=null,(e=Zt?function(e,n){switch(e){case"compositionend":return ir(n);case"keypress":return 32!==n.which?null:(rr=!0,nr);case"textInput":return(e=n.data)===nr&&rr?null:e;default:return null}}(e,t):function(e,n){if(ar)return"compositionend"===e||!Xt&&or(e,n)?(e=Lt(),Dt=$t=jt=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return er&&"ko"!==n.locale?null:n.data;default:return null}}(e,t))?((n=Yt.getPooled(tr.beforeInput,n,t,r)).data=e,Ft(n)):n=null,null===o?n:null===n?o:[o,n]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!ur[e.type]:"textarea"===n}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,n,t){return(e=Gt.getPooled(sr.change,e,n,t)).type="change",N(t),Ft(e),e}var dr=null,pr=null;function mr(e){un(e)}function Ar(e){if(Ce(Pt(e)))return e}function hr(e,n){if("change"===e)return n}var gr=!1;function vr(){dr&&(dr.detachEvent("onpropertychange",yr),pr=dr=null)}function yr(e){if("value"===e.propertyName&&Ar(pr))if(e=fr(pr,e,cn(e)),j)un(e);else{j=!0;try{R(mr,e)}finally{j=!1,D()}}}function br(e,n,t){"focus"===e?(vr(),pr=t,(dr=n).attachEvent("onpropertychange",yr)):"blur"===e&&vr()}function Cr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ar(pr)}function Er(e,n){if("click"===e)return Ar(n)}function wr(e,n){if("input"===e||"change"===e)return Ar(n)}S&&(gr=sn("input")&&(!document.documentMode||9<document.documentMode));var xr={eventTypes:sr,_isInputEventSupported:gr,extractEvents:function(e,n,t,r){var o=n?Pt(n):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=hr;else if(cr(o))if(gr)a=wr;else{a=Cr;var l=br}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Er);if(a&&(a=a(e,n)))return fr(a,t,r);l&&l(e,o,n),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Se(o,"number",o.value)}},kr=Gt.extend({view:null,detail:null}),_r={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sr(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=_r[e])&&!!n[e]}function Tr(){return Sr}var Pr=0,Br=0,Or=!1,Nr=!1,Mr=kr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var n=Pr;return Pr=e.screenX,Or?"mousemove"===e.type?e.screenX-n:0:(Or=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var n=Br;return Br=e.screenY,Nr?"mousemove"===e.type?e.screenY-n:0:(Nr=!0,0)}}),Rr=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ir={eventTypes:zr,extractEvents:function(e,n,t,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(t.relatedTarget||t.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=n,null!==(n=(n=t.relatedTarget||t.toElement)?St(n):null)&&(n!==Ze(n)||5!==n.tag&&6!==n.tag)&&(n=null)):a=null;if(a===n)return null;if("mouseout"===e||"mouseover"===e)var l=Mr,u=zr.mouseLeave,c=zr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Rr,u=zr.pointerLeave,c=zr.pointerEnter,s="pointer");if(e=null==a?i:Pt(a),i=null==n?i:Pt(n),(u=l.getPooled(u,a,t,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(t=l.getPooled(c,n,t,r)).type=s+"enter",t.target=i,t.relatedTarget=e,s=n,(r=a)&&s)e:{for(c=s,a=0,e=l=r;e;e=Ot(e))a++;for(e=0,n=c;n;n=Ot(n))e++;for(;0<a-e;)l=Ot(l),a--;for(;0<e-a;)c=Ot(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=Ot(l),c=Ot(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=Ot(r);for(r=[];s&&s!==c&&(null===(a=s.alternate)||a!==c);)r.push(s),s=Ot(s);for(s=0;s<l.length;s++)zt(l[s],"bubbled",u);for(s=r.length;0<s--;)zt(r[s],"captured",t);return 0==(64&o)?[u]:[u,t]}};var Fr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n},jr=Object.prototype.hasOwnProperty;function $r(e,n){if(Fr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!jr.call(n,t[r])||!Fr(e[t[r]],n[t[r]]))return!1;return!0}var Dr=S&&"documentMode"in document&&11>=document.documentMode,Lr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ur=null,Wr=null,Gr=null,Hr=!1;function qr(e,n){var t=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;return Hr||null==Ur||Ur!==st(t)?null:("selectionStart"in(t=Ur)&&mt(t)?t={start:t.selectionStart,end:t.selectionEnd}:t={anchorNode:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset},Gr&&$r(Gr,t)?null:(Gr=t,(e=Gt.getPooled(Lr.select,Wr,e,n)).type="select",e.target=Ur,Ft(e),e))}var Vr={eventTypes:Lr,extractEvents:function(e,n,t,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=k.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=n?Pt(n):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Ur=o,Wr=n,Gr=null);break;case"blur":Gr=Wr=Ur=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,qr(t,r);case"selectionchange":if(Dr)break;case"keydown":case"keyup":return qr(t,r)}return null}},Qr=Gt.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Gt.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Kr=kr.extend({relatedTarget:null});function Xr(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=kr.extend({key:function(e){if(e.key){var n=Jr[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),no=Mr.extend({dataTransfer:null}),to=kr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tr}),ro=Gt.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:jn,extractEvents:function(e,n,t,r){var o=$n.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xr(t))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Kr;break;case"click":if(2===t.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=no;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=to;break;case qe:case Ve:case Qe:e=Qr;break;case Ye:e=ro;break;case"scroll":e=kr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Rr;break;default:e=Gt}return Ft(n=e.getPooled(o,n,t,r)),n}};if(v)throw Error(a(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),b(),m=Bt,A=Tt,h=Pt,_({SimpleEventPlugin:io,EnterLeaveEventPlugin:Ir,ChangeEventPlugin:xr,SelectEventPlugin:Vr,BeforeInputEventPlugin:lr});var ao=[],lo=-1;function uo(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function co(e,n){lo++,ao[lo]=e.current,e.current=n}var so={},fo={current:so},po={current:!1},mo=so;function Ao(e,n){var t=e.type.contextTypes;if(!t)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in t)i[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=i),i}function ho(e){return null!=(e=e.childContextTypes)}function go(){uo(po),uo(fo)}function vo(e,n,t){if(fo.current!==so)throw Error(a(168));co(fo,n),co(po,t)}function yo(e,n,t){var r=e.stateNode;if(e=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,he(n)||"Unknown",i));return o({},t,{},r)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,mo=fo.current,co(fo,e),co(po,po.current),!0}function Co(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=yo(e,n,mo),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,t)}var Eo=i.unstable_runWithPriority,wo=i.unstable_scheduleCallback,xo=i.unstable_cancelCallback,ko=i.unstable_requestPaint,_o=i.unstable_now,So=i.unstable_getCurrentPriorityLevel,To=i.unstable_ImmediatePriority,Po=i.unstable_UserBlockingPriority,Bo=i.unstable_NormalPriority,Oo=i.unstable_LowPriority,No=i.unstable_IdlePriority,Mo={},Ro=i.unstable_shouldYield,zo=void 0!==ko?ko:function(){},Io=null,Fo=null,jo=!1,$o=_o(),Do=1e4>$o?_o:function(){return _o()-$o};function Lo(){switch(So()){case To:return 99;case Po:return 98;case Bo:return 97;case Oo:return 96;case No:return 95;default:throw Error(a(332))}}function Uo(e){switch(e){case 99:return To;case 98:return Po;case 97:return Bo;case 96:return Oo;case 95:return No;default:throw Error(a(332))}}function Wo(e,n){return e=Uo(e),Eo(e,n)}function Go(e,n,t){return e=Uo(e),wo(e,n,t)}function Ho(e){return null===Io?(Io=[e],Fo=wo(To,Vo)):Io.push(e),Mo}function qo(){if(null!==Fo){var e=Fo;Fo=null,xo(e)}Vo()}function Vo(){if(!jo&&null!==Io){jo=!0;var e=0;try{var n=Io;Wo(99,(function(){for(;e<n.length;e++){var t=n[e];do{t=t(!0)}while(null!==t)}})),Io=null}catch(n){throw null!==Io&&(Io=Io.slice(e+1)),wo(To,qo),n}finally{jo=!1}}}function Qo(e,n,t){return 1073741821-(1+((1073741821-e+n/10)/(t/=10)|0))*t}function Yo(e,n){if(e&&e.defaultProps)for(var t in n=o({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}var Ko={current:null},Xo=null,Jo=null,Zo=null;function ei(){Zo=Jo=Xo=null}function ni(e){var n=Ko.current;uo(Ko),e.type._context._currentValue=n}function ti(e,n){for(;null!==e;){var t=e.alternate;if(e.childExpirationTime<n)e.childExpirationTime=n,null!==t&&t.childExpirationTime<n&&(t.childExpirationTime=n);else{if(!(null!==t&&t.childExpirationTime<n))break;t.childExpirationTime=n}e=e.return}}function ri(e,n){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=n&&(Ba=!0),e.firstContext=null)}function oi(e,n){if(Zo!==e&&!1!==n&&0!==n)if("number"==typeof n&&1073741823!==n||(Zo=e,n=1073741823),n={context:e,observedBits:n,next:null},null===Jo){if(null===Xo)throw Error(a(308));Jo=n,Xo.dependencies={expirationTime:0,firstContext:n,responders:null}}else Jo=Jo.next=n;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,n){return(e={expirationTime:e,suspenseConfig:n,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,n){if(null!==(e=e.updateQueue)){var t=(e=e.shared).pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}}function si(e,n){var t=e.alternate;null!==t&&li(t,e),null===(t=(e=e.updateQueue).baseQueue)?(e.baseQueue=n.next=n,n.next=n):(n.next=t.next,t.next=n)}function fi(e,n,t,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var u=a.next;a.next=l.next,l.next=u}a=l,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==a){u=a.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((l=m.expirationTime)<r){var A={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=A,f=c):p=p.next=A,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),iu(l,m.suspenseConfig);e:{var h=e,g=m;switch(l=n,A=t,g.tag){case 1:if("function"==typeof(h=g.payload)){c=h.call(A,c,l);break e}c=h;break e;case 3:h.effectTag=-4097&h.effectTag|64;case 0:if(null==(l="function"==typeof(h=g.payload)?h.call(A,c,l):h))break e;c=o({},c,l);break e;case 2:ii=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[m]:l.push(m))}if(null===(m=m.next)||m===u){if(null===(l=i.shared.pending))break;m=a.next=l.next,l.next=u,i.baseQueue=a=l,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,au(s),e.expirationTime=s,e.memoizedState=c}}function di(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=t,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var pi=K.ReactCurrentBatchConfig,mi=(new r.Component).refs;function Ai(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:o({},n,t),e.memoizedState=t,0===e.expirationTime&&(e.updateQueue.baseState=t)}var hi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternalFiber;var r=ql(),o=pi.suspense;(o=ui(r=Vl(r,e,o),o)).payload=n,null!=t&&(o.callback=t),ci(e,o),Ql(e,r)},enqueueReplaceState:function(e,n,t){e=e._reactInternalFiber;var r=ql(),o=pi.suspense;(o=ui(r=Vl(r,e,o),o)).tag=1,o.payload=n,null!=t&&(o.callback=t),ci(e,o),Ql(e,r)},enqueueForceUpdate:function(e,n){e=e._reactInternalFiber;var t=ql(),r=pi.suspense;(r=ui(t=Vl(t,e,r),r)).tag=2,null!=n&&(r.callback=n),ci(e,r),Ql(e,t)}};function gi(e,n,t,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!n.prototype||!n.prototype.isPureReactComponent||(!$r(t,r)||!$r(o,i))}function vi(e,n,t){var r=!1,o=so,i=n.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=ho(n)?mo:fo.current,i=(r=null!=(r=n.contextTypes))?Ao(e,o):so),n=new n(t,i),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=hi,e.stateNode=n,n._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),n}function yi(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&hi.enqueueReplaceState(n,n.state,null)}function bi(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=mi,ai(e);var i=n.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=ho(n)?mo:fo.current,o.context=Ao(e,i)),fi(e,t,o,r),o.state=e.memoizedState,"function"==typeof(i=n.getDerivedStateFromProps)&&(Ai(e,n,i,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&hi.enqueueReplaceState(o,o.state,null),fi(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ci=Array.isArray;function Ei(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:((n=function(e){var n=r.refs;n===mi&&(n=r.refs={}),null===e?delete n[o]:n[o]=e})._stringRef=o,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function wi(e,n){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(n)?"object with keys {"+Object.keys(n).join(", ")+"}":n,""))}function xi(e){function n(n,t){if(e){var r=n.lastEffect;null!==r?(r.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t,t.nextEffect=null,t.effectTag=8}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=_u(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.effectTag=2,t):r:(n.effectTag=2,t):t}function l(n){return e&&null===n.alternate&&(n.effectTag=2),n}function u(e,n,t,r){return null===n||6!==n.tag?((n=Pu(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){return null!==n&&n.elementType===t.type?((r=o(n,t.props)).ref=Ei(e,n,t),r.return=e,r):((r=Su(t.type,t.key,t.props,null,e.mode,r)).ref=Ei(e,n,t),r.return=e,r)}function s(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Bu(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function f(e,n,t,r,i){return null===n||7!==n.tag?((n=Tu(t,e.mode,r,i)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n||"number"==typeof n)return(n=Pu(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return(t=Su(n.type,n.key,n.props,null,e.mode,t)).ref=Ei(e,null,n),t.return=e,t;case ne:return(n=Bu(n,e.mode,t)).return=e,n}if(Ci(n)||Ae(n))return(n=Tu(n,e.mode,t,null)).return=e,n;wi(e,n)}return null}function p(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t||"number"==typeof t)return null!==o?null:u(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return t.key===o?t.type===te?f(e,n,t.props.children,r,o):c(e,n,t,r):null;case ne:return t.key===o?s(e,n,t,r):null}if(Ci(t)||Ae(t))return null!==o?null:f(e,n,t,r,null);wi(e,t)}return null}function m(e,n,t,r,o){if("string"==typeof r||"number"==typeof r)return u(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?t:r.key)||null,r.type===te?f(n,e,r.props.children,o,r.key):c(n,e,r,o);case ne:return s(n,e=e.get(null===r.key?t:r.key)||null,r,o)}if(Ci(r)||Ae(r))return f(n,e=e.get(t)||null,r,o,null);wi(n,r)}return null}function A(o,a,l,u){for(var c=null,s=null,f=a,A=a=0,h=null;null!==f&&A<l.length;A++){f.index>A?(h=f,f=null):h=f.sibling;var g=p(o,f,l[A],u);if(null===g){null===f&&(f=h);break}e&&f&&null===g.alternate&&n(o,f),a=i(g,a,A),null===s?c=g:s.sibling=g,s=g,f=h}if(A===l.length)return t(o,f),c;if(null===f){for(;A<l.length;A++)null!==(f=d(o,l[A],u))&&(a=i(f,a,A),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);A<l.length;A++)null!==(h=m(f,o,A,l[A],u))&&(e&&null!==h.alternate&&f.delete(null===h.key?A:h.key),a=i(h,a,A),null===s?c=h:s.sibling=h,s=h);return e&&f.forEach((function(e){return n(o,e)})),c}function h(o,l,u,c){var s=Ae(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,A=l,h=l=0,g=null,v=u.next();null!==A&&!v.done;h++,v=u.next()){A.index>h?(g=A,A=null):g=A.sibling;var y=p(o,A,v.value,c);if(null===y){null===A&&(A=g);break}e&&A&&null===y.alternate&&n(o,A),l=i(y,l,h),null===f?s=y:f.sibling=y,f=y,A=g}if(v.done)return t(o,A),s;if(null===A){for(;!v.done;h++,v=u.next())null!==(v=d(o,v.value,c))&&(l=i(v,l,h),null===f?s=v:f.sibling=v,f=v);return s}for(A=r(o,A);!v.done;h++,v=u.next())null!==(v=m(A,o,h,v.value,c))&&(e&&null!==v.alternate&&A.delete(null===v.key?h:v.key),l=i(v,l,h),null===f?s=v:f.sibling=v,f=v);return e&&A.forEach((function(e){return n(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===te&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===te){t(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){t(e,c.sibling),(r=o(c,i.props)).ref=Ei(e,c,i),r.return=e,e=r;break e}}t(e,c);break}n(e,c),c=c.sibling}i.type===te?((r=Tu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Su(i.type,i.key,i.props,null,e.mode,u)).ref=Ei(e,r,i),u.return=e,e=u)}return l(e);case ne:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){t(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}t(e,r);break}n(e,r),r=r.sibling}(r=Bu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(t(e,r.sibling),(r=o(r,i)).return=e,e=r):(t(e,r),(r=Pu(i,e.mode,u)).return=e,e=r),l(e);if(Ci(i))return A(e,r,i,u);if(Ae(i))return h(e,r,i,u);if(s&&wi(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return t(e,r)}}var ki=xi(!0),_i=xi(!1),Si={},Ti={current:Si},Pi={current:Si},Bi={current:Si};function Oi(e){if(e===Si)throw Error(a(174));return e}function Ni(e,n){switch(co(Bi,n),co(Pi,e),co(Ti,Si),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:Fe(null,"");break;default:n=Fe(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}uo(Ti),co(Ti,n)}function Mi(){uo(Ti),uo(Pi),uo(Bi)}function Ri(e){Oi(Bi.current);var n=Oi(Ti.current),t=Fe(n,e.type);n!==t&&(co(Pi,e),co(Ti,t))}function zi(e){Pi.current===e&&(uo(Ti),uo(Pi))}var Ii={current:0};function Fi(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(64&n.effectTag))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}function ji(e,n){return{responder:e,props:n}}var $i=K.ReactCurrentDispatcher,Di=K.ReactCurrentBatchConfig,Li=0,Ui=null,Wi=null,Gi=null,Hi=!1;function qi(){throw Error(a(321))}function Vi(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!Fr(e[t],n[t]))return!1;return!0}function Qi(e,n,t,r,o,i){if(Li=i,Ui=n,n.memoizedState=null,n.updateQueue=null,n.expirationTime=0,$i.current=null===e||null===e.memoizedState?ga:va,e=t(r,o),n.expirationTime===Li){i=0;do{if(n.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Gi=Wi=null,n.updateQueue=null,$i.current=ya,e=t(r,o)}while(n.expirationTime===Li)}if($i.current=ha,n=null!==Wi&&null!==Wi.next,Li=0,Gi=Wi=Ui=null,Hi=!1,n)throw Error(a(300));return e}function Yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Gi?Ui.memoizedState=Gi=e:Gi=Gi.next=e,Gi}function Ki(){if(null===Wi){var e=Ui.alternate;e=null!==e?e.memoizedState:null}else e=Wi.next;var n=null===Gi?Ui.memoizedState:Gi.next;if(null!==n)Gi=n,Wi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Wi=e).memoizedState,baseState:Wi.baseState,baseQueue:Wi.baseQueue,queue:Wi.queue,next:null},null===Gi?Ui.memoizedState=Gi=e:Gi=Gi.next=e}return Gi}function Xi(e,n){return"function"==typeof n?n(e):n}function Ji(e){var n=Ki(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=Wi,o=r.baseQueue,i=t.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,t.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=i=null,c=o;do{var s=c.expirationTime;if(s<Li){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,i=r):u=u.next=f,s>Ui.expirationTime&&(Ui.expirationTime=s,au(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=l,Fr(r,n.memoizedState)||(Ba=!0),n.memoizedState=r,n.baseState=i,n.baseQueue=u,t.lastRenderedState=r}return[n.memoizedState,t.dispatch]}function Zi(e){var n=Ki(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,i=n.memoizedState;if(null!==o){t.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Fr(i,n.memoizedState)||(Ba=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function ea(e){var n=Yi();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=Aa.bind(null,Ui,e),[n.memoizedState,e]}function na(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=Ui.updateQueue)?(n={lastEffect:null},Ui.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function ta(){return Ki().memoizedState}function ra(e,n,t,r){var o=Yi();Ui.effectTag|=e,o.memoizedState=na(1|n,t,void 0,void 0===r?null:r)}function oa(e,n,t,r){var o=Ki();r=void 0===r?null:r;var i=void 0;if(null!==Wi){var a=Wi.memoizedState;if(i=a.destroy,null!==r&&Vi(r,a.deps))return void na(n,t,i,r)}Ui.effectTag|=e,o.memoizedState=na(1|n,t,i,r)}function ia(e,n){return ra(516,4,e,n)}function aa(e,n){return oa(516,4,e,n)}function la(e,n){return oa(4,2,e,n)}function ua(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function ca(e,n,t){return t=null!=t?t.concat([e]):null,oa(4,2,ua.bind(null,n,e),t)}function sa(){}function fa(e,n){return Yi().memoizedState=[e,void 0===n?null:n],e}function da(e,n){var t=Ki();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Vi(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function pa(e,n){var t=Ki();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Vi(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function ma(e,n,t){var r=Lo();Wo(98>r?98:r,(function(){e(!0)})),Wo(97<r?97:r,(function(){var r=Di.suspense;Di.suspense=void 0===n?null:n;try{e(!1),t()}finally{Di.suspense=r}}))}function Aa(e,n,t){var r=ql(),o=pi.suspense;o={expirationTime:r=Vl(r,e,o),suspenseConfig:o,action:t,eagerReducer:null,eagerState:null,next:null};var i=n.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),n.pending=o,i=e.alternate,e===Ui||null!==i&&i===Ui)Hi=!0,o.expirationTime=Li,Ui.expirationTime=Li;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=n.lastRenderedReducer))try{var a=n.lastRenderedState,l=i(a,t);if(o.eagerReducer=i,o.eagerState=l,Fr(l,a))return}catch(e){}Ql(e,r)}}var ha={readContext:oi,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useResponder:qi,useDeferredValue:qi,useTransition:qi},ga={readContext:oi,useCallback:fa,useContext:oi,useEffect:ia,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,ra(4,2,ua.bind(null,n,e),t)},useLayoutEffect:function(e,n){return ra(4,2,e,n)},useMemo:function(e,n){var t=Yi();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Yi();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:n}).dispatch=Aa.bind(null,Ui,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yi().memoizedState=e},useState:ea,useDebugValue:sa,useResponder:ji,useDeferredValue:function(e,n){var t=ea(e),r=t[0],o=t[1];return ia((function(){var t=Di.suspense;Di.suspense=void 0===n?null:n;try{o(e)}finally{Di.suspense=t}}),[e,n]),r},useTransition:function(e){var n=ea(!1),t=n[0];return n=n[1],[fa(ma.bind(null,n,e),[n,e]),t]}},va={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Ji,useRef:ta,useState:function(){return Ji(Xi)},useDebugValue:sa,useResponder:ji,useDeferredValue:function(e,n){var t=Ji(Xi),r=t[0],o=t[1];return aa((function(){var t=Di.suspense;Di.suspense=void 0===n?null:n;try{o(e)}finally{Di.suspense=t}}),[e,n]),r},useTransition:function(e){var n=Ji(Xi),t=n[0];return n=n[1],[da(ma.bind(null,n,e),[n,e]),t]}},ya={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Zi,useRef:ta,useState:function(){return Zi(Xi)},useDebugValue:sa,useResponder:ji,useDeferredValue:function(e,n){var t=Zi(Xi),r=t[0],o=t[1];return aa((function(){var t=Di.suspense;Di.suspense=void 0===n?null:n;try{o(e)}finally{Di.suspense=t}}),[e,n]),r},useTransition:function(e){var n=Zi(Xi),t=n[0];return n=n[1],[da(ma.bind(null,n,e),[n,e]),t]}},ba=null,Ca=null,Ea=!1;function wa(e,n){var t=xu(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=n,t.return=e,t.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t}function xa(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,!0);case 13:default:return!1}}function ka(e){if(Ea){var n=Ca;if(n){var t=n;if(!xa(e,n)){if(!(n=Ct(t.nextSibling))||!xa(e,n))return e.effectTag=-1025&e.effectTag|2,Ea=!1,void(ba=e);wa(ba,t)}ba=e,Ca=Ct(n.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ea=!1,ba=e}}function _a(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ba=e}function Sa(e){if(e!==ba)return!1;if(!Ea)return _a(e),Ea=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!vt(n,e.memoizedProps))for(n=Ca;n;)wa(e,n),n=Ct(n.nextSibling);if(_a(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){Ca=Ct(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}Ca=null}}else Ca=ba?Ct(e.stateNode.nextSibling):null;return!0}function Ta(){Ca=ba=null,Ea=!1}var Pa=K.ReactCurrentOwner,Ba=!1;function Oa(e,n,t,r){n.child=null===e?_i(n,null,t,r):ki(n,e.child,t,r)}function Na(e,n,t,r,o){t=t.render;var i=n.ref;return ri(n,o),r=Qi(e,n,t,r,i,o),null===e||Ba?(n.effectTag|=1,Oa(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Qa(e,n,o))}function Ma(e,n,t,r,o,i){if(null===e){var a=t.type;return"function"!=typeof a||ku(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Su(t.type,null,r,null,n.mode,i)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,Ra(e,n,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(t=null!==(t=t.compare)?t:$r)(o,r)&&e.ref===n.ref)?Qa(e,n,i):(n.effectTag|=1,(e=_u(a,r)).ref=n.ref,e.return=n,n.child=e)}function Ra(e,n,t,r,o,i){return null!==e&&$r(e.memoizedProps,r)&&e.ref===n.ref&&(Ba=!1,o<i)?(n.expirationTime=e.expirationTime,Qa(e,n,i)):Ia(e,n,t,r,i)}function za(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.effectTag|=128)}function Ia(e,n,t,r,o){var i=ho(t)?mo:fo.current;return i=Ao(n,i),ri(n,o),t=Qi(e,n,t,r,i,o),null===e||Ba?(n.effectTag|=1,Oa(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Qa(e,n,o))}function Fa(e,n,t,r,o){if(ho(t)){var i=!0;bo(n)}else i=!1;if(ri(n,o),null===n.stateNode)null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),vi(n,t,r),bi(n,t,r,o),r=!0;else if(null===e){var a=n.stateNode,l=n.memoizedProps;a.props=l;var u=a.context,c=t.contextType;"object"==typeof c&&null!==c?c=oi(c):c=Ao(n,c=ho(t)?mo:fo.current);var s=t.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&yi(n,a,r,c),ii=!1;var d=n.memoizedState;a.state=d,fi(n,r,a,o),u=n.memoizedState,l!==r||d!==u||po.current||ii?("function"==typeof s&&(Ai(n,t,s,r),u=n.memoizedState),(l=ii||gi(n,t,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.effectTag|=4)):("function"==typeof a.componentDidMount&&(n.effectTag|=4),n.memoizedProps=r,n.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(n.effectTag|=4),r=!1)}else a=n.stateNode,li(e,n),l=n.memoizedProps,a.props=n.type===n.elementType?l:Yo(n.type,l),u=a.context,"object"==typeof(c=t.contextType)&&null!==c?c=oi(c):c=Ao(n,c=ho(t)?mo:fo.current),(f="function"==typeof(s=t.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&yi(n,a,r,c),ii=!1,u=n.memoizedState,a.state=u,fi(n,r,a,o),d=n.memoizedState,l!==r||u!==d||po.current||ii?("function"==typeof s&&(Ai(n,t,s,r),d=n.memoizedState),(s=ii||gi(n,t,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(n.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=256),n.memoizedProps=r,n.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(n.effectTag|=256),r=!1);return ja(e,n,t,r,i,o)}function ja(e,n,t,r,o,i){za(e,n);var a=0!=(64&n.effectTag);if(!r&&!a)return o&&Co(n,t,!1),Qa(e,n,i);r=n.stateNode,Pa.current=n;var l=a&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.effectTag|=1,null!==e&&a?(n.child=ki(n,e.child,null,i),n.child=ki(n,null,l,i)):Oa(e,n,l,i),n.memoizedState=r.state,o&&Co(n,t,!0),n.child}function $a(e){var n=e.stateNode;n.pendingContext?vo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&vo(0,n.context,!1),Ni(e,n.containerInfo)}var Da,La,Ua,Wa={dehydrated:null,retryTime:0};function Ga(e,n,t){var r,o=n.mode,i=n.pendingProps,a=Ii.current,l=!1;if((r=0!=(64&n.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,n.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),co(Ii,1&a),null===e){if(void 0!==i.fallback&&ka(n),l){if(l=i.fallback,(i=Tu(null,o,0,null)).return=n,0==(2&n.mode))for(e=null!==n.memoizedState?n.child.child:n.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(t=Tu(l,o,t,null)).return=n,i.sibling=t,n.memoizedState=Wa,n.child=i,t}return o=i.children,n.memoizedState=null,n.child=_i(n,null,o,t)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(t=_u(e,e.pendingProps)).return=n,0==(2&n.mode)&&(l=null!==n.memoizedState?n.child.child:n.child)!==e.child)for(t.child=l;null!==l;)l.return=t,l=l.sibling;return(o=_u(o,i)).return=n,t.sibling=o,t.childExpirationTime=0,n.memoizedState=Wa,n.child=t,o}return t=ki(n,e.child,i.children,t),n.memoizedState=null,n.child=t}if(e=e.child,l){if(l=i.fallback,(i=Tu(null,o,0,null)).return=n,i.child=e,null!==e&&(e.return=i),0==(2&n.mode))for(e=null!==n.memoizedState?n.child.child:n.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(t=Tu(l,o,t,null)).return=n,i.sibling=t,t.effectTag|=2,i.childExpirationTime=0,n.memoizedState=Wa,n.child=i,t}return n.memoizedState=null,n.child=ki(n,e,i.children,t)}function Ha(e,n){e.expirationTime<n&&(e.expirationTime=n);var t=e.alternate;null!==t&&t.expirationTime<n&&(t.expirationTime=n),ti(e.return,n)}function qa(e,n,t,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Va(e,n,t){var r=n.pendingProps,o=r.revealOrder,i=r.tail;if(Oa(e,n,r.children,t),0!=(2&(r=Ii.current)))r=1&r|2,n.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ha(e,t);else if(19===e.tag)Ha(e,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Ii,r),0==(2&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===Fi(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),qa(n,!1,o,t,i,n.lastEffect);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Fi(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}qa(n,!0,t,null,i,n.lastEffect);break;case"together":qa(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Qa(e,n,t){null!==e&&(n.dependencies=e.dependencies);var r=n.expirationTime;if(0!==r&&au(r),n.childExpirationTime<t)return null;if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=_u(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=_u(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Ya(e,n){switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ka(e,n,t){var r=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(n.type)&&go(),null;case 3:return Mi(),uo(po),uo(fo),(t=n.stateNode).pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==e&&null!==e.child||!Sa(n)||(n.effectTag|=4),null;case 5:zi(n),t=Oi(Bi.current);var i=n.type;if(null!==e&&null!=n.stateNode)La(e,n,i,r,t),e.ref!==n.ref&&(n.effectTag|=128);else{if(!r){if(null===n.stateNode)throw Error(a(166));return null}if(e=Oi(Ti.current),Sa(n)){r=n.stateNode,i=n.type;var l=n.memoizedProps;switch(r[xt]=n,r[kt]=l,i){case"iframe":case"object":case"embed":Qn("load",r);break;case"video":case"audio":for(e=0;e<Ke.length;e++)Qn(Ke[e],r);break;case"source":Qn("error",r);break;case"img":case"image":case"link":Qn("error",r),Qn("load",r);break;case"form":Qn("reset",r),Qn("submit",r);break;case"details":Qn("toggle",r);break;case"input":we(r,l),Qn("invalid",r),ut(t,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Qn("invalid",r),ut(t,"onChange");break;case"textarea":Oe(r,l),Qn("invalid",r),ut(t,"onChange")}for(var u in it(i,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):x.hasOwnProperty(u)&&null!=c&&ut(t,u)}switch(i){case"input":be(r),_e(r,l,!0);break;case"textarea":be(r),Me(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=ct)}t=e,n.updateQueue=t,null!==t&&(n.effectTag|=4)}else{switch(u=9===t.nodeType?t:t.ownerDocument,e===lt&&(e=Ie(i)),e===lt?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[xt]=n,e[kt]=r,Da(e,n),n.stateNode=e,u=at(i,r),i){case"iframe":case"object":case"embed":Qn("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ke.length;c++)Qn(Ke[c],e);c=r;break;case"source":Qn("error",e),c=r;break;case"img":case"image":case"link":Qn("error",e),Qn("load",e),c=r;break;case"form":Qn("reset",e),Qn("submit",e),c=r;break;case"details":Qn("toggle",e),c=r;break;case"input":we(e,r),c=Ee(e,r),Qn("invalid",e),ut(t,"onChange");break;case"option":c=Te(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Qn("invalid",e),ut(t,"onChange");break;case"textarea":Oe(e,r),c=Be(e,r),Qn("invalid",e),ut(t,"onChange");break;default:c=r}it(i,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?rt(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&$e(e,f):"children"===l?"string"==typeof f?("textarea"!==i||""!==f)&&De(e,f):"number"==typeof f&&De(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?null!=f&&ut(t,l):null!=f&&X(e,l,f,u))}switch(i){case"input":be(e),_e(e,r,!1);break;case"textarea":be(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(t=r.value)?Pe(e,!!r.multiple,t,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=ct)}gt(i,r)&&(n.effectTag|=4)}null!==n.ref&&(n.effectTag|=128)}return null;case 6:if(e&&null!=n.stateNode)Ua(0,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));t=Oi(Bi.current),Oi(Ti.current),Sa(n)?(t=n.stateNode,r=n.memoizedProps,t[xt]=n,t.nodeValue!==r&&(n.effectTag|=4)):((t=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[xt]=n,n.stateNode=t)}return null;case 13:return uo(Ii),r=n.memoizedState,0!=(64&n.effectTag)?(n.expirationTime=t,n):(t=null!==r,r=!1,null===e?void 0!==n.memoizedProps.fallback&&Sa(n):(r=null!==(i=e.memoizedState),t||null===i||null!==(i=e.child.sibling)&&(null!==(l=n.firstEffect)?(n.firstEffect=i,i.nextEffect=l):(n.firstEffect=n.lastEffect=i,i.nextEffect=null),i.effectTag=8)),t&&!r&&0!=(2&n.mode)&&(null===e&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&Ii.current)?Sl===bl&&(Sl=Cl):(Sl!==bl&&Sl!==Cl||(Sl=El),0!==Nl&&null!==xl&&(Mu(xl,_l),Ru(xl,Nl)))),(t||r)&&(n.effectTag|=4),null);case 4:return Mi(),null;case 10:return ni(n),null;case 17:return ho(n.type)&&go(),null;case 19:if(uo(Ii),null===(r=n.memoizedState))return null;if(i=0!=(64&n.effectTag),null===(l=r.rendering)){if(i)Ya(r,!1);else if(Sl!==bl||null!==e&&0!=(64&e.effectTag))for(l=n.child;null!==l;){if(null!==(e=Fi(l))){for(n.effectTag|=64,Ya(r,!1),null!==(i=e.updateQueue)&&(n.updateQueue=i,n.effectTag|=4),null===r.lastEffect&&(n.firstEffect=null),n.lastEffect=r.lastEffect,r=n.child;null!==r;)l=t,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return co(Ii,1&Ii.current|2),n.child}l=l.sibling}}else{if(!i)if(null!==(e=Fi(l))){if(n.effectTag|=64,i=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.effectTag|=4),Ya(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(n=n.lastEffect=r.lastEffect)&&(n.nextEffect=null),null}else 2*Do()-r.renderingStartTime>r.tailExpiration&&1<t&&(n.effectTag|=64,i=!0,Ya(r,!1),n.expirationTime=n.childExpirationTime=t-1);r.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=r.last)?t.sibling=l:n.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Do()+500),t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=n.lastEffect,r.renderingStartTime=Do(),t.sibling=null,n=Ii.current,co(Ii,i?1&n|2:1&n),t):null}throw Error(a(156,n.tag))}function Xa(e){switch(e.tag){case 1:ho(e.type)&&go();var n=e.effectTag;return 4096&n?(e.effectTag=-4097&n|64,e):null;case 3:if(Mi(),uo(po),uo(fo),0!=(64&(n=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&n|64,e;case 5:return zi(e),null;case 13:return uo(Ii),4096&(n=e.effectTag)?(e.effectTag=-4097&n|64,e):null;case 19:return uo(Ii),null;case 4:return Mi(),null;case 10:return ni(e),null;default:return null}}function Ja(e,n){return{value:e,source:n,stack:ge(n)}}Da=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},La=function(e,n,t,r,i){var a=e.memoizedProps;if(a!==r){var l,u,c=n.stateNode;switch(Oi(Ti.current),e=null,t){case"input":a=Ee(c,a),r=Ee(c,r),e=[];break;case"option":a=Te(c,a),r=Te(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Be(c,a),r=Be(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=ct)}for(l in it(t,r),t=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(t||(t={}),t[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(x.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(t||(t={}),t[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(t||(t={}),t[u]=s[u])}else t||(e||(e=[]),e.push(l,t)),t=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(x.hasOwnProperty(l)?(null!=s&&ut(i,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}t&&(e=e||[]).push("style",t),i=e,(n.updateQueue=i)&&(n.effectTag|=4)}},Ua=function(e,n,t,r){t!==r&&(n.effectTag|=4)};var Za="function"==typeof WeakSet?WeakSet:Set;function el(e,n){var t=n.source,r=n.stack;null===r&&null!==t&&(r=ge(t)),null!==t&&he(t.type),n=n.value,null!==e&&1===e.tag&&he(e.type);try{console.error(n)}catch(e){setTimeout((function(){throw e}))}}function nl(e){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){vu(e,n)}else n.current=null}function tl(e,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&n.effectTag&&null!==e){var t=e.memoizedProps,r=e.memoizedState;n=(e=n.stateNode).getSnapshotBeforeUpdate(n.elementType===n.type?t:Yo(n.type,t),r),e.__reactInternalSnapshotBeforeUpdate=n}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.destroy;t.destroy=void 0,void 0!==r&&r()}t=t.next}while(t!==n)}}function ol(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function il(e,n,t){switch(t.tag){case 0:case 11:case 15:case 22:return void ol(3,t);case 1:if(e=t.stateNode,4&t.effectTag)if(null===n)e.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:Yo(t.type,n.memoizedProps);e.componentDidUpdate(r,n.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(n=t.updateQueue)&&di(t,n,e));case 3:if(null!==(n=t.updateQueue)){if(e=null,null!==t.child)switch(t.child.tag){case 5:e=t.child.stateNode;break;case 1:e=t.child.stateNode}di(t,n,e)}return;case 5:return e=t.stateNode,void(null===n&&4&t.effectTag&&gt(t.type,t.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&Fn(t)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,n,t){switch("function"==typeof Eu&&Eu(n),n.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=n.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wo(97<t?97:t,(function(){var e=r;do{var t=e.destroy;if(void 0!==t){var o=n;try{t()}catch(e){vu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:nl(n),"function"==typeof(t=n.stateNode).componentWillUnmount&&function(e,n){try{n.props=e.memoizedProps,n.state=e.memoizedState,n.componentWillUnmount()}catch(n){vu(e,n)}}(n,t);break;case 5:nl(n);break;case 4:sl(e,n,t)}}function ll(e){var n=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==n&&ll(n)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var n=e.return;null!==n;){if(ul(n)){var t=n;break e}n=n.return}throw Error(a(160))}switch(n=t.stateNode,t.tag){case 5:var r=!1;break;case 3:case 4:n=n.containerInfo,r=!0;break;default:throw Error(a(161))}16&t.effectTag&&(De(n,""),t.effectTag&=-17);e:n:for(t=e;;){for(;null===t.sibling;){if(null===t.return||ul(t.return)){t=null;break e}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.effectTag)continue n;if(null===t.child||4===t.tag)continue n;t.child.return=t,t=t.child}if(!(2&t.effectTag)){t=t.stateNode;break e}}r?function e(n,t,r){var o=n.tag,i=5===o||6===o;if(i)n=i?n.stateNode:n.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(n,t):r.insertBefore(n,t):(8===r.nodeType?(t=r.parentNode).insertBefore(n,r):(t=r).appendChild(n),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=ct));else if(4!==o&&null!==(n=n.child))for(e(n,t,r),n=n.sibling;null!==n;)e(n,t,r),n=n.sibling}(e,t,n):function e(n,t,r){var o=n.tag,i=5===o||6===o;if(i)n=i?n.stateNode:n.stateNode.instance,t?r.insertBefore(n,t):r.appendChild(n);else if(4!==o&&null!==(n=n.child))for(e(n,t,r),n=n.sibling;null!==n;)e(n,t,r),n=n.sibling}(e,t,n)}function sl(e,n,t){for(var r,o,i=n,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=t,f=c;;)if(al(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,t),null!==i.child){i.child.return=i,i=i.child;continue}if(i===n)break;for(;null===i.sibling;){if(null===i.return||i.return===n)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function fl(e,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,n);case 1:return;case 5:var t=n.stateNode;if(null!=t){var r=n.memoizedProps,o=null!==e?e.memoizedProps:r;e=n.type;var i=n.updateQueue;if(n.updateQueue=null,null!==i){for(t[kt]=r,"input"===e&&"radio"===r.type&&null!=r.name&&xe(t,r),at(e,o),n=at(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?rt(t,u):"dangerouslySetInnerHTML"===l?$e(t,u):"children"===l?De(t,u):X(t,l,u,n)}switch(e){case"input":ke(t,r);break;case"textarea":Ne(t,r);break;case"select":n=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(t,!!r.multiple,e,!1):n!==!!r.multiple&&(null!=r.defaultValue?Pe(t,!!r.multiple,r.defaultValue,!0):Pe(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===n.stateNode)throw Error(a(162));return void(n.stateNode.nodeValue=n.memoizedProps);case 3:return void((n=n.stateNode).hydrate&&(n.hydrate=!1,Fn(n.containerInfo)));case 12:return;case 13:if(t=n,null===n.memoizedState?r=!1:(r=!0,t=n.child,Rl=Do()),null!==t)e:for(e=t;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tt("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(n);case 19:return void dl(n);case 17:return}throw Error(a(163))}function dl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Za),n.forEach((function(n){var r=bu.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,n,t){(t=ui(t,null)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Il||(Il=!0,Fl=r),el(e,n)},t}function Al(e,n,t){(t=ui(t,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return el(e,n),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(t.callback=function(){"function"!=typeof r&&(null===jl?jl=new Set([this]):jl.add(this),el(e,n));var t=n.stack;this.componentDidCatch(n.value,{componentStack:null!==t?t:""})}),t}var hl,gl=Math.ceil,vl=K.ReactCurrentDispatcher,yl=K.ReactCurrentOwner,bl=0,Cl=3,El=4,wl=0,xl=null,kl=null,_l=0,Sl=bl,Tl=null,Pl=1073741823,Bl=1073741823,Ol=null,Nl=0,Ml=!1,Rl=0,zl=null,Il=!1,Fl=null,jl=null,$l=!1,Dl=null,Ll=90,Ul=null,Wl=0,Gl=null,Hl=0;function ql(){return 0!=(48&wl)?1073741821-(Do()/10|0):0!==Hl?Hl:Hl=1073741821-(Do()/10|0)}function Vl(e,n,t){if(0==(2&(n=n.mode)))return 1073741823;var r=Lo();if(0==(4&n))return 99===r?1073741823:1073741822;if(0!=(16&wl))return _l;if(null!==t)e=Qo(e,0|t.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Qo(e,150,100);break;case 97:case 96:e=Qo(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==xl&&e===_l&&--e,e}function Ql(e,n){if(50<Wl)throw Wl=0,Gl=null,Error(a(185));if(null!==(e=Yl(e,n))){var t=Lo();1073741823===n?0!=(8&wl)&&0==(48&wl)?Zl(e):(Xl(e),0===wl&&qo()):Xl(e),0==(4&wl)||98!==t&&99!==t||(null===Ul?Ul=new Map([[e,n]]):(void 0===(t=Ul.get(e))||t>n)&&Ul.set(e,n))}}function Yl(e,n){e.expirationTime<n&&(e.expirationTime=n);var t=e.alternate;null!==t&&t.expirationTime<n&&(t.expirationTime=n);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(t=r.alternate,r.childExpirationTime<n&&(r.childExpirationTime=n),null!==t&&t.childExpirationTime<n&&(t.childExpirationTime=n),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(xl===o&&(au(n),Sl===El&&Mu(o,_l)),Ru(o,n)),o}function Kl(e){var n=e.lastExpiredTime;if(0!==n)return n;if(!Nu(e,n=e.firstPendingTime))return n;var t=e.lastPingedTime;return 2>=(e=t>(e=e.nextKnownPendingLevel)?t:e)&&n!==e?0:e}function Xl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ho(Zl.bind(null,e));else{var n=Kl(e),t=e.callbackNode;if(0===n)null!==t&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=ql();if(1073741823===n?r=99:1===n||2===n?r=95:r=0>=(r=10*(1073741821-n)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==t){var o=e.callbackPriority;if(e.callbackExpirationTime===n&&o>=r)return;t!==Mo&&xo(t)}e.callbackExpirationTime=n,e.callbackPriority=r,n=1073741823===n?Ho(Zl.bind(null,e)):Go(r,Jl.bind(null,e),{timeout:10*(1073741821-n)-Do()}),e.callbackNode=n}}}function Jl(e,n){if(Hl=0,n)return zu(e,n=ql()),Xl(e),null;var t=Kl(e);if(0!==t){if(n=e.callbackNode,0!=(48&wl))throw Error(a(327));if(Au(),e===xl&&t===_l||tu(e,t),null!==kl){var r=wl;wl|=16;for(var o=ou();;)try{uu();break}catch(n){ru(e,n)}if(ei(),wl=r,vl.current=o,1===Sl)throw n=Tl,tu(e,t),Mu(e,t),Xl(e),n;if(null===kl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,r=Sl,xl=null,r){case bl:case 1:throw Error(a(345));case 2:zu(e,2<t?2:t);break;case Cl:if(Mu(e,t),t===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Pl&&10<(o=Rl+500-Do())){if(Ml){var i=e.lastPingedTime;if(0===i||i>=t){e.lastPingedTime=t,tu(e,t);break}}if(0!==(i=Kl(e))&&i!==t)break;if(0!==r&&r!==t){e.lastPingedTime=r;break}e.timeoutHandle=yt(du.bind(null,e),o);break}du(e);break;case El:if(Mu(e,t),t===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Ml&&(0===(o=e.lastPingedTime)||o>=t)){e.lastPingedTime=t,tu(e,t);break}if(0!==(o=Kl(e))&&o!==t)break;if(0!==r&&r!==t){e.lastPingedTime=r;break}if(1073741823!==Bl?r=10*(1073741821-Bl)-Do():1073741823===Pl?r=0:(r=10*(1073741821-Pl)-5e3,0>(r=(o=Do())-r)&&(r=0),(t=10*(1073741821-t)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*gl(r/1960))-r)&&(r=t)),10<r){e.timeoutHandle=yt(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Pl&&null!==Ol){i=Pl;var l=Ol;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Do()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Mu(e,t),e.timeoutHandle=yt(du.bind(null,e),r);break}}du(e);break;default:throw Error(a(329))}if(Xl(e),e.callbackNode===n)return Jl.bind(null,e)}}return null}function Zl(e){var n=e.lastExpiredTime;if(n=0!==n?n:1073741823,0!=(48&wl))throw Error(a(327));if(Au(),e===xl&&n===_l||tu(e,n),null!==kl){var t=wl;wl|=16;for(var r=ou();;)try{lu();break}catch(n){ru(e,n)}if(ei(),wl=t,vl.current=r,1===Sl)throw t=Tl,tu(e,n),Mu(e,n),Xl(e),t;if(null!==kl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,xl=null,du(e),Xl(e)}return null}function eu(e,n){var t=wl;wl|=1;try{return e(n)}finally{0===(wl=t)&&qo()}}function nu(e,n){var t=wl;wl&=-2,wl|=8;try{return e(n)}finally{0===(wl=t)&&qo()}}function tu(e,n){e.finishedWork=null,e.finishedExpirationTime=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,bt(t)),null!==kl)for(t=kl.return;null!==t;){var r=t;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&go();break;case 3:Mi(),uo(po),uo(fo);break;case 5:zi(r);break;case 4:Mi();break;case 13:case 19:uo(Ii);break;case 10:ni(r)}t=t.return}xl=e,kl=_u(e.current,null),_l=n,Sl=bl,Tl=null,Bl=Pl=1073741823,Ol=null,Nl=0,Ml=!1}function ru(e,n){for(;;){try{if(ei(),$i.current=ha,Hi)for(var t=Ui.memoizedState;null!==t;){var r=t.queue;null!==r&&(r.pending=null),t=t.next}if(Li=0,Gi=Wi=Ui=null,Hi=!1,null===kl||null===kl.return)return Sl=1,Tl=n,kl=null;e:{var o=e,i=kl.return,a=kl,l=n;if(n=_l,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&Ii.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var A=f.updateQueue;if(null===A){var h=new Set;h.add(u),f.updateQueue=h}else A.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var g=ui(1073741823,null);g.tag=2,ci(a,g)}a.expirationTime=1073741823;break e}l=void 0,a=n;var v=o.pingCache;if(null===v?(v=o.pingCache=new pl,l=new Set,v.set(u,l)):void 0===(l=v.get(u))&&(l=new Set,v.set(u,l)),!l.has(a)){l.add(a);var y=yu.bind(null,o,u,a);u.then(y,y)}f.effectTag|=4096,f.expirationTime=n;break e}f=f.return}while(null!==f);l=Error((he(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(a))}5!==Sl&&(Sl=2),l=Ja(l,a),f=i;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=n,si(f,ml(f,u,n));break e;case 1:u=l;var b=f.type,C=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof b.getDerivedStateFromError||null!==C&&"function"==typeof C.componentDidCatch&&(null===jl||!jl.has(C)))){f.effectTag|=4096,f.expirationTime=n,si(f,Al(f,u,n));break e}}f=f.return}while(null!==f)}kl=su(kl)}catch(e){n=e;continue}break}}function ou(){var e=vl.current;return vl.current=ha,null===e?ha:e}function iu(e,n){e<Pl&&2<e&&(Pl=e),null!==n&&e<Bl&&2<e&&(Bl=e,Ol=n)}function au(e){e>Nl&&(Nl=e)}function lu(){for(;null!==kl;)kl=cu(kl)}function uu(){for(;null!==kl&&!Ro();)kl=cu(kl)}function cu(e){var n=hl(e.alternate,e,_l);return e.memoizedProps=e.pendingProps,null===n&&(n=su(e)),yl.current=null,n}function su(e){kl=e;do{var n=kl.alternate;if(e=kl.return,0==(2048&kl.effectTag)){if(n=Ka(n,kl,_l),1===_l||1!==kl.childExpirationTime){for(var t=0,r=kl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>t&&(t=o),i>t&&(t=i),r=r.sibling}kl.childExpirationTime=t}if(null!==n)return n;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=kl.firstEffect),null!==kl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=kl.firstEffect),e.lastEffect=kl.lastEffect),1<kl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=kl:e.firstEffect=kl,e.lastEffect=kl))}else{if(null!==(n=Xa(kl)))return n.effectTag&=2047,n;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(n=kl.sibling))return n;kl=e}while(null!==kl);return Sl===bl&&(Sl=5),null}function fu(e){var n=e.expirationTime;return n>(e=e.childExpirationTime)?n:e}function du(e){var n=Lo();return Wo(99,pu.bind(null,e,n)),null}function pu(e,n){do{Au()}while(null!==Dl);if(0!=(48&wl))throw Error(a(327));var t=e.finishedWork,r=e.finishedExpirationTime;if(null===t)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,t===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(t);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===xl&&(kl=xl=null,_l=0),1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,o=t.firstEffect):o=t:o=t.firstEffect,null!==o){var i=wl;wl|=32,yl.current=null,At=Vn;var l=pt();if(mt(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,A=0,h=0,g=l,v=null;n:for(;;){for(var y;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===l)break n;if(v===u&&++A===s&&(p=d),v===f&&++h===c&&(m=d),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;ht={activeElementDetached:null,focusedElem:l,selectionRange:u},Vn=!1,zl=o;do{try{mu()}catch(e){if(null===zl)throw Error(a(330));vu(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=o;do{try{for(l=e,u=n;null!==zl;){var b=zl.effectTag;if(16&b&&De(zl.stateNode,""),128&b){var C=zl.alternate;if(null!==C){var E=C.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&b){case 2:cl(zl),zl.effectTag&=-3;break;case 6:cl(zl),zl.effectTag&=-3,fl(zl.alternate,zl);break;case 1024:zl.effectTag&=-1025;break;case 1028:zl.effectTag&=-1025,fl(zl.alternate,zl);break;case 4:fl(zl.alternate,zl);break;case 8:sl(l,s=zl,u),ll(s)}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));vu(zl,e),zl=zl.nextEffect}}while(null!==zl);if(E=ht,C=pt(),b=E.focusedElem,u=E.selectionRange,C!==b&&b&&b.ownerDocument&&function e(n,t){return!(!n||!t)&&(n===t||(!n||3!==n.nodeType)&&(t&&3===t.nodeType?e(n,t.parentNode):"contains"in n?n.contains(t):!!n.compareDocumentPosition&&!!(16&n.compareDocumentPosition(t))))}(b.ownerDocument.documentElement,b)){null!==u&&mt(b)&&(C=u.start,void 0===(E=u.end)&&(E=C),"selectionStart"in b?(b.selectionStart=C,b.selectionEnd=Math.min(E,b.value.length)):(E=(C=b.ownerDocument||document)&&C.defaultView||window).getSelection&&(E=E.getSelection(),s=b.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!E.extend&&l>u&&(s=u,u=l,l=s),s=dt(b,l),f=dt(b,u),s&&f&&(1!==E.rangeCount||E.anchorNode!==s.node||E.anchorOffset!==s.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((C=C.createRange()).setStart(s.node,s.offset),E.removeAllRanges(),l>u?(E.addRange(C),E.extend(f.node,f.offset)):(C.setEnd(f.node,f.offset),E.addRange(C))))),C=[];for(E=b;E=E.parentNode;)1===E.nodeType&&C.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<C.length;b++)(E=C[b]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Vn=!!At,ht=At=null,e.current=t,zl=o;do{try{for(b=e;null!==zl;){var w=zl.effectTag;if(36&w&&il(b,zl.alternate,zl),128&w){C=void 0;var x=zl.ref;if(null!==x){var k=zl.stateNode;switch(zl.tag){case 5:C=k;break;default:C=k}"function"==typeof x?x(C):x.current=C}}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));vu(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=null,zo(),wl=i}else e.current=t;if($l)$l=!1,Dl=e,Ll=n;else for(zl=o;null!==zl;)n=zl.nextEffect,zl.nextEffect=null,zl=n;if(0===(n=e.firstPendingTime)&&(jl=null),1073741823===n?e===Gl?Wl++:(Wl=0,Gl=e):Wl=0,"function"==typeof Cu&&Cu(t.stateNode,r),Xl(e),Il)throw Il=!1,e=Fl,Fl=null,e;return 0!=(8&wl)||qo(),null}function mu(){for(;null!==zl;){var e=zl.effectTag;0!=(256&e)&&tl(zl.alternate,zl),0==(512&e)||$l||($l=!0,Go(97,(function(){return Au(),null}))),zl=zl.nextEffect}}function Au(){if(90!==Ll){var e=97<Ll?97:Ll;return Ll=90,Wo(e,hu)}}function hu(){if(null===Dl)return!1;var e=Dl;if(Dl=null,0!=(48&wl))throw Error(a(331));var n=wl;for(wl|=32,e=e.current.firstEffect;null!==e;){try{var t=e;if(0!=(512&t.effectTag))switch(t.tag){case 0:case 11:case 15:case 22:rl(5,t),ol(5,t)}}catch(n){if(null===e)throw Error(a(330));vu(e,n)}t=e.nextEffect,e.nextEffect=null,e=t}return wl=n,qo(),!0}function gu(e,n,t){ci(e,n=ml(e,n=Ja(t,n),1073741823)),null!==(e=Yl(e,1073741823))&&Xl(e)}function vu(e,n){if(3===e.tag)gu(e,e,n);else for(var t=e.return;null!==t;){if(3===t.tag){gu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===jl||!jl.has(r))){ci(t,e=Al(t,e=Ja(n,e),1073741823)),null!==(t=Yl(t,1073741823))&&Xl(t);break}}t=t.return}}function yu(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),xl===e&&_l===t?Sl===El||Sl===Cl&&1073741823===Pl&&Do()-Rl<500?tu(e,_l):Ml=!0:Nu(e,t)&&(0!==(n=e.lastPingedTime)&&n<t||(e.lastPingedTime=t,Xl(e)))}function bu(e,n){var t=e.stateNode;null!==t&&t.delete(n),0===(n=0)&&(n=Vl(n=ql(),e,null)),null!==(e=Yl(e,n))&&Xl(e)}hl=function(e,n,t){var r=n.expirationTime;if(null!==e){var o=n.pendingProps;if(e.memoizedProps!==o||po.current)Ba=!0;else{if(r<t){switch(Ba=!1,n.tag){case 3:$a(n),Ta();break;case 5:if(Ri(n),4&n.mode&&1!==t&&o.hidden)return n.expirationTime=n.childExpirationTime=1,null;break;case 1:ho(n.type)&&bo(n);break;case 4:Ni(n,n.stateNode.containerInfo);break;case 10:r=n.memoizedProps.value,o=n.type._context,co(Ko,o._currentValue),o._currentValue=r;break;case 13:if(null!==n.memoizedState)return 0!==(r=n.child.childExpirationTime)&&r>=t?Ga(e,n,t):(co(Ii,1&Ii.current),null!==(n=Qa(e,n,t))?n.sibling:null);co(Ii,1&Ii.current);break;case 19:if(r=n.childExpirationTime>=t,0!=(64&e.effectTag)){if(r)return Va(e,n,t);n.effectTag|=64}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null),co(Ii,Ii.current),!r)return null}return Qa(e,n,t)}Ba=!1}}else Ba=!1;switch(n.expirationTime=0,n.tag){case 2:if(r=n.type,null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),e=n.pendingProps,o=Ao(n,fo.current),ri(n,t),o=Qi(null,n,r,e,o,t),n.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,ho(r)){var i=!0;bo(n)}else i=!1;n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(n);var l=r.getDerivedStateFromProps;"function"==typeof l&&Ai(n,r,l,e),o.updater=hi,n.stateNode=o,o._reactInternalFiber=n,bi(n,r,e,t),n=ja(null,n,r,!0,i,t)}else n.tag=0,Oa(null,n,o,t),n=n.child;return n;case 16:e:{if(o=n.elementType,null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),e=n.pendingProps,function(e){if(-1===e._status){e._status=0;var n=e._ctor;n=n(),e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,n.type=o,i=n.tag=function(e){if("function"==typeof e)return ku(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Yo(o,e),i){case 0:n=Ia(null,n,o,e,t);break e;case 1:n=Fa(null,n,o,e,t);break e;case 11:n=Na(null,n,o,e,t);break e;case 14:n=Ma(null,n,o,Yo(o.type,e),r,t);break e}throw Error(a(306,o,""))}return n;case 0:return r=n.type,o=n.pendingProps,Ia(e,n,r,o=n.elementType===r?o:Yo(r,o),t);case 1:return r=n.type,o=n.pendingProps,Fa(e,n,r,o=n.elementType===r?o:Yo(r,o),t);case 3:if($a(n),r=n.updateQueue,null===e||null===r)throw Error(a(282));if(r=n.pendingProps,o=null!==(o=n.memoizedState)?o.element:null,li(e,n),fi(n,r,null,t),(r=n.memoizedState.element)===o)Ta(),n=Qa(e,n,t);else{if((o=n.stateNode.hydrate)&&(Ca=Ct(n.stateNode.containerInfo.firstChild),ba=n,o=Ea=!0),o)for(t=_i(n,null,r,t),n.child=t;t;)t.effectTag=-3&t.effectTag|1024,t=t.sibling;else Oa(e,n,r,t),Ta();n=n.child}return n;case 5:return Ri(n),null===e&&ka(n),r=n.type,o=n.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vt(r,o)?l=null:null!==i&&vt(r,i)&&(n.effectTag|=16),za(e,n),4&n.mode&&1!==t&&o.hidden?(n.expirationTime=n.childExpirationTime=1,n=null):(Oa(e,n,l,t),n=n.child),n;case 6:return null===e&&ka(n),null;case 13:return Ga(e,n,t);case 4:return Ni(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=ki(n,null,r,t):Oa(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,Na(e,n,r,o=n.elementType===r?o:Yo(r,o),t);case 7:return Oa(e,n,n.pendingProps,t),n.child;case 8:case 12:return Oa(e,n,n.pendingProps.children,t),n.child;case 10:e:{r=n.type._context,o=n.pendingProps,l=n.memoizedProps,i=o.value;var u=n.type._context;if(co(Ko,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0===(i=Fr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!po.current){n=Qa(e,n,t);break e}}else for(null!==(u=n.child)&&(u.return=n);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(t,null)).tag=2,ci(u,s)),u.expirationTime<t&&(u.expirationTime=t),null!==(s=u.alternate)&&s.expirationTime<t&&(s.expirationTime=t),ti(u.return,t),c.expirationTime<t&&(c.expirationTime=t);break}s=s.next}}else l=10===u.tag&&u.type===n.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===n){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Oa(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=(i=n.pendingProps).children,ri(n,t),r=r(o=oi(o,i.unstable_observedBits)),n.effectTag|=1,Oa(e,n,r,t),n.child;case 14:return i=Yo(o=n.type,n.pendingProps),Ma(e,n,o,i=Yo(o.type,i),r,t);case 15:return Ra(e,n,n.type,n.pendingProps,r,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:Yo(r,o),null!==e&&(e.alternate=null,n.alternate=null,n.effectTag|=2),n.tag=1,ho(r)?(e=!0,bo(n)):e=!1,ri(n,t),vi(n,r,o),bi(n,r,o,t),ja(null,n,r,!0,e,t);case 19:return Va(e,n,t)}throw Error(a(156,n.tag))};var Cu=null,Eu=null;function wu(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function xu(e,n,t,r){return new wu(e,n,t,r)}function ku(e){return!(!(e=e.prototype)||!e.isReactComponent)}function _u(e,n){var t=e.alternate;return null===t?((t=xu(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.effectTag=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childExpirationTime=e.childExpirationTime,t.expirationTime=e.expirationTime,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Su(e,n,t,r,o,i){var l=2;if(r=e,"function"==typeof e)ku(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case te:return Tu(t.children,o,i,n);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=xu(12,t,n,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=xu(13,t,n,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=xu(19,t,n,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case ue:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=xu(l,t,n,o)).elementType=e,n.type=r,n.expirationTime=i,n}function Tu(e,n,t,r){return(e=xu(7,e,r,n)).expirationTime=t,e}function Pu(e,n,t){return(e=xu(6,e,null,n)).expirationTime=t,e}function Bu(e,n,t){return(n=xu(4,null!==e.children?e.children:[],e.key,n)).expirationTime=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Ou(e,n,t){this.tag=n,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nu(e,n){var t=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==t&&t>=n&&e<=n}function Mu(e,n){var t=e.firstSuspendedTime,r=e.lastSuspendedTime;t<n&&(e.firstSuspendedTime=n),(r>n||0===t)&&(e.lastSuspendedTime=n),n<=e.lastPingedTime&&(e.lastPingedTime=0),n<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Ru(e,n){n>e.firstPendingTime&&(e.firstPendingTime=n);var t=e.firstSuspendedTime;0!==t&&(n>=t?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:n>=e.lastSuspendedTime&&(e.lastSuspendedTime=n+1),n>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=n))}function zu(e,n){var t=e.lastExpiredTime;(0===t||t>n)&&(e.lastExpiredTime=n)}function Iu(e,n,t,r){var o=n.current,i=ql(),l=pi.suspense;i=Vl(i,o,l);e:if(t){n:{if(Ze(t=t._reactInternalFiber)!==t||1!==t.tag)throw Error(a(170));var u=t;do{switch(u.tag){case 3:u=u.stateNode.context;break n;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break n}}u=u.return}while(null!==u);throw Error(a(171))}if(1===t.tag){var c=t.type;if(ho(c)){t=yo(t,c,u);break e}}t=u}else t=so;return null===n.context?n.context=t:n.pendingContext=t,(n=ui(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),ci(o,n),Ql(o,i),i}function Fu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ju(e,n){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<n&&(e.retryTime=n)}function $u(e,n){ju(e,n),(e=e.alternate)&&ju(e,n)}function Du(e,n,t){var r=new Ou(e,n,t=null!=t&&!0===t.hydrate),o=xu(3,null,null,2===n?7:1===n?3:0);r.current=o,o.stateNode=r,ai(o),e[_t]=r.current,t&&0!==n&&function(e,n){var t=Je(n);Sn.forEach((function(e){An(e,n,t)})),Tn.forEach((function(e){An(e,n,t)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Lu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Uu(e,n,t,r,o){var i=t._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Fu(a);l.call(e)}}Iu(n,a,e,o)}else{if(i=t._reactRootContainer=function(e,n){if(n||(n=!(!(n=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==n.nodeType||!n.hasAttribute("data-reactroot"))),!n)for(var t;t=e.lastChild;)e.removeChild(t);return new Du(e,0,n?{hydrate:!0}:void 0)}(t,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Fu(a);u.call(e)}}nu((function(){Iu(n,a,e,o)}))}return Fu(a)}function Wu(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ne,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}function Gu(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Lu(n))throw Error(a(200));return Wu(e,n,null,t)}Du.prototype.render=function(e){Iu(e,this._internalRoot,null,null)},Du.prototype.unmount=function(){var e=this._internalRoot,n=e.containerInfo;Iu(null,e,null,(function(){n[_t]=null}))},hn=function(e){if(13===e.tag){var n=Qo(ql(),150,100);Ql(e,n),$u(e,n)}},gn=function(e){13===e.tag&&(Ql(e,3),$u(e,3))},vn=function(e){if(13===e.tag){var n=ql();Ql(e,n=Vl(n,e,null)),$u(e,n)}},T=function(e,n,t){switch(n){case"input":if(ke(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=Bt(r);if(!o)throw Error(a(90));Ce(r),ke(r,o)}}}break;case"textarea":Ne(e,t);break;case"select":null!=(n=t.value)&&Pe(e,!!t.multiple,n,!1)}},R=eu,z=function(e,n,t,r,o){var i=wl;wl|=4;try{return Wo(98,e.bind(null,n,t,r,o))}finally{0===(wl=i)&&qo()}},I=function(){0==(49&wl)&&(function(){if(null!==Ul){var e=Ul;Ul=null,e.forEach((function(e,n){zu(n,e),Xl(n)})),qo()}}(),Au())},F=function(e,n){var t=wl;wl|=2;try{return e(n)}finally{0===(wl=t)&&qo()}};var Hu,qu,Vu={Events:[Tt,Pt,Bt,_,w,Ft,function(e){on(e,It)},N,M,Jn,un,Au,{current:!1}]};qu=(Hu={findFiberByHostInstance:St,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var n=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(n.isDisabled||!n.supportsFiber)return!0;try{var t=n.inject(e);Cu=function(e){try{n.onCommitFiberRoot(t,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Eu=function(e){try{n.onCommitFiberUnmount(t,e)}catch(e){}}}catch(e){}}(o({},Hu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:K.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return qu?qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Vu,n.createPortal=Gu,n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternalFiber;if(void 0===n){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=tn(n))?null:e.stateNode},n.flushSync=function(e,n){if(0!=(48&wl))throw Error(a(187));var t=wl;wl|=1;try{return Wo(99,e.bind(null,n))}finally{wl=t,qo()}},n.hydrate=function(e,n,t){if(!Lu(n))throw Error(a(200));return Uu(null,e,n,!0,t)},n.render=function(e,n,t){if(!Lu(n))throw Error(a(200));return Uu(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Lu(e))throw Error(a(40));return!!e._reactRootContainer&&(nu((function(){Uu(null,null,e,!1,(function(){e._reactRootContainer=null,e[_t]=null}))})),!0)},n.unstable_batchedUpdates=eu,n.unstable_createPortal=function(e,n){return Gu(e,n,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Lu(t))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Uu(e,n,t,!1,r)},n.version="16.13.1"},function(e,n,t){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=t(13),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,A=o?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function b(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||v}function C(){}function E(e,n,t){this.props=e,this.context=n,this.refs=y,this.updater=t||v}b.prototype.isReactComponent={},b.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,n,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},C.prototype=b.prototype;var w=E.prototype=new C;w.constructor=E,r(w,b.prototype),w.isPureReactComponent=!0;var x={current:null},k=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function S(e,n,t){var r,o={},a=null,l=null;if(null!=n)for(r in void 0!==n.ref&&(l=n.ref),void 0!==n.key&&(a=""+n.key),n)k.call(n,r)&&!_.hasOwnProperty(r)&&(o[r]=n[r]);var u=arguments.length-2;if(1===u)o.children=t;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:x.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,B=[];function O(e,n,t,r){if(B.length){var o=B.pop();return o.result=e,o.keyPrefix=n,o.func=t,o.context=r,o.count=0,o}return{result:e,keyPrefix:n,func:t,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>B.length&&B.push(e)}function M(e,n,t){return null==e?0:function e(n,t,r,o){var l=typeof n;"undefined"!==l&&"boolean"!==l||(n=null);var u=!1;if(null===n)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(n.$$typeof){case i:case a:u=!0}}if(u)return r(o,n,""===t?"."+R(n,0):t),1;if(u=0,t=""===t?".":t+":",Array.isArray(n))for(var c=0;c<n.length;c++){var s=t+R(l=n[c],c);u+=e(l,s,r,o)}else if(null===n||"object"!=typeof n?s=null:s="function"==typeof(s=h&&n[h]||n["@@iterator"])?s:null,"function"==typeof s)for(n=s.call(n),c=0;!(l=n.next()).done;)u+=e(l=l.value,s=t+R(l,c++),r,o);else if("object"===l)throw r=""+n,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(n).join(", ")+"}":r,""));return u}(e,"",n,t)}function R(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return n[e]}))}(e.key):n.toString(36)}function z(e,n){e.func.call(e.context,n,e.count++)}function I(e,n,t){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,n,e.count++),Array.isArray(e)?F(e,r,t,(function(e){return e})):null!=e&&(T(e)&&(e=function(e,n){return{$$typeof:i,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||n&&n.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+t)),r.push(e))}function F(e,n,t,r,o){var i="";null!=t&&(i=(""+t).replace(P,"$&/")+"/"),M(e,I,n=O(n,i,r,o)),N(n)}var j={current:null};function $(){var e=j.current;if(null===e)throw Error(g(321));return e}var D={ReactCurrentDispatcher:j,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:x,IsSomeRendererActing:{current:!1},assign:r};n.Children={map:function(e,n,t){if(null==e)return e;var r=[];return F(e,r,null,n,t),r},forEach:function(e,n,t){if(null==e)return e;M(e,z,n=O(null,null,n,t)),N(n)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var n=[];return F(e,n,null,(function(e){return e})),n},only:function(e){if(!T(e))throw Error(g(143));return e}},n.Component=b,n.Fragment=l,n.Profiler=c,n.PureComponent=E,n.StrictMode=u,n.Suspense=p,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,n.cloneElement=function(e,n,t){if(null==e)throw Error(g(267,e));var o=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,u=x.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in n)k.call(n,s)&&!_.hasOwnProperty(s)&&(o[s]=void 0===n[s]&&void 0!==c?c[s]:n[s])}var s=arguments.length-2;if(1===s)o.children=t;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:u}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:f,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=S,n.createFactory=function(e){var n=S.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:d,render:e}},n.isValidElement=T,n.lazy=function(e){return{$$typeof:A,_ctor:e,_status:-1,_result:null}},n.memo=function(e,n){return{$$typeof:m,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return $().useCallback(e,n)},n.useContext=function(e,n){return $().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return $().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return $().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return $().useLayoutEffect(e,n)},n.useMemo=function(e,n){return $().useMemo(e,n)},n.useReducer=function(e,n,t){return $().useReducer(e,n,t)},n.useRef=function(e){return $().useRef(e)},n.useState=function(e){return $().useState(e)},n.version="16.13.1"},function(e,n,t){"use strict";e.exports=t(25)},function(e,n,t){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=n.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();n.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,n){c=setTimeout(e,n)},i=function(){clearTimeout(c)},a=function(){return!1},l=n.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,A=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)n.unstable_now=function(){return d.now()};else{var g=p.now();n.unstable_now=function(){return p.now()-g}}var v=!1,y=null,b=-1,C=5,E=0;a=function(){return n.unstable_now()>=E},l=function(){},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):C=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,x=w.port2;w.port1.onmessage=function(){if(null!==y){var e=n.unstable_now();E=e+C;try{y(!0,e)?x.postMessage(null):(v=!1,y=null)}catch(e){throw x.postMessage(null),e}}else v=!1},r=function(e){y=e,v||(v=!0,x.postMessage(null))},o=function(e,t){b=m((function(){e(n.unstable_now())}),t)},i=function(){A(b),b=-1}}function k(e,n){var t=e.length;e.push(n);e:for(;;){var r=t-1>>>1,o=e[r];if(!(void 0!==o&&0<T(o,n)))break e;e[r]=n,e[t]=o,t=r}}function _(e){return void 0===(e=e[0])?null:e}function S(e){var n=e[0];if(void 0!==n){var t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>T(a,t))void 0!==u&&0>T(u,a)?(e[r]=u,e[l]=t,r=l):(e[r]=a,e[i]=t,r=i);else{if(!(void 0!==u&&0>T(u,t)))break e;e[r]=u,e[l]=t,r=l}}}return n}return null}function T(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}var P=[],B=[],O=1,N=null,M=3,R=!1,z=!1,I=!1;function F(e){for(var n=_(B);null!==n;){if(null===n.callback)S(B);else{if(!(n.startTime<=e))break;S(B),n.sortIndex=n.expirationTime,k(P,n)}n=_(B)}}function j(e){if(I=!1,F(e),!z)if(null!==_(P))z=!0,r($);else{var n=_(B);null!==n&&o(j,n.startTime-e)}}function $(e,t){z=!1,I&&(I=!1,i()),R=!0;var r=M;try{for(F(t),N=_(P);null!==N&&(!(N.expirationTime>t)||e&&!a());){var l=N.callback;if(null!==l){N.callback=null,M=N.priorityLevel;var u=l(N.expirationTime<=t);t=n.unstable_now(),"function"==typeof u?N.callback=u:N===_(P)&&S(P),F(t)}else S(P);N=_(P)}if(null!==N)var c=!0;else{var s=_(B);null!==s&&o(j,s.startTime-t),c=!1}return c}finally{N=null,M=r,R=!1}}function D(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var L=l;n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){z||R||(z=!0,r($))},n.unstable_getCurrentPriorityLevel=function(){return M},n.unstable_getFirstCallbackNode=function(){return _(P)},n.unstable_next=function(e){switch(M){case 1:case 2:case 3:var n=3;break;default:n=M}var t=M;M=n;try{return e()}finally{M=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=L,n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=M;M=e;try{return n()}finally{M=t}},n.unstable_scheduleCallback=function(e,t,a){var l=n.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:D(e)}else a=D(e),u=l;return e={id:O++,callback:t,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,k(B,e),null===_(P)&&e===_(B)&&(I?i():I=!0,o(j,u-l))):(e.sortIndex=a,k(P,e),z||R||(z=!0,r($))),e},n.unstable_shouldYield=function(){var e=n.unstable_now();F(e);var t=_(P);return t!==N&&null!==N&&null!==t&&null!==t.callback&&t.startTime<=e&&t.expirationTime<N.expirationTime||a()},n.unstable_wrapCallback=function(e){var n=M;return function(){var t=M;M=n;try{return e.apply(this,arguments)}finally{M=t}}}},function(e,n,t){"use strict";var r=t(27);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:i,resetWarningCache:o};return t.PropTypes=t,t}},function(e,n,t){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,n,t){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,A=r?Symbol.for("react.suspense_list"):60120,h=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.block"):60121,y=r?Symbol.for("react.fundamental"):60117,b=r?Symbol.for("react.responder"):60118,C=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case o:switch(e=e.type){case f:case d:case a:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case g:case h:case c:return e;default:return n}}case i:return n}}}function w(e){return E(e)===d}n.AsyncMode=f,n.ConcurrentMode=d,n.ContextConsumer=s,n.ContextProvider=c,n.Element=o,n.ForwardRef=p,n.Fragment=a,n.Lazy=g,n.Memo=h,n.Portal=i,n.Profiler=u,n.StrictMode=l,n.Suspense=m,n.isAsyncMode=function(e){return w(e)||E(e)===f},n.isConcurrentMode=w,n.isContextConsumer=function(e){return E(e)===s},n.isContextProvider=function(e){return E(e)===c},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},n.isForwardRef=function(e){return E(e)===p},n.isFragment=function(e){return E(e)===a},n.isLazy=function(e){return E(e)===g},n.isMemo=function(e){return E(e)===h},n.isPortal=function(e){return E(e)===i},n.isProfiler=function(e){return E(e)===u},n.isStrictMode=function(e){return E(e)===l},n.isSuspense=function(e){return E(e)===m},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===m||e===A||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===y||e.$$typeof===b||e.$$typeof===C||e.$$typeof===v)},n.typeOf=E},function(e,n){e.exports=function(e){if(!e.webpackPolyfill){var n=Object.create(e);n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),Object.defineProperty(n,"exports",{enumerable:!0}),n.webpackPolyfill=1}return n}},function(e,n){function t(n,r){return e.exports=t=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},t(n,r)}e.exports=t},function(e,n){function t(n){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=t=function(e){return typeof e}:e.exports=t=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(n)}e.exports=t},function(e,n){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},function(e,n,t){var r=t(2),o=t(34);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,":root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}.container{max-width:90%;margin:auto;display:flex;flex-direction:column;align-items:stretch}@media screen and (min-width: 576px){.container{max-width:88%}}@media screen and (min-width: 768px){.container{max-width:85%}}@media screen and (min-width: 992px){.container{max-width:83%}}@media screen and (min-width: 1200px){.container{max-width:80%}}@media screen and (min-width: 1400px){.container{max-width:78%}}","",{version:3,sources:["webpack://src/base.scss","webpack://src/containers/Container/Container.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,WACE,aAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,mBAAA,CAGF,qCACE,WACE,aAAA,CAAA,CAIJ,qCACE,WACE,aAAA,CAAA,CAIJ,qCACE,WACE,aAAA,CAAA,CAIJ,sCACE,WACE,aAAA,CAAA,CAIJ,sCACE,WACE,aAAA,CAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "../../base";\n\n.container {\n  max-width: 90%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n@media screen and (min-width: $breakpoint-sm) {\n  .container {\n    max-width: 88%;\n  }\n}\n\n@media screen and (min-width: $breakpoint-md) {\n  .container {\n    max-width: 85%;\n  }\n}\n\n@media screen and (min-width: $breakpoint-lg) {\n  .container {\n    max-width: 83%;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xl) {\n  .container {\n    max-width: 80%;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xxl) {\n  .container {\n    max-width: 78%;\n  }\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(36);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".row{width:100%;display:flex;flex-direction:row;flex-wrap:wrap}","",{version:3,sources:["webpack://src/containers/Row/Row.scss"],names:[],mappings:"AAAA,KACE,UAAA,CACA,YAAA,CACA,kBAAA,CACA,cAAA",sourcesContent:[".row {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(38);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,':root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}.top-link{display:none;flex-direction:row;flex-grow:1;justify-content:space-evenly;align-items:center}.top-link__link{position:relative;color:var(--color-light)}.top-link__link::after{content:"";position:absolute;left:0px;bottom:-0.2em;width:100%;height:.1em;background-color:var(--color-light);transform:scaleX(0);transform-origin:left;transition:.3s ease}.top-link__link:hover::after{transform:scaleX(1);transform-origin:right}.top-link__link:active::after{transform:scaleX(1);transform-origin:right}@media screen and (min-width: 576px){.top-link{display:flex}}@media screen and (min-width: 1200px){.top-link{height:40%;flex-direction:column;flex-grow:0}}',"",{version:3,sources:["webpack://src/base.scss","webpack://src/components/TopLink/Toplink.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,UACE,YAAA,CACA,kBAAA,CACA,WAAA,CACA,4BAAA,CACA,kBAAA,CAEA,gBACE,iBAAA,CACA,wBAAA,CAEA,uBACE,UAAA,CACA,iBAAA,CACA,QAAA,CACA,aAAA,CACA,UAAA,CACA,WAAA,CACA,mCAAA,CACA,mBAAA,CACA,qBAAA,CACA,mBAAA,CAGF,6BACE,mBAAA,CACA,sBAAA,CAGF,8BACE,mBAAA,CACA,sBAAA,CAKN,qCACE,UACE,YAAA,CAAA,CAIJ,sCACE,UACE,UAAA,CACA,qBAAA,CACA,WAAA,CAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "../../base";\n\n.top-link {\n  display: none;\n  flex-direction: row;\n  flex-grow: 1;\n  justify-content: space-evenly;\n  align-items: center;\n\n  &__link {\n    position: relative;\n    color: var(--color-light);\n\n    &::after {\n      content: "";\n      position: absolute;\n      left: 0px;\n      bottom: -0.2em;\n      width: 100%;\n      height: 0.1em;\n      background-color: var(--color-light);\n      transform: scaleX(0);\n      transform-origin: left;\n      transition: $nav-transition-duration ease;\n    }\n\n    &:hover::after {\n      transform: scaleX(1);\n      transform-origin: right;\n    }\n\n    &:active::after {\n      transform: scaleX(1);\n      transform-origin: right;\n    }\n  }\n}\n\n@media screen and (min-width: $breakpoint-sm) {\n  .top-link {\n    display: flex;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xl) {\n  .top-link {\n    height: 40%;\n    flex-direction: column;\n    flex-grow: 0;\n  }\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(40);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,':root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}.top-drop{width:100%;height:0px;display:flex;flex-direction:column;opacity:0;transition:.3s ease}.top-drop--active{height:2.5rem;opacity:1}.top-drop__item{height:.5rem;display:flex;justify-content:flex-start}.top-drop__link{position:relative;color:var(--color-light)}.top-drop__link::after{content:"";position:absolute;left:0px;bottom:-0.2em;width:100%;height:.1em;background-color:var(--color-light);transform:scaleX(0);transform-origin:left;transition:.3s ease}.top-drop__link:hover::after{transform:scaleX(1);transform-origin:right}.top-drop__link:active::after{transform:scaleX(1);transform-origin:right}',"",{version:3,sources:["webpack://src/base.scss","webpack://src/components/TopDrop/TopDrop.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,UAGE,UAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,SAAA,CACA,mBAAA,CAEA,kBACE,aAAA,CACA,SAAA,CAGF,gBACE,YAfY,CAgBZ,YAAA,CACA,0BAAA,CAGF,gBACE,iBAAA,CACA,wBAAA,CAEA,uBACE,UAAA,CACA,iBAAA,CACA,QAAA,CACA,aAAA,CACA,UAAA,CACA,WAAA,CACA,mCAAA,CACA,mBAAA,CACA,qBAAA,CACA,mBAAA,CAGF,6BACE,mBAAA,CACA,sBAAA,CAGF,8BACE,mBAAA,CACA,sBAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "../../base";\n\n.top-drop {\n  $item-height: 0.5rem;\n\n  width: 100%;\n  height: 0px;\n  display: flex;\n  flex-direction: column;\n  opacity: 0;\n  transition: $nav-transition-duration ease;\n\n  &--active {\n    height: $item-height * $nav-number;\n    opacity: 1;\n  }\n\n  &__item {\n    height: $item-height;\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  &__link {\n    position: relative;\n    color: var(--color-light);\n\n    &::after {\n      content: "";\n      position: absolute;\n      left: 0px;\n      bottom: -0.2em;\n      width: 100%;\n      height: 0.1em;\n      background-color: var(--color-light);\n      transform: scaleX(0);\n      transform-origin: left;\n      transition: $nav-transition-duration ease;\n    }\n\n    &:hover::after {\n      transform: scaleX(1);\n      transform-origin: right;\n    }\n\n    &:active::after {\n      transform: scaleX(1);\n      transform-origin: right;\n    }\n  }\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(42);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r),i=t(20),a=t.n(i),l=t(21),u=o()(!0),c=a()(l.a);u.push([e.i,":root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}.top-nav{position:fixed;z-index:9;top:0px;left:0px;right:0px;background-color:var(--color-mild-dark)}.top-nav__main{height:60px;border-bottom:1px solid var(--color-mild-light)}.top-nav__content{height:60px;display:flex;flex-direction:row;justify-content:space-between;align-items:center}.top-nav__img{width:40px;height:40px;border:2px solid var(--color-dim-medium);border-radius:50%;background-image:url("+c+");background-position:center;background-repeat:no-repeat;background-size:cover}.top-nav__button-shape{width:25px;height:2px;background-color:var(--color-mild-light);transition:.3s ease}.top-nav__button{width:30px;height:30px;display:flex;flex-direction:column;justify-content:space-evenly;align-items:center}.top-nav__button--active .top-nav__button-shape:nth-child(1){transform:translateY(8px) rotate(45deg)}.top-nav__button--active .top-nav__button-shape:nth-child(2){opacity:0}.top-nav__button--active .top-nav__button-shape:nth-child(3){transform:translateY(-8px) rotate(-45deg)}@media screen and (min-width: 576px){.top-nav__button{visibility:hidden;cursor:none}}@media screen and (min-width: 1200px){.top-nav{top:0px;bottom:0px;left:0px;width:20%}.top-nav__main{height:100vh;border-bottom:none}.top-nav__content{height:100vh;flex-direction:column;justify-content:center}.top-nav__img{width:1.3rem;height:1.3rem;border:.08rem solid var(--color-dim-medium)}}","",{version:3,sources:["webpack://src/base.scss","webpack://src/components/TopNav/TopNav.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,SAME,cAAA,CACA,SAAA,CACA,OAAA,CACA,QAAA,CACA,SAAA,CACA,uCAAA,CAEA,eACE,WAbW,CAcX,+CAAA,CAGF,kBACE,WAlBW,CAmBX,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CAGF,cACE,UAzBS,CA0BT,WA1BS,CA2BT,wCAAA,CACA,iBAAA,CACA,wDAAA,CACA,0BAAA,CACA,2BAAA,CACA,qBAAA,CAGF,uBACE,UAAA,CACA,UAnCoB,CAoCpB,wCAAA,CACA,mBAAA,CAGF,iBACE,UA1CY,CA2CZ,WA3CY,CA4CZ,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,kBAAA,CAGE,6DACE,uCAAA,CAGF,6DACE,SAAA,CAGF,6DACE,yCAAA,CAMR,qCACE,iBACE,iBAAA,CACA,WAAA,CAAA,CAIJ,sCACE,SAIE,OAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CAEA,eACE,YATW,CAUX,kBAAA,CAGF,kBACE,YAdW,CAeX,qBAAA,CACA,sBAAA,CAGF,cACE,YAnBS,CAoBT,aApBS,CAqBT,2CAAA,CAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "../../base";\n\n.top-nav {\n  $nav-height: 60px;\n  $img-size: 40px;\n  $button-size: 30px;\n  $button-shape-height: 2px;\n\n  position: fixed;\n  z-index: 9;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  background-color: var(--color-mild-dark);\n\n  &__main {\n    height: $nav-height;\n    border-bottom: 1px solid var(--color-mild-light);\n  }\n\n  &__content {\n    height: $nav-height;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  &__img {\n    width: $img-size;\n    height: $img-size;\n    border: 2px solid var(--color-dim-medium);\n    border-radius: 50%;\n    background-image: url($personal-logo);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  &__button-shape {\n    width: 25px;\n    height: $button-shape-height;\n    background-color: var(--color-mild-light);\n    transition: $nav-transition-duration ease;\n  }\n\n  &__button {\n    width: $button-size;\n    height: $button-size;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    &--active {\n      .top-nav__button-shape:nth-child(1) {\n        transform: translateY($button-size / 4 + 0.5) rotate(45deg);\n      }\n\n      .top-nav__button-shape:nth-child(2) {\n        opacity: 0;\n      }\n\n      .top-nav__button-shape:nth-child(3) {\n        transform: translateY(-($button-size / 4 + 0.5)) rotate(-45deg);\n      }\n    }\n  }\n}\n\n@media screen and (min-width: $breakpoint-sm) {\n  .top-nav__button {\n    visibility: hidden;\n    cursor: none;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xl) {\n  .top-nav {\n    $nav-height: 100vh;\n    $img-size: 1.3rem;\n\n    top: 0px;\n    bottom: 0px;\n    left: 0px;\n    width: 20%;\n\n    &__main {\n      height: $nav-height;\n      border-bottom: none;\n    }\n\n    &__content {\n      height: $nav-height;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    &__img {\n      width: $img-size;\n      height: $img-size;\n      border: 0.08rem solid var(--color-dim-medium);\n    }\n  }\n}\n'],sourceRoot:""}]),n.default=u},function(e,n,t){var r=t(2),o=t(44);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".nav-banner{position:fixed;z-index:5;width:100%;height:100%;background-color:var(--color-medium);opacity:.5}","",{version:3,sources:["webpack://src/components/NavBanner/NavBanner.scss"],names:[],mappings:"AAAA,YACE,cAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,oCAAA,CACA,UAAA",sourcesContent:[".nav-banner {\n  position: fixed;\n  z-index: 5;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-medium);\n  opacity: 0.5;\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(46);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,":root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}.main{width:100%;height:100%}@media screen and (min-width: 1200px){.main{width:80%;margin-top:0px;margin-left:20%}}","",{version:3,sources:["webpack://src/base.scss","webpack://src/containers/Main/main.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,MACE,UAAA,CACA,WAAA,CAGF,sCACE,MACE,SAAA,CACA,cAAA,CACA,eAAA,CAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "../../base";\n\n.main {\n  width: 100%;\n  height: 100%;\n}\n\n@media screen and (min-width: $breakpoint-xl) {\n  .main {\n    width: 80%;\n    margin-top: 0px;\n    margin-left: 20%;\n  }\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(48);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".section{min-height:100vh;border-bottom:1px solid var(--color-bright-medium)}.section__container{min-height:100vh}","",{version:3,sources:["webpack://src/containers/Section/Section.scss"],names:[],mappings:"AAAA,SACE,gBAAA,CACA,kDAAA,CAEA,oBACE,gBAAA",sourcesContent:[".section {\n  min-height: 100vh;\n  border-bottom: 1px solid var(--color-bright-medium);\n\n  &__container {\n    min-height: 100vh;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(50);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".section-title{width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;padding-top:1rem;padding-bottom:1rem}.section-title__title{font-weight:900;margin-bottom:.5rem}","",{version:3,sources:["webpack://src/components/SectionTitle/SectionTitle.scss"],names:[],mappings:"AAAA,eACE,UAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,gBAAA,CACA,mBAAA,CAEA,sBACE,eAAA,CACA,mBAAA",sourcesContent:[".section-title {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n\n  &__title {\n    font-weight: 900;\n    margin-bottom: 0.5rem;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(52);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".about-links{width:1.5rem;height:.5rem;display:flex;flex-direction:row;align-items:center}.about-links__item{width:.75rem;height:.75rem}.about-links__link{width:inherit;height:inherit;display:flex;justify-content:center;align-items:center}.about-links__img{height:.5rem}","",{version:3,sources:["webpack://src/components/AboutLinks/AboutLinks.scss"],names:[],mappings:"AAAA,aAIE,YAAA,CACA,YAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CAEA,mBACE,YATW,CAUX,aAVW,CAab,mBACE,aAAA,CACA,cAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAGF,kBACE,YAvBS",sourcesContent:[".about-links {\n  $img-size: 0.5rem;\n  $link-width: $img-size * 1.5;\n\n  width: $link-width * 2;\n  height: 0.5rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  &__item {\n    width: $link-width;\n    height: $link-width;\n  }\n\n  &__link {\n    width: inherit;\n    height: inherit;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &__img {\n    height: $img-size;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(54);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".about{width:100%;height:100vh;display:flex;flex-direction:column;justify-content:center;margin:0 auto}.about__name{font-weight:900;margin-bottom:.05rem}.about__contact{color:var(--color-dim-medium);margin-bottom:.2rem;white-space:pre}.about__content{color:var(--color-dim-medium);margin-bottom:.2rem}","",{version:3,sources:["webpack://src/components/About/About.scss"],names:[],mappings:"AAAA,OAGE,UAAA,CACA,YAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,aAAA,CAEA,aACE,eAAA,CACA,oBAAA,CAGF,gBACE,6BAfc,CAgBd,mBAAA,CACA,eAAA,CAGF,gBACE,6BArBc,CAsBd,mBAAA",sourcesContent:[".about {\n  $content-color: var(--color-dim-medium);\n\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n\n  &__name {\n    font-weight: 900;\n    margin-bottom: 0.05rem;\n  }\n\n  &__contact {\n    color: $content-color;\n    margin-bottom: 0.2rem;\n    white-space: pre;\n  }\n\n  &__content {\n    color: $content-color;\n    margin-bottom: 0.2rem;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(56);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".education{display:flex;flex-direction:column;align-items:flex-start;margin-bottom:.3rem}.education__title{font-weight:900;margin-bottom:.5em}.education__degree{font-weight:700;color:var(--color-dim-medium);margin-bottom:1em}.education__major{color:var(--color-dim-medium);margin-bottom:1em}.education__duration{color:var(--color-dim-medium)}","",{version:3,sources:["webpack://src/components/Education/Education.scss"],names:[],mappings:"AAAA,WAGE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,mBAAA,CAEA,kBACE,eAAA,CACA,kBAAA,CAGF,mBACE,eAAA,CACA,6BAdc,CAed,iBAAA,CAGF,kBACE,6BAnBc,CAoBd,iBAAA,CAGF,qBACE,6BAxBc",sourcesContent:[".education {\n  $content-color: var(--color-dim-medium);\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 0.3rem;\n\n  &__title {\n    font-weight: 900;\n    margin-bottom: 0.5em;\n  }\n\n  &__degree {\n    font-weight: 700;\n    color: $content-color;\n    margin-bottom: 1em;\n  }\n\n  &__major {\n    color: $content-color;\n    margin-bottom: 1em;\n  }\n\n  &__duration {\n    color: $content-color;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(58);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".experience{display:flex;flex-direction:column;align-items:flex-start;font-family:var(--font-family-sans-serif);margin-bottom:.5rem}.experience__title{font-weight:900;margin-bottom:.5em}.experience__duty{font-weight:700;color:var(--color-dim-medium);margin-bottom:1em}.experience__content{display:flex;flex-direction:column;align-items:flex-start;list-style:circle outside none;padding-left:.2rem;margin-bottom:.1rem}.experience__item{color:var(--color-dim-medium);margin-bottom:.1rem}.experience__duration{color:var(--color-dim-medium)}","",{version:3,sources:["webpack://src/components/Experience/Experience.scss"],names:[],mappings:"AAAA,YAGE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,yCAAA,CACA,mBAAA,CAEA,mBACE,eAAA,CACA,kBAAA,CAGF,kBACE,eAAA,CACA,6BAfc,CAgBd,iBAAA,CAGF,qBACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,8BAAA,CACA,kBAAA,CACA,mBAAA,CAGF,kBACE,6BA7Bc,CA8Bd,mBAAA,CAGF,sBACE,6BAlCc",sourcesContent:[".experience {\n  $content-color: var(--color-dim-medium);\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-family: var(--font-family-sans-serif);\n  margin-bottom: 0.5rem;\n\n  &__title {\n    font-weight: 900;\n    margin-bottom: 0.5em;\n  }\n\n  &__duty {\n    font-weight: 700;\n    color: $content-color;\n    margin-bottom: 1em;\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    list-style: circle outside none;\n    padding-left: 0.2rem;\n    margin-bottom: 0.1rem;\n  }\n\n  &__item {\n    color: $content-color;\n    margin-bottom: 0.1rem;\n  }\n\n  &__duration {\n    color: $content-color;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(60);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".projects{display:flex;flex-direction:column;align-items:flex-start;font-family:var(--font-family-sans-serif);margin-bottom:.5rem}.projects__title{font-weight:900;margin-bottom:.5em}.projects__content{display:flex;flex-direction:column;align-items:flex-start;list-style:circle outside none;padding-left:.2rem;margin-bottom:.1rem}.projects__item{color:var(--color-dim-medium);margin-bottom:.1rem}.projects__duration{color:var(--color-dim-medium)}","",{version:3,sources:["webpack://src/components/Projects/Projects.scss"],names:[],mappings:"AAAA,UAGE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,yCAAA,CACA,mBAAA,CAEA,iBACE,eAAA,CACA,kBAAA,CAGF,mBACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,8BAAA,CACA,kBAAA,CACA,mBAAA,CAGF,gBACE,6BAvBc,CAwBd,mBAAA,CAGF,oBACE,6BA5Bc",sourcesContent:[".projects {\n  $content-color: var(--color-dim-medium);\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-family: var(--font-family-sans-serif);\n  margin-bottom: 0.5rem;\n\n  &__title {\n    font-weight: 900;\n    margin-bottom: 0.5em;\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    list-style: circle outside none;\n    padding-left: 0.2rem;\n    margin-bottom: 0.1rem;\n  }\n\n  &__item {\n    color: $content-color;\n    margin-bottom: 0.1rem;\n  }\n\n  &__duration {\n    color: $content-color;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(62);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".skills{font-family:var(--font-family-sans-serif);display:flex;flex-direction:column;align-items:flex-start}.skills__tool{display:flex;flex-direction:column}.skills__tool-title{color:var(--color-dim-medium);font-weight:900;margin-bottom:1em}.skills__workflow{display:flex;flex-direction:column}.skills__workflow-title{color:var(--color-dim-medium);font-weight:900;margin-bottom:1em}","",{version:3,sources:["webpack://src/components/Skills/Skills.scss"],names:[],mappings:"AAAA,QAGE,yCAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CAEA,cACE,YAAA,CACA,qBAAA,CAGF,oBACE,6BAbc,CAcd,eAAA,CACA,iBAAA,CAGF,kBACE,YAAA,CACA,qBAAA,CAGF,wBACE,6BAxBc,CAyBd,eAAA,CACA,iBAAA",sourcesContent:[".skills {\n  $content-color: var(--color-dim-medium);\n\n  font-family: var(--font-family-sans-serif);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  &__tool {\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__tool-title {\n    color: $content-color;\n    font-weight: 900;\n    margin-bottom: 1em;\n  }\n\n  &__workflow {\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__workflow-title {\n    color: $content-color;\n    font-weight: 900;\n    margin-bottom: 1em;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(64);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".skills-tool{align-items:center;margin-bottom:.5rem}.skills-tool__item{width:.884rem;height:.68rem;display:flex;justify-content:center;align-items:center;align-self:center;box-shadow:.01rem .01rem .01rem rgba(0,0,0,.5);margin-right:.3rem;margin-bottom:.3rem}.skills-tool__img{min-width:.4rem;max-width:.8rem;min-height:.4rem;max-height:.52rem}","",{version:3,sources:["webpack://src/components/SkillsTool/SkillsTool.scss"],names:[],mappings:"AAAA,aAIE,kBAAA,CACA,mBAAA,CAEA,mBACE,aAAA,CACA,aAPU,CAQV,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,8CAAA,CACA,kBAAA,CACA,mBAAA,CAGF,kBACE,eAnBS,CAoBT,eAAA,CACA,gBArBS,CAsBT,iBAAA",sourcesContent:[".skills-tool {\n  $img-size: 0.4rem;\n  $item-size: $img-size * 1.7;\n\n  align-items: center;\n  margin-bottom: 0.5rem;\n\n  &__item {\n    width: $item-size * 1.3;\n    height: $item-size;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n    box-shadow: 0.01rem 0.01rem 0.01rem rgba(0, 0, 0, 0.5);\n    margin-right: 0.3rem;\n    margin-bottom: 0.3rem;\n  }\n\n  &__img {\n    min-width: $img-size;\n    max-width: $img-size * 2;\n    min-height: $img-size;\n    max-height: $img-size * 1.3;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(66);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,".skills-workflow{font-family:var(--font-family-sans-serif);display:flex;flex-direction:column;justify-content:space-evenly;align-items:flex-start;list-style:circle outside none;padding-left:.2rem}.skills-workflow__item{margin-bottom:.1rem}.skills-workflow__title{color:var(--color-dim-medium)}","",{version:3,sources:["webpack://src/components/SkillsWorkflow/SkillsWorkflow.scss"],names:[],mappings:"AAAA,iBAGE,yCAAA,CACA,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,sBAAA,CACA,8BAAA,CACA,kBAAA,CAEA,uBACE,mBAAA,CAGF,wBACE,6BAfc",sourcesContent:[".skills-workflow {\n  $content-color: var(--color-dim-medium);\n\n  font-family: var(--font-family-sans-serif);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  list-style: circle outside none;\n  padding-left: 0.2rem;\n\n  &__item {\n    margin-bottom: 0.1rem;\n  }\n\n  &__title {\n    color: $content-color;\n  }\n}\n"],sourceRoot:""}]),n.default=o},function(e,n){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,n,t){var r=t(2),o=t(69);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(71);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,"*,*::before,*::after{box-sizing:border-box}html{scroll-behavior:smooth}body{height:100vh;overflow:auto}#root{height:100%}a{text-decoration:none;color:inherit;cursor:pointer}button{background-color:transparent;color:inherit;border-width:0;padding:0;cursor:pointer}ul,ol,dd{margin:0;padding:0;list-style:none}li{display:flex;align-items:center}h1,h2,h3,h4,h5,h6{margin:0;font-size:inherit;font-weight:inherit}p{margin:0}","",{version:3,sources:["webpack://src/reset.scss"],names:[],mappings:"AAAA,qBAGE,qBAAA,CAGF,KACE,sBAAA,CAGF,KACE,YAAA,CACA,aAAA,CAGF,MACE,WAAA,CAGF,EACE,oBAAA,CACA,aAAA,CACA,cAAA,CAGF,OACE,4BAAA,CACA,aAAA,CACA,cAAA,CACA,SAAA,CACA,cAAA,CAGF,SAGE,QAAA,CACA,SAAA,CACA,eAAA,CAGF,GACE,YAAA,CACA,kBAAA,CAGF,kBAME,QAAA,CACA,iBAAA,CACA,mBAAA,CAGF,EACE,QAAA",sourcesContent:["*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nbody {\n  height: 100vh;\n  overflow: auto;\n}\n\n#root {\n  height: 100%;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n  cursor: pointer;\n}\n\nbutton {\n  background-color: transparent;\n  color: inherit;\n  border-width: 0;\n  padding: 0;\n  cursor: pointer;\n}\n\nul,\nol,\ndd {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nli {\n  display: flex;\n  align-items: center;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  font-size: inherit;\n  font-weight: inherit;\n}\n\np {\n  margin: 0;\n}\n"],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(73);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,':root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}html{font-size:100px}body{font-family:"Roboto",Helvetica,Arial,sans-serif;line-height:1.3}h1{font-size:.45rem}h2{font-size:.35rem}h3{font-size:.21rem}h4{font-size:.18rem}h5{font-size:.16rem}h6{font-size:.14rem}p,span{font-size:.12rem}@media screen and (min-width: 576px){html{font-size:110px}}@media screen and (min-width: 768px){html{font-size:120px}}@media screen and (min-width: 992px){html{font-size:130px}}@media screen and (min-width: 1200px){html{font-size:140px}}@media screen and (min-width: 1400px){html{font-size:150px}}',"",{version:3,sources:["webpack://src/base.scss","webpack://src/typography.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA,CCPF,KACE,eAAA,CAGF,KACE,+CAAA,CACA,eAAA,CAGF,GACE,gBAAA,CAGF,GACE,gBAAA,CAGF,GACE,gBAAA,CAGF,GACE,gBAAA,CAGF,GACE,gBAAA,CAGF,GACE,gBAAA,CAGF,OAEE,gBAAA,CAGF,qCACE,KACE,eAAA,CAAA,CAIJ,qCACE,KACE,eAAA,CAAA,CAIJ,qCACE,KACE,eAAA,CAAA,CAIJ,sCACE,KACE,eAAA,CAAA,CAIJ,sCACE,KACE,eAAA,CAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n','@import "./base";\n\nhtml {\n  font-size: 100px;\n}\n\nbody {\n  font-family: "Roboto", Helvetica, Arial, sans-serif;\n  line-height: 1.3;\n}\n\nh1 {\n  font-size: 0.45rem;\n}\n\nh2 {\n  font-size: 0.35rem;\n}\n\nh3 {\n  font-size: 0.21rem;\n}\n\nh4 {\n  font-size: 0.18rem;\n}\n\nh5 {\n  font-size: 0.16rem;\n}\n\nh6 {\n  font-size: 0.14rem;\n}\n\np,\nspan {\n  font-size: 0.12rem;\n}\n\n@media screen and (min-width: $breakpoint-sm) {\n  html {\n    font-size: 110px;\n  }\n}\n\n@media screen and (min-width: $breakpoint-md) {\n  html {\n    font-size: 120px;\n  }\n}\n\n@media screen and (min-width: $breakpoint-lg) {\n  html {\n    font-size: 130px;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xl) {\n  html {\n    font-size: 140px;\n  }\n}\n\n@media screen and (min-width: $breakpoint-xxl) {\n  html {\n    font-size: 150px;\n  }\n}\n'],sourceRoot:""}]),n.default=o},function(e,n,t){var r=t(2),o=t(75);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,n,t){"use strict";t.r(n);var r=t(1),o=t.n(r)()(!0);o.push([e.i,":root{--color-transparent: transparent;--color-dark: black;--color-mild-dark: dimgray;--color-dim-medium: gray;--color-medium: darkgray;--color-bright-medium: silver;--color-mild-light: lightgray;--color-light: white;--color-main: lightskyblue}","",{version:3,sources:["webpack://src/base.scss"],names:[],mappings:"AAAA,MACE,gCAAA,CACA,mBAAA,CACA,0BAAA,CACA,wBAAA,CACA,wBAAA,CACA,6BAAA,CACA,6BAAA,CACA,oBAAA,CACA,0BAAA",sourcesContent:[':root {\n  --color-transparent: transparent;\n  --color-dark: black;\n  --color-mild-dark: dimgray;\n  --color-dim-medium: gray;\n  --color-medium: darkgray;\n  --color-bright-medium: silver;\n  --color-mild-light: lightgray;\n  --color-light: white;\n  --color-main: lightskyblue;\n}\n\n$breakpoint-xs: 0px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1400px;\n\n$nav-number: 5;\n$nav-transition-duration: 0.3s;\n\n$personal-logo: "../../assets/img/Max.jpg";\n'],sourceRoot:""}]),n.default=o},function(e,n,t){"use strict";t.r(n);var r=t(6),o=t.n(r),i=t(0),a=t.n(i),l=(t(4),a.a.createContext(null));var u=function(e){e()},c={notify:function(){}};function s(){var e=u,n=null,t=null;return{clear:function(){n=null,t=null},notify:function(){e((function(){for(var e=n;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],t=n;t;)e.push(t),t=t.next;return e},subscribe:function(e){var r=!0,o=t={callback:e,next:null,prev:t};return o.prev?o.prev.next=o:n=o,function(){r&&null!==n&&(r=!1,o.next?o.next.prev=o.prev:t=o.prev,o.prev?o.prev.next=o.next:n=o.next)}}}}var f=function(){function e(e,n){this.store=e,this.parentSub=n,this.unsubscribe=null,this.listeners=c,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var n=e.prototype;return n.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},n.notifyNestedSubs=function(){this.listeners.notify()},n.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},n.isSubscribed=function(){return Boolean(this.unsubscribe)},n.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=s())},n.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=c)},e}();var d=function(e){var n=e.store,t=e.context,r=e.children,o=Object(i.useMemo)((function(){var e=new f(n);return e.onStateChange=e.notifyNestedSubs,{store:n,subscription:e}}),[n]),u=Object(i.useMemo)((function(){return n.getState()}),[n]);Object(i.useEffect)((function(){var e=o.subscription;return e.trySubscribe(),u!==n.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[o,u]);var c=t||l;return a.a.createElement(c.Provider,{value:o},r)};function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function m(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}var A=t(5),h=t.n(A),g=t(7),v="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?i.useLayoutEffect:i.useEffect,y=[],b=[null,null];function C(e,n){var t=e[1];return[n.payload,t+1]}function E(e,n,t){v((function(){return e.apply(void 0,n)}),t)}function w(e,n,t,r,o,i,a){e.current=r,n.current=o,t.current=!1,i.current&&(i.current=null,a())}function x(e,n,t,r,o,i,a,l,u,c){if(e){var s=!1,f=null,d=function(){if(!s){var e,t,d=n.getState();try{e=r(d,o.current)}catch(e){t=e,f=e}t||(f=null),e===i.current?a.current||u():(i.current=e,l.current=e,a.current=!0,c({type:"STORE_UPDATED",payload:{error:t}}))}};t.onStateChange=d,t.trySubscribe(),d();return function(){if(s=!0,t.tryUnsubscribe(),t.onStateChange=null,f)throw f}}}var k=function(){return[null,0]};function _(e,n){void 0===n&&(n={});var t=n,r=t.getDisplayName,o=void 0===r?function(e){return"ConnectAdvanced("+e+")"}:r,u=t.methodName,c=void 0===u?"connectAdvanced":u,s=t.renderCountProp,d=void 0===s?void 0:s,A=t.shouldHandleStateChanges,v=void 0===A||A,_=t.storeKey,S=void 0===_?"store":_,T=(t.withRef,t.forwardRef),P=void 0!==T&&T,B=t.context,O=void 0===B?l:B,N=m(t,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]),M=O;return function(n){var t=n.displayName||n.name||"Component",r=o(t),l=p({},N,{getDisplayName:o,methodName:c,renderCountProp:d,shouldHandleStateChanges:v,storeKey:S,displayName:r,wrappedComponentName:t,WrappedComponent:n}),u=N.pure;var s=u?i.useMemo:function(e){return e()};function A(t){var r=Object(i.useMemo)((function(){var e=t.reactReduxForwardedRef,n=m(t,["reactReduxForwardedRef"]);return[t.context,e,n]}),[t]),o=r[0],u=r[1],c=r[2],d=Object(i.useMemo)((function(){return o&&o.Consumer&&Object(g.isContextConsumer)(a.a.createElement(o.Consumer,null))?o:M}),[o,M]),A=Object(i.useContext)(d),h=Boolean(t.store)&&Boolean(t.store.getState)&&Boolean(t.store.dispatch);Boolean(A)&&Boolean(A.store);var _=h?t.store:A.store,S=Object(i.useMemo)((function(){return function(n){return e(n.dispatch,l)}(_)}),[_]),T=Object(i.useMemo)((function(){if(!v)return b;var e=new f(_,h?null:A.subscription),n=e.notifyNestedSubs.bind(e);return[e,n]}),[_,h,A]),P=T[0],B=T[1],O=Object(i.useMemo)((function(){return h?A:p({},A,{subscription:P})}),[h,A,P]),N=Object(i.useReducer)(C,y,k),R=N[0][0],z=N[1];if(R&&R.error)throw R.error;var I=Object(i.useRef)(),F=Object(i.useRef)(c),j=Object(i.useRef)(),$=Object(i.useRef)(!1),D=s((function(){return j.current&&c===F.current?j.current:S(_.getState(),c)}),[_,R,c]);E(w,[F,I,$,c,D,j,B]),E(x,[v,_,P,S,F,I,$,j,B,z],[_,P,S]);var L=Object(i.useMemo)((function(){return a.a.createElement(n,p({},D,{ref:u}))}),[u,n,D]);return Object(i.useMemo)((function(){return v?a.a.createElement(d.Provider,{value:O},L):L}),[d,L,O])}var _=u?a.a.memo(A):A;if(_.WrappedComponent=n,_.displayName=r,P){var T=a.a.forwardRef((function(e,n){return a.a.createElement(_,p({},e,{reactReduxForwardedRef:n}))}));return T.displayName=r,T.WrappedComponent=n,h()(T,n)}return h()(_,n)}}function S(e,n){return e===n?0!==e||0!==n||1/e==1/n:e!=e&&n!=n}function T(e,n){if(S(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(var o=0;o<t.length;o++)if(!Object.prototype.hasOwnProperty.call(n,t[o])||!S(e[t[o]],n[t[o]]))return!1;return!0}var P=t(9),B=function(){return Math.random().toString(36).substring(7).split("").join(".")},O={INIT:"@@redux/INIT"+B(),REPLACE:"@@redux/REPLACE"+B(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+B()}};function N(e){if("object"!=typeof e||null===e)return!1;for(var n=e;null!==Object.getPrototypeOf(n);)n=Object.getPrototypeOf(n);return Object.getPrototypeOf(e)===n}function M(e,n,t){var r;if("function"==typeof n&&"function"==typeof t||"function"==typeof t&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof n&&void 0===t&&(t=n,n=void 0),void 0!==t){if("function"!=typeof t)throw new Error("Expected the enhancer to be a function.");return t(M)(e,n)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var o=e,i=n,a=[],l=a,u=!1;function c(){l===a&&(l=a.slice())}function s(){if(u)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return i}function f(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(u)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var n=!0;return c(),l.push(e),function(){if(n){if(u)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");n=!1,c();var t=l.indexOf(e);l.splice(t,1),a=null}}}function d(e){if(!N(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(u)throw new Error("Reducers may not dispatch actions.");try{u=!0,i=o(i,e)}finally{u=!1}for(var n=a=l,t=0;t<n.length;t++){(0,n[t])()}return e}function p(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");o=e,d({type:O.REPLACE})}function m(){var e,n=f;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function t(){e.next&&e.next(s())}return t(),{unsubscribe:n(t)}}})[P.a]=function(){return this},e}return d({type:O.INIT}),(r={dispatch:d,subscribe:f,getState:s,replaceReducer:p})[P.a]=m,r}function R(e,n){var t=n&&n.type;return"Given "+(t&&'action "'+String(t)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function z(e,n){return function(){return n(e.apply(this,arguments))}}function I(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function F(e,n){var t=Object.keys(e);return Object.getOwnPropertySymbols&&t.push.apply(t,Object.getOwnPropertySymbols(e)),n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t}function j(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?F(t,!0).forEach((function(n){I(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):F(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function $(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return 0===n.length?function(e){return e}:1===n.length?n[0]:n.reduce((function(e,n){return function(){return e(n.apply(void 0,arguments))}}))}function D(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return function(e){return function(){var t=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:t.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=n.map((function(e){return e(o)}));return j({},t,{dispatch:r=$.apply(void 0,i)(t.dispatch)})}}}function L(e){return function(n,t){var r=e(n,t);function o(){return r}return o.dependsOnOwnProps=!1,o}}function U(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function W(e,n){return function(n,t){t.displayName;var r=function(e,n){return r.dependsOnOwnProps?r.mapToProps(e,n):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(n,t){r.mapToProps=e,r.dependsOnOwnProps=U(e);var o=r(n,t);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=U(o),o=r(n,t)),o},r}}var G=[function(e){return"function"==typeof e?W(e):void 0},function(e){return e?void 0:L((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?L((function(n){return function(e,n){if("function"==typeof e)return z(e,n);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var t={};for(var r in e){var o=e[r];"function"==typeof o&&(t[r]=z(o,n))}return t}(e,n)})):void 0}];var H=[function(e){return"function"==typeof e?W(e):void 0},function(e){return e?void 0:L((function(){return{}}))}];function q(e,n,t){return p({},t,{},e,{},n)}var V=[function(e){return"function"==typeof e?function(e){return function(n,t){t.displayName;var r,o=t.pure,i=t.areMergedPropsEqual,a=!1;return function(n,t,l){var u=e(n,t,l);return a?o&&i(u,r)||(r=u):(a=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return q}}];function Q(e,n,t,r){return function(o,i){return t(e(o,i),n(r,i),i)}}function Y(e,n,t,r,o){var i,a,l,u,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,A,h=!f(p,a),g=!s(o,i);return i=o,a=p,h&&g?(l=e(i,a),n.dependsOnOwnProps&&(u=n(r,a)),c=t(l,u,a)):h?(e.dependsOnOwnProps&&(l=e(i,a)),n.dependsOnOwnProps&&(u=n(r,a)),c=t(l,u,a)):g?(m=e(i,a),A=!d(m,l),l=m,A&&(c=t(l,u,a)),c):c}return function(o,s){return p?m(o,s):(l=e(i=o,a=s),u=n(r,a),c=t(l,u,a),p=!0,c)}}function K(e,n){var t=n.initMapStateToProps,r=n.initMapDispatchToProps,o=n.initMergeProps,i=m(n,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=t(e,i),l=r(e,i),u=o(e,i);return(i.pure?Y:Q)(a,l,u,e,i)}function X(e,n,t){for(var r=n.length-1;r>=0;r--){var o=n[r](e);if(o)return o}return function(n,r){throw new Error("Invalid value of type "+typeof e+" for "+t+" argument when connecting component "+r.wrappedComponentName+".")}}function J(e,n){return e===n}function Z(e){var n=void 0===e?{}:e,t=n.connectHOC,r=void 0===t?_:t,o=n.mapStateToPropsFactories,i=void 0===o?H:o,a=n.mapDispatchToPropsFactories,l=void 0===a?G:a,u=n.mergePropsFactories,c=void 0===u?V:u,s=n.selectorFactory,f=void 0===s?K:s;return function(e,n,t,o){void 0===o&&(o={});var a=o,u=a.pure,s=void 0===u||u,d=a.areStatesEqual,A=void 0===d?J:d,h=a.areOwnPropsEqual,g=void 0===h?T:h,v=a.areStatePropsEqual,y=void 0===v?T:v,b=a.areMergedPropsEqual,C=void 0===b?T:b,E=m(a,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),w=X(e,i,"mapStateToProps"),x=X(n,l,"mapDispatchToProps"),k=X(t,c,"mergeProps");return r(f,p({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:w,initMapDispatchToProps:x,initMergeProps:k,pure:s,areStatesEqual:A,areOwnPropsEqual:g,areStatePropsEqual:y,areMergedPropsEqual:C},E))}}var ee=Z();var ne;ne=r.unstable_batchedUpdates,u=ne;var te=function(e){for(var n=Object.keys(e),t={},r=0;r<n.length;r++){var o=n[r];0,"function"==typeof e[o]&&(t[o]=e[o])}var i,a=Object.keys(t);try{!function(e){Object.keys(e).forEach((function(n){var t=e[n];if(void 0===t(void 0,{type:O.INIT}))throw new Error('Reducer "'+n+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===t(void 0,{type:O.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+n+"\" returned undefined when probed with a random type. Don't try to handle "+O.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(t)}catch(e){i=e}return function(e,n){if(void 0===e&&(e={}),i)throw i;for(var r=!1,o={},l=0;l<a.length;l++){var u=a[l],c=t[u],s=e[u],f=c(s,n);if(void 0===f){var d=R(u,n);throw new Error(d)}o[u]=f,r=r||f!==s}return(r=r||a.length!==Object.keys(e).length)?o:e}}({topDropDisplay:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"SHOW_TOP_DROP":return!0;case"HIDE_TOP_DROP":return!1;default:return e}}});function re(e){return function(n){var t=n.dispatch,r=n.getState;return function(n){return function(o){return"function"==typeof o?o(t,r,e):n(o)}}}}var oe=re();oe.withExtraArgument=re;var ie=[oe],ae=window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()?M(te,$(D.apply(void 0,ie),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__())):M(te,D.apply(void 0,ie)),le=t(16),ue=t.n(le),ce=t(17),se=t.n(ce),fe=t(18),de=t.n(fe),pe=t(19),me=t.n(pe),Ae=t(10),he=t.n(Ae),ge=t(3);function ve(e){return"/"===e.charAt(0)}function ye(e,n){for(var t=n,r=t+1,o=e.length;r<o;t+=1,r+=1)e[t]=e[r];e.pop()}var be=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],o=n&&n.split("/")||[],i=e&&ve(e),a=n&&ve(n),l=i||a;if(e&&ve(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];t="."===u||".."===u||""===u}else t=!1;for(var c=0,s=o.length;s>=0;s--){var f=o[s];"."===f?ye(o,s):".."===f?(ye(o,s),c++):c&&(ye(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&ve(o[0])||o.unshift("");var d=o.join("/");return t&&"/"!==d.substr(-1)&&(d+="/"),d};var Ce=function(e,n){if(!e)throw new Error("Invariant failed")};function Ee(e){return"/"===e.charAt(0)?e:"/"+e}function we(e){return"/"===e.charAt(0)?e.substr(1):e}function xe(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function ke(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function _e(e){var n=e.pathname,t=e.search,r=e.hash,o=n||"/";return t&&"?"!==t&&(o+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function Se(e,n,t,r){var o;"string"==typeof e?(o=function(e){var n=e||"/",t="",r="",o=n.indexOf("#");-1!==o&&(r=n.substr(o),n=n.substr(0,o));var i=n.indexOf("?");return-1!==i&&(t=n.substr(i),n=n.substr(0,i)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e)).state=n:(void 0===(o=p({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==n&&void 0===o.state&&(o.state=n));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return t&&(o.key=t),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=be(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function Te(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,o){if(null!=e){var i="function"==typeof e?e(n,t):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var Pe=!("undefined"==typeof window||!window.document||!window.document.createElement);function Be(e,n){n(window.confirm(e))}function Oe(){try{return window.history.state||{}}catch(e){return{}}}function Ne(e){void 0===e&&(e={}),Pe||Ce(!1);var n,t=window.history,r=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?Be:u,s=i.keyLength,f=void 0===s?6:s,d=e.basename?ke(Ee(e.basename)):"";function m(e){var n=e||{},t=n.key,r=n.state,o=window.location,i=o.pathname+o.search+o.hash;return d&&(i=xe(i,d)),Se(i,r,t)}function A(){return Math.random().toString(36).substr(2,f)}var h=Te();function g(e){p(P,e),P.length=t.length,h.notifyListeners(P.location,P.action)}function v(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||C(m(e.state))}function y(){C(m(Oe()))}var b=!1;function C(e){if(b)b=!1,g();else{h.confirmTransitionTo(e,"POP",c,(function(n){n?g({action:"POP",location:e}):function(e){var n=P.location,t=w.indexOf(n.key);-1===t&&(t=0);var r=w.indexOf(e.key);-1===r&&(r=0);var o=t-r;o&&(b=!0,k(o))}(e)}))}}var E=m(Oe()),w=[E.key];function x(e){return d+_e(e)}function k(e){t.go(e)}var _=0;function S(e){1===(_+=e)&&1===e?(window.addEventListener("popstate",v),o&&window.addEventListener("hashchange",y)):0===_&&(window.removeEventListener("popstate",v),o&&window.removeEventListener("hashchange",y))}var T=!1;var P={length:t.length,action:"POP",location:E,createHref:x,push:function(e,n){var o=Se(e,n,A(),P.location);h.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var n=x(o),i=o.key,a=o.state;if(r)if(t.pushState({key:i,state:a},null,n),l)window.location.href=n;else{var u=w.indexOf(P.location.key),c=w.slice(0,u+1);c.push(o.key),w=c,g({action:"PUSH",location:o})}else window.location.href=n}}))},replace:function(e,n){var o=Se(e,n,A(),P.location);h.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var n=x(o),i=o.key,a=o.state;if(r)if(t.replaceState({key:i,state:a},null,n),l)window.location.replace(n);else{var u=w.indexOf(P.location.key);-1!==u&&(w[u]=o.key),g({action:"REPLACE",location:o})}else window.location.replace(n)}}))},go:k,goBack:function(){k(-1)},goForward:function(){k(1)},block:function(e){void 0===e&&(e=!1);var n=h.setPrompt(e);return T||(S(1),T=!0),function(){return T&&(T=!1,S(-1)),n()}},listen:function(e){var n=h.appendListener(e);return S(1),function(){S(-1),n()}}};return P}var Me={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+we(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:we,decodePath:Ee},slash:{encodePath:Ee,decodePath:Ee}};function Re(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function ze(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function Ie(e){window.location.replace(Re(window.location.href)+"#"+e)}function Fe(e){void 0===e&&(e={}),Pe||Ce(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),r=t.getUserConfirmation,o=void 0===r?Be:r,i=t.hashType,a=void 0===i?"slash":i,l=e.basename?ke(Ee(e.basename)):"",u=Me[a],c=u.encodePath,s=u.decodePath;function f(){var e=s(ze());return l&&(e=xe(e,l)),Se(e)}var d=Te();function m(e){p(_,e),_.length=n.length,d.notifyListeners(_.location,_.action)}var A=!1,h=null;function g(){var e,n,t=ze(),r=c(t);if(t!==r)Ie(r);else{var i=f(),a=_.location;if(!A&&(n=i,(e=a).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if(h===_e(i))return;h=null,function(e){if(A)A=!1,m();else{d.confirmTransitionTo(e,"POP",o,(function(n){n?m({action:"POP",location:e}):function(e){var n=_.location,t=C.lastIndexOf(_e(n));-1===t&&(t=0);var r=C.lastIndexOf(_e(e));-1===r&&(r=0);var o=t-r;o&&(A=!0,E(o))}(e)}))}}(i)}}var v=ze(),y=c(v);v!==y&&Ie(y);var b=f(),C=[_e(b)];function E(e){n.go(e)}var w=0;function x(e){1===(w+=e)&&1===e?window.addEventListener("hashchange",g):0===w&&window.removeEventListener("hashchange",g)}var k=!1;var _={length:n.length,action:"POP",location:b,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=Re(window.location.href)),t+"#"+c(l+_e(e))},push:function(e,n){var t=Se(e,void 0,void 0,_.location);d.confirmTransitionTo(t,"PUSH",o,(function(e){if(e){var n=_e(t),r=c(l+n);if(ze()!==r){h=n,function(e){window.location.hash=e}(r);var o=C.lastIndexOf(_e(_.location)),i=C.slice(0,o+1);i.push(n),C=i,m({action:"PUSH",location:t})}else m()}}))},replace:function(e,n){var t=Se(e,void 0,void 0,_.location);d.confirmTransitionTo(t,"REPLACE",o,(function(e){if(e){var n=_e(t),r=c(l+n);ze()!==r&&(h=n,Ie(r));var o=C.indexOf(_e(_.location));-1!==o&&(C[o]=n),m({action:"REPLACE",location:t})}}))},go:E,goBack:function(){E(-1)},goForward:function(){E(1)},block:function(e){void 0===e&&(e=!1);var n=d.setPrompt(e);return k||(x(1),k=!0),function(){return k&&(k=!1,x(-1)),n()}},listen:function(e){var n=d.appendListener(e);return x(1),function(){x(-1),n()}}};return _}function je(e,n,t){return Math.min(Math.max(e,n),t)}function $e(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,r=n.initialEntries,o=void 0===r?["/"]:r,i=n.initialIndex,a=void 0===i?0:i,l=n.keyLength,u=void 0===l?6:l,c=Te();function s(e){p(g,e),g.length=g.entries.length,c.notifyListeners(g.location,g.action)}function f(){return Math.random().toString(36).substr(2,u)}var d=je(a,0,o.length-1),m=o.map((function(e){return Se(e,void 0,"string"==typeof e?f():e.key||f())})),A=_e;function h(e){var n=je(g.index+e,0,g.entries.length-1),r=g.entries[n];c.confirmTransitionTo(r,"POP",t,(function(e){e?s({action:"POP",location:r,index:n}):s()}))}var g={length:m.length,action:"POP",location:m[d],index:d,entries:m,createHref:A,push:function(e,n){var r=Se(e,n,f(),g.location);c.confirmTransitionTo(r,"PUSH",t,(function(e){if(e){var n=g.index+1,t=g.entries.slice(0);t.length>n?t.splice(n,t.length-n,r):t.push(r),s({action:"PUSH",location:r,index:n,entries:t})}}))},replace:function(e,n){var r=Se(e,n,f(),g.location);c.confirmTransitionTo(r,"REPLACE",t,(function(e){e&&(g.entries[g.index]=r,s({action:"REPLACE",location:r}))}))},go:h,goBack:function(){h(-1)},goForward:function(){h(1)},canGo:function(e){var n=g.index+e;return n>=0&&n<g.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return g}var De=t(11),Le=t(12),Ue=t.n(Le),We=function(e){var n=Object(De.a)();return n.displayName=e,n}("Router-History"),Ge=function(e){var n=Object(De.a)();return n.displayName=e,n}("Router"),He=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._isMounted?t.setState({location:e}):t._pendingLocation=e}))),t}Object(ge.a)(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&this.unlisten()},t.render=function(){return a.a.createElement(Ge.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},a.a.createElement(We.Provider,{children:this.props.children||null,value:this.props.history}))},n}(a.a.Component);a.a.Component;a.a.Component;var qe={},Ve=0;function Qe(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,o=t.exact,i=void 0!==o&&o,a=t.strict,l=void 0!==a&&a,u=t.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=qe[t]||(qe[t]={});if(r[e])return r[e];var o=[],i={regexp:Ue()(e,o,n),keys:o};return Ve<1e4&&(r[e]=i,Ve++),i}(t,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:t,url:"/"===t&&""===s?"/":s,isExact:d,params:a.reduce((function(e,n,t){return e[n.name]=f[t],e}),{})}}),null)}var Ye=function(e){function n(){return e.apply(this,arguments)||this}return Object(ge.a)(n,e),n.prototype.render=function(){var e=this;return a.a.createElement(Ge.Consumer,null,(function(n){n||Ce(!1);var t=e.props.location||n.location,r=p({},n,{location:t,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Qe(t.pathname,e.props):n.match}),o=e.props,i=o.children,l=o.component,u=o.render;return Array.isArray(i)&&0===i.length&&(i=null),a.a.createElement(Ge.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?a.a.createElement(l,r):u?u(r):null:"function"==typeof i?i(r):null)}))},n}(a.a.Component);function Ke(e){return"/"===e.charAt(0)?e:"/"+e}function Xe(e,n){if(!e)return n;var t=Ke(e);return 0!==n.pathname.indexOf(t)?n:p({},n,{pathname:n.pathname.substr(t.length)})}function Je(e){return"string"==typeof e?e:_e(e)}function Ze(e){return function(){Ce(!1)}}function en(){}a.a.Component;var nn=function(e){function n(){return e.apply(this,arguments)||this}return Object(ge.a)(n,e),n.prototype.render=function(){var e=this;return a.a.createElement(Ge.Consumer,null,(function(n){n||Ce(!1);var t,r,o=e.props.location||n.location;return a.a.Children.forEach(e.props.children,(function(e){if(null==r&&a.a.isValidElement(e)){t=e;var i=e.props.path||e.props.from;r=i?Qe(o.pathname,p({},e.props,{path:i})):n.match}})),r?a.a.cloneElement(t,{location:o,computedMatch:r}):null}))},n}(a.a.Component);a.a.useContext;var tn=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).history=Ne(n.props),n}return Object(ge.a)(n,e),n.prototype.render=function(){return a.a.createElement(He,{history:this.history,children:this.props.children})},n}(a.a.Component);a.a.Component;var rn=function(e,n){return"function"==typeof e?e(n):e},on=function(e,n){return"string"==typeof e?Se(e,null,null,n):e},an=function(e){return e},ln=a.a.forwardRef;void 0===ln&&(ln=an);var un=ln((function(e,n){var t=e.innerRef,r=e.navigate,o=e.onClick,i=m(e,["innerRef","navigate","onClick"]),l=i.target,u=p({},i,{onClick:function(e){try{o&&o(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=an!==ln&&n||t,a.a.createElement("a",u)}));var cn=ln((function(e,n){var t=e.component,r=void 0===t?un:t,o=e.replace,i=e.to,l=e.innerRef,u=m(e,["component","replace","to","innerRef"]);return a.a.createElement(Ge.Consumer,null,(function(e){e||Ce(!1);var t=e.history,c=on(rn(i,e.location),e.location),s=c?t.createHref(c):"",f=p({},u,{href:s,navigate:function(){var n=rn(i,e.location);(o?t.replace:t.push)(n)}});return an!==ln?f.ref=n||l:f.innerRef=l,a.a.createElement(r,f)}))})),sn=function(e){return e},fn=a.a.forwardRef;void 0===fn&&(fn=sn);fn((function(e,n){var t=e["aria-current"],r=void 0===t?"page":t,o=e.activeClassName,i=void 0===o?"active":o,l=e.activeStyle,u=e.className,c=e.exact,s=e.isActive,f=e.location,d=e.sensitive,A=e.strict,h=e.style,g=e.to,v=e.innerRef,y=m(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return a.a.createElement(Ge.Consumer,null,(function(e){e||Ce(!1);var t=f||e.location,o=on(rn(g,t),t),m=o.pathname,b=m&&m.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),C=b?Qe(t.pathname,{path:b,exact:c,sensitive:d,strict:A}):null,E=!!(s?s(C,t):C),w=E?function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}(u,i):u,x=E?p({},h,{},l):h,k=p({"aria-current":E&&r||null,className:w,style:x,to:o},y);return sn!==fn?k.ref=n||v:k.innerRef=v,a.a.createElement(cn,k)}))}));var dn=function(e){return e?{type:"HIDE_TOP_DROP"}:{type:"SHOW_TOP_DROP"}},pn={links:[{title:"ABOUT",content:"#about"},{title:"EDUCATION",content:"#education"},{title:"EXPERIENCE",content:"#experience"},{title:"PROJECTS",content:"#projects"},{title:"SKILLS",content:"#skills"}]},mn=(t(33),function(e){var n=e.children,t=e.className;return a.a.createElement("div",{className:"container ".concat(void 0===t?"":t)},n)}),An=(t(35),function(e){var n=e.children,t=e.className;return a.a.createElement("div",{className:"row ".concat(void 0===t?"":t)},n)}),hn=(t(37),function(e){var n=e.links;return a.a.createElement("ul",{className:"top-link"},n.map((function(e,n){return a.a.createElement("li",{key:n},a.a.createElement("h5",null,a.a.createElement("a",{href:e.content,className:"top-link__link"},e.title)))})))}),gn=(t(39),ee((function(e){return{topDropDisplay:e.topDropDisplay}}))((function(e){var n=e.links,t=e.topDropDisplay;return a.a.createElement("ul",{className:"top-drop ".concat(t?"top-drop--active":"")},n.map((function(e,n){return a.a.createElement("li",{key:n,className:"top-drop__item"},a.a.createElement("h5",null,a.a.createElement("a",{href:e.content,className:"top-drop__link"},e.title)))})))}))),vn=(t(41),ee((function(e){return{topDropDisplay:e.topDropDisplay}}),(function(e){return{handleTopDropDisplay:function(n){e(dn(n))}}}))((function(e){var n=e.topDropDisplay,t=e.handleTopDropDisplay;return a.a.createElement("div",{className:"top-nav"},a.a.createElement("div",{className:"top-nav__main"},a.a.createElement(mn,null,a.a.createElement(An,{className:"top-nav__content"},a.a.createElement("div",{className:"top-nav__img"}),a.a.createElement(hn,{links:pn.links}),a.a.createElement("button",{className:"top-nav__button ".concat(n?"top-nav__button--active":""),onClick:function(){t(n)}},a.a.createElement("span",{className:"top-nav__button-shape"}),a.a.createElement("span",{className:"top-nav__button-shape"}),a.a.createElement("span",{className:"top-nav__button-shape"}))))),a.a.createElement("div",{className:"top-nav__sub"},a.a.createElement(mn,null,a.a.createElement(gn,{links:pn.links}))))}))),yn=(t(43),ee((function(e){return{topDropDisplay:e.topDropDisplay}}),(function(e){return{handleTopDropDisplay:function(n){e(dn(n))}}}))((function(e){var n=e.topDropDisplay,t=e.handleTopDropDisplay;return n?a.a.createElement("div",{className:"nav-banner",onClick:function(){t(n)}}):null}))),bn=(t(45),function(e){var n=e.children;return a.a.createElement("div",{className:"main"},n)}),Cn=(t(47),function(e){var n=e.children;return a.a.createElement("div",{className:"section"},a.a.createElement(mn,{className:"section__container"},n))}),En=(t(49),function(e){var n=e.children,t=e.title;return a.a.createElement("div",{className:"section-title"},a.a.createElement("h2",{className:"section-title__title"},t),n)}),wn={name:"SHUYANG HE",contact:"maxhe2019@gmail.com     206-849-9105",content:"Trained engineer seeking challenging job in front-end engineer."},xn=[{img:"assets/img/linkedin.svg",link:"https://www.linkedin.com/in/shuyang-he-592719106/"},{img:"assets/img/github.svg",link:"https://github.com/shuyang-he"}],kn=(t(51),function(){return a.a.createElement("ul",{className:"about-links"},xn.map((function(e,n){return a.a.createElement("li",{key:n,className:"about-links__item"},a.a.createElement("a",{href:e.link,className:"about-links__link"},a.a.createElement("img",{src:e.img,className:"about-links__img"})))})))}),_n=(t(53),function(){return a.a.createElement("div",{className:"about"},a.a.createElement("div",{className:"about__title"},a.a.createElement("h1",{className:"about__name"},wn.name),a.a.createElement("h5",{className:"about__contact"},wn.contact)),a.a.createElement("h4",{className:"about__content"},wn.content),a.a.createElement(kn,null))}),Sn=[{title:"WASHINGTON UNIVERSITY IN ST. LOUIS",degree:"MASTER OF SCIENCE",major:"Computer Science, Engineering and Applied Science",duration:"08/2017 - 05/2019"},{title:"UNIVERSITY OF WASHINGTON",degree:"BACHELOR OF SCIENCE",major:"Electrical Engineering, College of Engineering",duration:"08/2013 - 06/2017"}],Tn=(t(55),function(){return a.a.createElement("ul",null,Sn.map((function(e,n){return a.a.createElement("li",{key:n,className:"education"},a.a.createElement("h3",{className:"education__title"},e.title),a.a.createElement("h4",{className:"education__degree"},e.degree),a.a.createElement("h5",{className:"education__major"},e.major),a.a.createElement("h5",{className:"education__duration"},e.duration))})))}),Pn=[{title:"ALTOMNI",duty:"IPG WEBSITE",content:["Designed mobile first, responsive IPG company website structure with BEM methodologies.","Designed the CSS reset, grid system.","Implement website events by jQuery.","Web scraping information for Altomni candidate database using Puppeteer Node.js."],duration:"06/2020 - 08/2020"},{title:"MOBILE PROGRAMMING",duty:"RESTAURANT RECOMMENDATION WEBSITE",content:["Built up user information database with MongoDB.","Built up Model, Controller layer to accomplish register, login with Express Node.js.","Built React development environment using Webpack.","Built up register, login, and restaurant page with React and show restaurants location on map using Google Map API.","Using Redux to manage states and Bootstrap to manage styling."],duration:"08/2019 - 03/2020"}],Bn=(t(57),function(){return a.a.createElement("ul",null,Pn.map((function(e,n){return a.a.createElement("li",{key:n,className:"experience"},a.a.createElement("h3",{className:"experience__title"},e.title),a.a.createElement("h4",{className:"experience__duty"},e.duty),a.a.createElement("ul",{className:"experience__content"},e.content.map((function(e,n){return a.a.createElement("li",{key:n,className:"experience__item"},a.a.createElement("h5",null,e))}))),a.a.createElement("h5",{className:"experience__duration"},e.duration))})))}),On=[{title:"WEBSITE SPEED TESTER",content:["Built CLI client interface using Node.js.","Built server using Node.js and use WebSocket to connect client.","Designed commands to test multiple websites response speed and calculate the min, max, average response time for each website using Promise.","Server can handle multiple tests and save all tests results in using file system."],duration:"04/2020 - 05/2020"},{title:"ONLINE CHAT ROOM",content:["Evaluated and selected t2.micro as the server.","Designed and implemented the chat room user interface using HTML, CSS.","Implement users register and login functions using Node.js.","Implement group chat and private chat functions using Node.js WebSocket."],duration:"04/2018 - 05/2018"},{title:"ONLINE CALENDAR",content:["Built up users’ table and memo table with MySQL.","Implement calendar register, login and show up corresponding memos on calendar using JavaScript and PHP.","Implement memo creating, updating, deleting using JavaScript Ajax with PHP."],duration:"03/2018 - 04/2018"},{title:"SIMPLIFIED SQL DATABASE",content:["Implemented the physical layer which supports integer and string type using Java.","Implemented aggregation functions like COUNT, AVG, SUM, MAX, MIN and parse SQL using jsqlparser API.","Implemented B+ tree index structure to the database using Java.","Implemented read lock, write lock and buffer to support rollback using Java."],duration:"01/2018 - 05/2018"}],Nn=(t(59),function(){return a.a.createElement("ul",null,On.map((function(e,n){return a.a.createElement("li",{key:n,className:"projects"},a.a.createElement("h3",{className:"projects__title"},e.title),a.a.createElement("ul",{className:"projects__content"},e.content.map((function(e,n){return a.a.createElement("li",{key:n,className:"projects__item"},a.a.createElement("h5",null,e))}))),a.a.createElement("h5",{className:"projects__duration"},e.duration))})))}),Mn={tool:"PROGRAMMING LANGUAGES AND TOOLS",workflow:"WORKFLOW"},Rn=(t(61),["assets/img/html5.svg","assets/img/css3.svg","assets/img/javascript.svg","assets/img/react.svg","assets/img/redux.svg","assets/img/webpack.svg","assets/img/sass.svg","assets/img/express.svg","assets/img/nodejs.svg","assets/img/jquery.svg","assets/img/java.svg","assets/img/mongodb.svg","assets/img/mysql.svg"]),zn=(t(63),function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n="auto";return e>0&&(n="".concat(e/12*100,"%")),{display:"flex",flexBasis:n}}),In=function(e){var n=e.children,t=e.className,r=e.size;return a.a.createElement("div",{style:zn(r),className:t},n)},Fn=function(){return a.a.createElement(An,{className:"skills-tool"},Rn.map((function(e,n){return a.a.createElement(In,{key:n,className:"skills-tool__item"},a.a.createElement("img",{src:e,className:"skills-tool__img"}))})))},jn=["Mobile-First, Responsive Design","Cross Browser Testing and Debugging","RESTful API Design"],$n=(t(65),function(){return a.a.createElement("ul",{className:"skills-workflow"},jn.map((function(e,n){return a.a.createElement("li",{key:n,className:"skills-workflow__item"},a.a.createElement("h4",{className:"skills-workflow__title"},e))})))}),Dn=function(){return a.a.createElement("div",{className:"skills"},a.a.createElement("div",{className:"skills__tool"},a.a.createElement("h3",{className:"skills__tool-title"},Mn.tool),a.a.createElement(Fn,null)),a.a.createElement("div",{className:"skills__workflow"},a.a.createElement("h3",{className:"skills__workflow-title"},Mn.workflow),a.a.createElement($n,null)))};function Ln(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,r=he()(e);if(n){var o=he()(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return me()(this,t)}}var Un=function(e){de()(t,e);var n=Ln(t);function t(){return ue()(this,t),n.apply(this,arguments)}return se()(t,[{key:"render",value:function(){return a.a.createElement(tn,null,a.a.createElement(vn,null),a.a.createElement(yn,null),a.a.createElement(nn,null,a.a.createElement(Ye,{path:"/"},a.a.createElement(bn,null,a.a.createElement(Cn,null,a.a.createElement(_n,null)),a.a.createElement(Cn,null,a.a.createElement(En,{title:"EDUCATION"},a.a.createElement(Tn,null))),a.a.createElement(Cn,null,a.a.createElement(En,{title:"EXPERIENCE"},a.a.createElement(Bn,null))),a.a.createElement(Cn,null,a.a.createElement(En,{title:"PROJECTS"},a.a.createElement(Nn,null))),a.a.createElement(Cn,null,a.a.createElement(En,{title:"SKILLS"},a.a.createElement(Dn,null))))),a.a.createElement(Ye,{path:"*"})))}}]),t}(i.Component);t(68),t(70),t(72),t(74);o.a.render(a.a.createElement(d,{store:ae},a.a.createElement(Un,null)),document.querySelector("#root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvaW1nL01heC5qcGciLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovLy8uL3NyYy9jb250YWluZXJzL0NvbnRhaW5lci9Db250YWluZXIuc2Nzcz81MzQ5Iiwid2VicGFjazovLy8uL3NyYy9jb250YWluZXJzL0NvbnRhaW5lci9Db250YWluZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9Sb3cvUm93LnNjc3M/MmYxNiIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9Sb3cvUm93LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVG9wTGluay9Ub3BsaW5rLnNjc3M/ZmFiZCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ub3BMaW5rL1RvcGxpbmsuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ub3BEcm9wL1RvcERyb3Auc2Nzcz9lZDRjIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RvcERyb3AvVG9wRHJvcC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RvcE5hdi9Ub3BOYXYuc2Nzcz82YTMyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RvcE5hdi9Ub3BOYXYuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9OYXZCYW5uZXIvTmF2QmFubmVyLnNjc3M/YzgyMiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9OYXZCYW5uZXIvTmF2QmFubmVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRhaW5lcnMvTWFpbi9tYWluLnNjc3M/NWYzNyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9NYWluL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9TZWN0aW9uL1NlY3Rpb24uc2Nzcz82YmQ0Iiwid2VicGFjazovLy8uL3NyYy9jb250YWluZXJzL1NlY3Rpb24vU2VjdGlvbi5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb25UaXRsZS9TZWN0aW9uVGl0bGUuc2Nzcz81YjU2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb25UaXRsZS9TZWN0aW9uVGl0bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BYm91dExpbmtzL0Fib3V0TGlua3Muc2Nzcz8xMmM5Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Fib3V0TGlua3MvQWJvdXRMaW5rcy5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Fib3V0L0Fib3V0LnNjc3M/NmM1OCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BYm91dC9BYm91dC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0VkdWNhdGlvbi9FZHVjYXRpb24uc2Nzcz8zMTcwIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0VkdWNhdGlvbi9FZHVjYXRpb24uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9FeHBlcmllbmNlL0V4cGVyaWVuY2Uuc2Nzcz83N2I2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0V4cGVyaWVuY2UvRXhwZXJpZW5jZS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1Byb2plY3RzL1Byb2plY3RzLnNjc3M/MzViNiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Qcm9qZWN0cy9Qcm9qZWN0cy5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxscy9Ta2lsbHMuc2Nzcz8wMGZmIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxscy9Ta2lsbHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ta2lsbHNUb29sL1NraWxsc1Rvb2wuc2Nzcz85ZDAxIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxsc1Rvb2wvU2tpbGxzVG9vbC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxsc1dvcmtmbG93L1NraWxsc1dvcmtmbG93LnNjc3M/OTljMSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ta2lsbHNXb3JrZmxvdy9Ta2lsbHNXb3JrZmxvdy5zY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz8zNDJmIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Jlc2V0LnNjc3M/ZTk4MyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVzZXQuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvdHlwb2dyYXBoeS5zY3NzPzJjYjYiLCJ3ZWJwYWNrOi8vLy4vc3JjL3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYmFzZS5zY3NzPzk3YWYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Jhc2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Db250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvU3Vic2NyaXB0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC93cmFwTWFwVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBEaXNwYXRjaFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvc2VsZWN0b3JGYWN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvVG9wRHJvcERpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC10aHVuay9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzbS9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXNtL3JlYWN0LXJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9Ub3BEcm9wRGlzcGxheS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ub3BOYXYvVG9wTmF2RGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9Db250YWluZXIvQ29udGFpbmVyLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9Sb3cvUm93LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ub3BMaW5rL1RvcExpbmsuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RvcERyb3AvVG9wRHJvcC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVG9wTmF2L1RvcE5hdi5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTmF2QmFubmVyL05hdkJhbm5lci5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRhaW5lcnMvTWFpbi9NYWluLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGFpbmVycy9TZWN0aW9uL1NlY3Rpb24uanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb25UaXRsZS9TZWN0aW9uVGl0bGUuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Fib3V0L0Fib3V0RGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BYm91dExpbmtzL0Fib3V0TGlua3NEYXRhLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Fib3V0TGlua3MvQWJvdXRMaW5rcy5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQWJvdXQvQWJvdXQuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0VkdWNhdGlvbi9FZHVjYXRpb25EYXRhLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0VkdWNhdGlvbi9FZHVjYXRpb24uanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0V4cGVyaWVuY2UvRXhwZXJpZW5jZURhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRXhwZXJpZW5jZS9FeHBlcmllbmNlLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Qcm9qZWN0cy9Qcm9qZWN0c0RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvUHJvamVjdHMvUHJvamVjdHMuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxscy9Ta2lsbHNEYXRhLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxsc1Rvb2wvU2tpbGxzVG9vbERhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRhaW5lcnMvQ29sL0NvbC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU2tpbGxzVG9vbC9Ta2lsbHNUb29sLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Ta2lsbHNXb3JrZmxvdy9Ta2lsbHNXb3JrZmxvd0RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU2tpbGxzV29ya2Zsb3cvU2tpbGxzV29ya2Zsb3cuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NraWxscy9Ta2lsbHMuanN4Iiwid2VicGFjazovLy8uL3NyYy9BcHAuanN4Iiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwiY29uY2F0Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwiam9pbiIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwiX2kiLCJwdXNoIiwibWVtbyIsImlzT2xkSUUiLCJCb29sZWFuIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0IiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJyZW1vdmVDaGlsZCIsImluc2VydEJlZm9yZSIsImFwcGx5VG9UYWciLCJyZW1vdmVBdHRyaWJ1dGUiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInJvb3QiLCJzZWxmIiwiZ2xvYmFsIiwiX2dldFByb3RvdHlwZU9mIiwic2V0UHJvdG90eXBlT2YiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsImgiLCJzZXQiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY3JlYXRlQ29udGV4dCIsImRlZmF1bHRWYWx1ZSIsImNhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4IiwiX0NvbnN1bWVyJGNvbnRleHRUeXBlIiwiY29udGV4dFByb3AiLCJQcm92aWRlciIsIl9Db21wb25lbnQiLCJfdGhpcyIsImFwcGx5IiwiZW1pdHRlciIsInByb3BzIiwiX3Byb3RvIiwiZ2V0Q2hpbGRDb250ZXh0IiwiX3JlZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsIngiLCJ5IiwiY2hpbGRyZW4iLCJpc1JlcXVpcmVkIiwiQ29uc3VtZXIiLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsInN0YXRlIiwiZ2V0VmFsdWUiLCJvblVwZGF0ZSIsIm9ic2VydmVkQml0cyIsInNldFN0YXRlIiwiX3Byb3RvMiIsImNvbXBvbmVudERpZE1vdW50IiwiY29udGV4dCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiQXJyYXkiLCJpc0FycmF5IiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJzdWJzdHIiLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJyZXBsYWNlIiwiY2hhckNvZGVBdCIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsImZsYWdzIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsImoiLCJ0ZXN0IiwiYXR0YWNoS2V5cyIsInJlIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImdyb3VwcyIsIm1hdGNoIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwic3BsaXQiLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwiZyIsIkZ1bmN0aW9uIiwic3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsIiwib2JzZXJ2YWJsZSIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfZGVmaW5lUHJvcGVydGllcyIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX3R5cGVvZiIsImFzc2VydFRoaXNJbml0aWFsaXplZCIsInVybCIsImRlZmF1bHQiLCJoYXNoIiwibmVlZFF1b3RlcyIsImFhIiwidSIsImEiLCJiIiwiYmEiLCJmIiwiayIsIm9uRXJyb3IiLCJkYSIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsImluZGV4T2YiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwidiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsIkMiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiVmEiLCJ4bGlua0hyZWYiLCJXYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiWGEiLCJTYSIsImlzTmFOIiwiVGEiLCJSYSIsInNldEF0dHJpYnV0ZU5TIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsImN1cnJlbnQiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiWWEiLCJFIiwiZm9yIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJsYiIsIm1iIiwiaXRlcmF0b3IiLCJuYiIsInBiIiwiJCR0eXBlb2YiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsInFiIiwidGFnIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInRiIiwieWIiLCJjaGVja2VkIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJHYiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiSmIiLCJLYiIsIkxiIiwidGV4dENvbnRlbnQiLCJNYiIsIk5iIiwiT2IiLCJQYiIsIlFiIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsInBvcCIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwiaGFzIiwidmMiLCJGIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJzaGlmdCIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJhZGRFdmVudExpc3RlbmVyIiwiT2MiLCJqZCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwia2QiLCJsZCIsInRyaW0iLCJtZCIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwibmQiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJub2RlIiwibmV4dFNpYmxpbmciLCJ4ZCIsImNvbnRlbnRXaW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJ5ZCIsImNvbnRlbnRFZGl0YWJsZSIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJzZXRUaW1lb3V0IiwiSWQiLCJjbGVhclRpbWVvdXQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiTGQiLCJNYXRoIiwicmFuZG9tIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkciLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJlZSIsImV2ZW50UG9vbCIsImZlIiwiZGVzdHJ1Y3RvciIsImRlIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsImRldGFpbCIsInNlIiwidmUiLCJsb2NhbGUiLCJ3aGljaCIsInRlIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwidWUiLCJ3ZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJ2aWV3IiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJXZSIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlhlIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJZZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwib2YiLCJjaGFyQ29kZSIsInBmIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInFmIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInJmIiwic2YiLCJkYXRhVHJhbnNmZXIiLCJ0ZiIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ1ZiIsInZmIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ3ZiIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJ5ZiIsInpmIiwiSCIsIkkiLCJBZiIsIkoiLCJLIiwiQmYiLCJDZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkwiLCJEZiIsIkVmIiwiRmYiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJfY29udGV4dCIsIl9jdXJyZW50VmFsdWUiLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsInJlc3BvbmRlcnMiLCJ0ZyIsInVnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJiYXNlUXVldWUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInZnIiwid2ciLCJzdXNwZW5zZUNvbmZpZyIsInBheWxvYWQiLCJjYWxsYmFjayIsInhnIiwieWciLCJ6ZyIsInoiLCJjYSIsIkFnIiwiRCIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiQ29tcG9uZW50IiwicmVmcyIsIkZnIiwiSmciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiZW5xdWV1ZVNldFN0YXRlIiwiR2ciLCJIZyIsIklnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJMZyIsIk1nIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJOZyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsIk9nIiwiUGciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUWciLCJSZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJTZyIsIlRnIiwiZWxlbWVudFR5cGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsIkEiLCJxIiwiZG9uZSIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiZWgiLCJmaCIsImdoIiwiTSIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJOIiwiTyIsIlAiLCJtaCIsIlEiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInF1ZXVlIiwidWgiLCJ2aCIsIndoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJkZXN0cm95IiwiZGVwcyIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsInBlbmRpbmdQcm9wcyIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJSZWFjdEN1cnJlbnRPd25lciIsIlIiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJwaSIsInFpIiwiaWkiLCJyZXRyeVRpbWUiLCJqaSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJraSIsImxpIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiUyIsInRpIiwidWkiLCJ2aSIsIndpIiwiVCIsInhpIiwiVSIsInlpIiwiemkiLCJBaSIsInN0YWNrIiwiQmkiLCJXZWFrU2V0IiwiU2V0IiwiQ2kiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaSIsIlNpIiwiVGkiLCJkaXNwbGF5IiwiVWkiLCJWaSIsImFkZCIsInRoZW4iLCJXaSIsIlhpIiwiZWxlbWVudCIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlciLCJYIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ3IiwidWIiLCJQaiIsIlhjIiwiUWoiLCJTaiIsImZpcnN0U3VzcGVuZGVkVGltZSIsInJhbmdlQ291bnQiLCJ3YiIsImFjdGl2ZUVsZW1lbnREZXRhY2hlZCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaiIsIkIiLCJ3ZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsInZiIiwiVWoiLCJWaiIsIldqIiwiaGlkZGVuIiwiX2N0b3IiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwiamsiLCJrayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImtleVByZWZpeCIsImZ1bmMiLCJWIiwiZXNjYXBlIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJ0b0FycmF5Iiwib25seSIsIkZyYWdtZW50IiwiUHJvZmlsZXIiLCJQdXJlQ29tcG9uZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkxhenkiLCJQb3J0YWwiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJvcmlnaW5hbE1vZHVsZSIsIndlYnBhY2tQb2x5ZmlsbCIsIl9zZXRQcm90b3R5cGVPZiIsIlJlZmVyZW5jZUVycm9yIiwiYXBpIiwibG9jYWxzIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiYXJyIiwiUmVhY3RSZWR1eENvbnRleHQiLCJudWxsTGlzdGVuZXJzIiwibm90aWZ5IiwiY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uIiwiYmF0Y2giLCJmaXJzdCIsImNsZWFyIiwibGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJzdWJzY3JpYmUiLCJpc1N1YnNjcmliZWQiLCJwcmV2IiwiU3Vic2NyaXB0aW9uIiwic3RvcmUiLCJwYXJlbnRTdWIiLCJ1bnN1YnNjcmliZSIsImhhbmRsZUNoYW5nZVdyYXBwZXIiLCJhZGROZXN0ZWRTdWIiLCJ0cnlTdWJzY3JpYmUiLCJub3RpZnlOZXN0ZWRTdWJzIiwib25TdGF0ZUNoYW5nZSIsInRyeVVuc3Vic2NyaWJlIiwiY29udGV4dFZhbHVlIiwic3Vic2NyaXB0aW9uIiwicHJldmlvdXNTdGF0ZSIsImdldFN0YXRlIiwiQ29udGV4dCIsIl9leHRlbmRzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJ1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IiwiRU1QVFlfQVJSQVkiLCJOT19TVUJTQ1JJUFRJT05fQVJSQVkiLCJzdG9yZVN0YXRlVXBkYXRlc1JlZHVjZXIiLCJ1cGRhdGVDb3VudCIsInVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3RXaXRoQXJncyIsImVmZmVjdEZ1bmMiLCJlZmZlY3RBcmdzIiwiY2FwdHVyZVdyYXBwZXJQcm9wcyIsImxhc3RXcmFwcGVyUHJvcHMiLCJsYXN0Q2hpbGRQcm9wcyIsInJlbmRlcklzU2NoZWR1bGVkIiwid3JhcHBlclByb3BzIiwiYWN0dWFsQ2hpbGRQcm9wcyIsImNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUiLCJzdWJzY3JpYmVVcGRhdGVzIiwic2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzIiwiY2hpbGRQcm9wc1NlbGVjdG9yIiwiZm9yY2VDb21wb25lbnRVcGRhdGVEaXNwYXRjaCIsImRpZFVuc3Vic2NyaWJlIiwibGFzdFRocm93bkVycm9yIiwiY2hlY2tGb3JVcGRhdGVzIiwibmV3Q2hpbGRQcm9wcyIsImxhdGVzdFN0b3JlU3RhdGUiLCJpbml0U3RhdGVVcGRhdGVzIiwiY29ubmVjdEFkdmFuY2VkIiwic2VsZWN0b3JGYWN0b3J5IiwiX3JlZjIiLCJfcmVmMiRnZXREaXNwbGF5TmFtZSIsImdldERpc3BsYXlOYW1lIiwiX3JlZjIkbWV0aG9kTmFtZSIsIm1ldGhvZE5hbWUiLCJfcmVmMiRyZW5kZXJDb3VudFByb3AiLCJyZW5kZXJDb3VudFByb3AiLCJ1bmRlZmluZWQiLCJfcmVmMiRzaG91bGRIYW5kbGVTdGEiLCJfcmVmMiRzdG9yZUtleSIsInN0b3JlS2V5IiwiX3JlZjIkZm9yd2FyZFJlZiIsIndpdGhSZWYiLCJfcmVmMiRjb250ZXh0IiwiY29ubmVjdE9wdGlvbnMiLCJXcmFwcGVkQ29tcG9uZW50Iiwid3JhcHBlZENvbXBvbmVudE5hbWUiLCJzZWxlY3RvckZhY3RvcnlPcHRpb25zIiwicHVyZSIsInVzZVB1cmVPbmx5TWVtbyIsIkNvbm5lY3RGdW5jdGlvbiIsIl91c2VNZW1vIiwicmVhY3RSZWR1eEZvcndhcmRlZFJlZiIsInByb3BzQ29udGV4dCIsIkNvbnRleHRUb1VzZSIsImRpZFN0b3JlQ29tZUZyb21Qcm9wcyIsImNyZWF0ZUNoaWxkU2VsZWN0b3IiLCJfdXNlTWVtbzIiLCJvdmVycmlkZGVuQ29udGV4dFZhbHVlIiwiX3VzZVJlZHVjZXIiLCJwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0IiwicmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50IiwiQ29ubmVjdCIsImZvcndhcmRlZCIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsInJhbmRvbVN0cmluZyIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIlJFUExBQ0UiLCJQUk9CRV9VTktOT1dOX0FDVElPTiIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsInByZWxvYWRlZFN0YXRlIiwiZW5oYW5jZXIiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJyZXBsYWNlUmVkdWNlciIsIm5leHRSZWR1Y2VyIiwib3V0ZXJTdWJzY3JpYmUiLCJvYnNlcnZlciIsIm9ic2VydmVTdGF0ZSIsImdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlIiwiYWN0aW9uVHlwZSIsImJpbmRBY3Rpb25DcmVhdG9yIiwiYWN0aW9uQ3JlYXRvciIsIl9kZWZpbmVQcm9wZXJ0eSIsIm93bktleXMiLCJlbnVtZXJhYmxlT25seSIsInN5bSIsIl9vYmplY3RTcHJlYWQyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwiX2tleSIsImFyZyIsInJlZHVjZSIsImFwcGx5TWlkZGxld2FyZSIsIm1pZGRsZXdhcmVzIiwiX2Rpc3BhdGNoIiwibWlkZGxld2FyZUFQSSIsImNoYWluIiwibWlkZGxld2FyZSIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwid3JhcE1hcFRvUHJvcHNGdW5jIiwicHJveHkiLCJzdGF0ZU9yRGlzcGF0Y2giLCJvd25Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsImFjdGlvbkNyZWF0b3JzIiwiYm91bmRBY3Rpb25DcmVhdG9ycyIsImJpbmRBY3Rpb25DcmVhdG9ycyIsIm1hcFN0YXRlVG9Qcm9wcyIsImRlZmF1bHRNZXJnZVByb3BzIiwic3RhdGVQcm9wcyIsImRpc3BhdGNoUHJvcHMiLCJtZXJnZVByb3BzIiwibWVyZ2VkUHJvcHMiLCJhcmVNZXJnZWRQcm9wc0VxdWFsIiwiaGFzUnVuT25jZSIsIm5leHRNZXJnZWRQcm9wcyIsIndyYXBNZXJnZVByb3BzRnVuYyIsImltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSIsImFyZVN0YXRlc0VxdWFsIiwiYXJlT3duUHJvcHNFcXVhbCIsImFyZVN0YXRlUHJvcHNFcXVhbCIsImhhc1J1bkF0TGVhc3RPbmNlIiwiaGFuZGxlU3Vic2VxdWVudENhbGxzIiwibmV4dFN0YXRlIiwibmV4dE93blByb3BzIiwibmV4dFN0YXRlUHJvcHMiLCJzdGF0ZVByb3BzQ2hhbmdlZCIsInByb3BzQ2hhbmdlZCIsInN0YXRlQ2hhbmdlZCIsImZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJpbml0TWFwU3RhdGVUb1Byb3BzIiwiaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyIsImluaXRNZXJnZVByb3BzIiwiZmFjdG9yaWVzIiwic3RyaWN0RXF1YWwiLCJjcmVhdGVDb25uZWN0IiwiX3RlbXAiLCJfcmVmJGNvbm5lY3RIT0MiLCJjb25uZWN0SE9DIiwiX3JlZiRtYXBTdGF0ZVRvUHJvcHNGIiwibWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtYXBEaXNwYXRjaFRvUHJvIiwibWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtZXJnZVByb3BzRmFjdG9yIiwibWVyZ2VQcm9wc0ZhY3RvcmllcyIsIl9yZWYkc2VsZWN0b3JGYWN0b3J5IiwiX3JlZjMiLCJfcmVmMyRwdXJlIiwiX3JlZjMkYXJlU3RhdGVzRXF1YWwiLCJfcmVmMyRhcmVPd25Qcm9wc0VxdWEiLCJfcmVmMyRhcmVTdGF0ZVByb3BzRXEiLCJfcmVmMyRhcmVNZXJnZWRQcm9wc0UiLCJleHRyYU9wdGlvbnMiLCJuZXdCYXRjaCIsImNvbWJpbmVSZWR1Y2VycyIsInJlZHVjZXJzIiwicmVkdWNlcktleXMiLCJmaW5hbFJlZHVjZXJzIiwic2hhcGVBc3NlcnRpb25FcnJvciIsImZpbmFsUmVkdWNlcktleXMiLCJhc3NlcnRSZWR1Y2VyU2hhcGUiLCJoYXNDaGFuZ2VkIiwicHJldmlvdXNTdGF0ZUZvcktleSIsIm5leHRTdGF0ZUZvcktleSIsImVycm9yTWVzc2FnZSIsInRvcERyb3BEaXNwbGF5IiwiY3JlYXRlVGh1bmtNaWRkbGV3YXJlIiwiZXh0cmFBcmd1bWVudCIsInRodW5rIiwid2l0aEV4dHJhQXJndW1lbnQiLCJtaWR3YXJlcyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18iLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJzcGxpY2VPbmUiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsIm5vdGlmeUxpc3RlbmVycyIsImFyZ3MiLCJjYW5Vc2VET00iLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsImhhbmRsZVBvcFN0YXRlIiwiZXZlbnQiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsIm9rIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwiZ2V0QXR0cmlidXRlIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsIm1heCIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyaWVzIiwiZW50cnkiLCJuZXh0SW5kZXgiLCJuZXh0RW50cmllcyIsImNhbkdvIiwiaGlzdG9yeUNvbnRleHQiLCJjcmVhdGVOYW1lZENvbnRleHQkMSIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsInZhbHVlcyIsIlJvdXRlIiwiY29udGV4dCQxIiwiY29tcHV0ZWRNYXRjaCIsIl90aGlzJHByb3BzIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm5vb3AiLCJTd2l0Y2giLCJCcm93c2VyUm91dGVyIiwicmVzb2x2ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkxpbmtBbmNob3IiLCJmb3J3YXJkZWRSZWYiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwiX29uQ2xpY2siLCJyZXN0IiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiY2xhc3NOYW1lIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJoYW5kbGVUb3BEcm9wRGlzcGxheSIsImxpbmtzIiwidGl0bGUiLCJyb3ciLCJ0b3BMaW5rIiwiY29ubmVjdCIsIlRvcExpbmsiLCJtYWluIiwic2VjdGlvbiIsInNlY3Rpb25UaXRsZSIsImNvbnRhY3QiLCJhYm91dExpbmtzIiwic3JjIiwiYWJvdXQiLCJkZWdyZWUiLCJtYWpvciIsImR1cmF0aW9uIiwiZWR1Y2F0aW9uIiwiZHV0eSIsImV4cGVyaWVuY2UiLCJwcm9qZWN0cyIsInRvb2wiLCJ3b3JrZmxvdyIsIm1ha2VTdHlsZSIsImJhc2lzIiwiZmxleEJhc2lzIiwic2tpbGxzVG9vbCIsIkNvbCIsInNraWxsc1dvcmtmbG93Iiwic2tpbGxzIiwiQXBwIiwiTWFpbiIsIlJlYWN0RE9NIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFB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QUFjIiwiZmlsZSI6Im1haW4uYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA3Nik7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgYnRvYSkge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHBvbnlmaWxsIGZyb20gJy4vcG9ueWZpbGwuanMnO1xuXG52YXIgcm9vdDtcblxuaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gc2VsZjtcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IGdsb2JhbDtcbn0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IG1vZHVsZTtcbn0gZWxzZSB7XG4gIHJvb3QgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xufVxuXG52YXIgcmVzdWx0ID0gcG9ueWZpbGwocm9vdCk7XG5leHBvcnQgZGVmYXVsdCByZXN1bHQ7XG4iLCJmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2Y7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcbnZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDoge307XG5cbmZ1bmN0aW9uIGdldFVuaXF1ZUlkKCkge1xuICB2YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcbiAgcmV0dXJuIGNvbW1vbmpzR2xvYmFsW2tleV0gPSAoY29tbW9uanNHbG9iYWxba2V5XSB8fCAwKSArIDE7XG59XG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGdldFVuaXF1ZUlkKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH07XG5cbiAgICAgIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuXG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gX3RoaXMyO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG52YXIgaW5kZXggPSBSZWFjdC5jcmVhdGVDb250ZXh0IHx8IGNyZWF0ZVJlYWN0Q29udGV4dDtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iLCJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NyZWF0ZUNsYXNzOyIsInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mXCIpO1xuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzOyIsInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgYXNzZXJ0VGhpc0luaXRpYWxpemVkID0gcmVxdWlyZShcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCIpO1xuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuOyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgb3B0aW9ucyA9IHt9O1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZSwgbm8tcGFyYW0tcmVhc3NpZ25cblxuXG4gIHVybCA9IHVybCAmJiB1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsO1xuXG4gIGlmICh0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB1cmw7XG4gIH0gLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJyksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhc3NldHMvaW1nL01heC5qcGdcIjsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMVwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyx6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOlxuNjAxMTYsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQyhhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEcoKXt9Ry5wcm90b3R5cGU9Ri5wcm90b3R5cGU7ZnVuY3Rpb24gSChhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfXZhciBJPUgucHJvdG90eXBlPW5ldyBHO0kuY29uc3RydWN0b3I9SDtsKEksRi5wcm90b3R5cGUpO0kuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbT0wO208ZjttKyspaFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrVShkLGspO2crPVQoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1CJiZhW0JdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGs9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBhYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9YKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPU4oYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBYKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsZSxkKTtWKGEsYWEsYik7UyhiKX12YXIgWT17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBaKCl7dmFyIGE9WS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEMoMzIxKSk7cmV0dXJuIGF9XG52YXIgYmE9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6WSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtYKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGMpO1YoYSxXLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107WChhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKEMoMTQzKSk7cmV0dXJuIGF9fTtcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihDKDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUsuY2FsbChiLGgpJiYhTC5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBtPTA7bTxoO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxcbmtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmt9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjEzLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mOyIsImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZjsiLCJmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQ7IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Db250YWluZXIuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3R7LS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7LS1jb2xvci1kYXJrOiBibGFjazstLWNvbG9yLW1pbGQtZGFyazogZGltZ3JheTstLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7LS1jb2xvci1tZWRpdW06IGRhcmtncmF5Oy0tY29sb3ItYnJpZ2h0LW1lZGl1bTogc2lsdmVyOy0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5Oy0tY29sb3ItbGlnaHQ6IHdoaXRlOy0tY29sb3ItbWFpbjogbGlnaHRza3libHVlfS5jb250YWluZXJ7bWF4LXdpZHRoOjkwJTttYXJnaW46YXV0bztkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOnN0cmV0Y2h9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjg4JX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjg1JX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkycHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjgzJX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KXsuY29udGFpbmVye21heC13aWR0aDo4MCV9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0MDBweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6NzglfX1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3JjL2Jhc2Uuc2Nzc1wiLFwid2VicGFjazovL3NyYy9jb250YWluZXJzL0NvbnRhaW5lci9Db250YWluZXIuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxNQUNFLGdDQUFBLENBQ0EsbUJBQUEsQ0FDQSwwQkFBQSxDQUNBLHdCQUFBLENBQ0Esd0JBQUEsQ0FDQSw2QkFBQSxDQUNBLDZCQUFBLENBQ0Esb0JBQUEsQ0FDQSwwQkFBQSxDQ1BGLFdBQ0UsYUFBQSxDQUNBLFdBQUEsQ0FDQSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxtQkFBQSxDQUdGLHFDQUNFLFdBQ0UsYUFBQSxDQUFBLENBSUoscUNBQ0UsV0FDRSxhQUFBLENBQUEsQ0FJSixxQ0FDRSxXQUNFLGFBQUEsQ0FBQSxDQUlKLHNDQUNFLFdBQ0UsYUFBQSxDQUFBLENBSUosc0NBQ0UsV0FDRSxhQUFBLENBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XFxuICAtLWNvbG9yLWRhcms6IGJsYWNrO1xcbiAgLS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7XFxuICAtLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7XFxuICAtLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7XFxuICAtLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjtcXG4gIC0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5O1xcbiAgLS1jb2xvci1saWdodDogd2hpdGU7XFxuICAtLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZTtcXG59XFxuXFxuJGJyZWFrcG9pbnQteHM6IDBweDtcXG4kYnJlYWtwb2ludC1zbTogNTc2cHg7XFxuJGJyZWFrcG9pbnQtbWQ6IDc2OHB4O1xcbiRicmVha3BvaW50LWxnOiA5OTJweDtcXG4kYnJlYWtwb2ludC14bDogMTIwMHB4O1xcbiRicmVha3BvaW50LXh4bDogMTQwMHB4O1xcblxcbiRuYXYtbnVtYmVyOiA1O1xcbiRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXG5cXG4kcGVyc29uYWwtbG9nbzogXFxcIi4uLy4uL2Fzc2V0cy9pbWcvTWF4LmpwZ1xcXCI7XFxuXCIsXCJAaW1wb3J0IFxcXCIuLi8uLi9iYXNlXFxcIjtcXG5cXG4uY29udGFpbmVyIHtcXG4gIG1heC13aWR0aDogOTAlO1xcbiAgbWFyZ2luOiBhdXRvO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtc20pIHtcXG4gIC5jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDg4JTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbWQpIHtcXG4gIC5jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDg1JTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbGcpIHtcXG4gIC5jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDgzJTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQteGwpIHtcXG4gIC5jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDgwJTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQteHhsKSB7XFxuICAuY29udGFpbmVyIHtcXG4gICAgbWF4LXdpZHRoOiA3OCU7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1Jvdy5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucm93e3dpZHRoOjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LXdyYXA6d3JhcH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3JjL2NvbnRhaW5lcnMvUm93L1Jvdy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLEtBQ0UsVUFBQSxDQUNBLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLGNBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnJvdyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgZmxleC13cmFwOiB3cmFwO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Ub3BsaW5rLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290ey0tY29sb3ItdHJhbnNwYXJlbnQ6IHRyYW5zcGFyZW50Oy0tY29sb3ItZGFyazogYmxhY2s7LS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7LS1jb2xvci1kaW0tbWVkaXVtOiBncmF5Oy0tY29sb3ItbWVkaXVtOiBkYXJrZ3JheTstLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjstLWNvbG9yLW1pbGQtbGlnaHQ6IGxpZ2h0Z3JheTstLWNvbG9yLWxpZ2h0OiB3aGl0ZTstLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZX0udG9wLWxpbmt7ZGlzcGxheTpub25lO2ZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWdyb3c6MTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5O2FsaWduLWl0ZW1zOmNlbnRlcn0udG9wLWxpbmtfX2xpbmt7cG9zaXRpb246cmVsYXRpdmU7Y29sb3I6dmFyKC0tY29sb3ItbGlnaHQpfS50b3AtbGlua19fbGluazo6YWZ0ZXJ7Y29udGVudDpcXFwiXFxcIjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjBweDtib3R0b206LTAuMmVtO3dpZHRoOjEwMCU7aGVpZ2h0Oi4xZW07YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jb2xvci1saWdodCk7dHJhbnNmb3JtOnNjYWxlWCgwKTt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQ7dHJhbnNpdGlvbjouM3MgZWFzZX0udG9wLWxpbmtfX2xpbms6aG92ZXI6OmFmdGVye3RyYW5zZm9ybTpzY2FsZVgoMSk7dHJhbnNmb3JtLW9yaWdpbjpyaWdodH0udG9wLWxpbmtfX2xpbms6YWN0aXZlOjphZnRlcnt0cmFuc2Zvcm06c2NhbGVYKDEpO3RyYW5zZm9ybS1vcmlnaW46cmlnaHR9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpey50b3AtbGlua3tkaXNwbGF5OmZsZXh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCl7LnRvcC1saW5re2hlaWdodDo0MCU7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZ3JvdzowfX1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3JjL2Jhc2Uuc2Nzc1wiLFwid2VicGFjazovL3NyYy9jb21wb25lbnRzL1RvcExpbmsvVG9wbGluay5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLE1BQ0UsZ0NBQUEsQ0FDQSxtQkFBQSxDQUNBLDBCQUFBLENBQ0Esd0JBQUEsQ0FDQSx3QkFBQSxDQUNBLDZCQUFBLENBQ0EsNkJBQUEsQ0FDQSxvQkFBQSxDQUNBLDBCQUFBLENDUEYsVUFDRSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxXQUFBLENBQ0EsNEJBQUEsQ0FDQSxrQkFBQSxDQUVBLGdCQUNFLGlCQUFBLENBQ0Esd0JBQUEsQ0FFQSx1QkFDRSxVQUFBLENBQ0EsaUJBQUEsQ0FDQSxRQUFBLENBQ0EsYUFBQSxDQUNBLFVBQUEsQ0FDQSxXQUFBLENBQ0EsbUNBQUEsQ0FDQSxtQkFBQSxDQUNBLHFCQUFBLENBQ0EsbUJBQUEsQ0FHRiw2QkFDRSxtQkFBQSxDQUNBLHNCQUFBLENBR0YsOEJBQ0UsbUJBQUEsQ0FDQSxzQkFBQSxDQUtOLHFDQUNFLFVBQ0UsWUFBQSxDQUFBLENBSUosc0NBQ0UsVUFDRSxVQUFBLENBQ0EscUJBQUEsQ0FDQSxXQUFBLENBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XFxuICAtLWNvbG9yLWRhcms6IGJsYWNrO1xcbiAgLS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7XFxuICAtLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7XFxuICAtLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7XFxuICAtLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjtcXG4gIC0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5O1xcbiAgLS1jb2xvci1saWdodDogd2hpdGU7XFxuICAtLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZTtcXG59XFxuXFxuJGJyZWFrcG9pbnQteHM6IDBweDtcXG4kYnJlYWtwb2ludC1zbTogNTc2cHg7XFxuJGJyZWFrcG9pbnQtbWQ6IDc2OHB4O1xcbiRicmVha3BvaW50LWxnOiA5OTJweDtcXG4kYnJlYWtwb2ludC14bDogMTIwMHB4O1xcbiRicmVha3BvaW50LXh4bDogMTQwMHB4O1xcblxcbiRuYXYtbnVtYmVyOiA1O1xcbiRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXG5cXG4kcGVyc29uYWwtbG9nbzogXFxcIi4uLy4uL2Fzc2V0cy9pbWcvTWF4LmpwZ1xcXCI7XFxuXCIsXCJAaW1wb3J0IFxcXCIuLi8uLi9iYXNlXFxcIjtcXG5cXG4udG9wLWxpbmsge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICBmbGV4LWdyb3c6IDE7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAmX19saW5rIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItbGlnaHQpO1xcblxcbiAgICAmOjphZnRlciB7XFxuICAgICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgIGxlZnQ6IDBweDtcXG4gICAgICBib3R0b206IC0wLjJlbTtcXG4gICAgICB3aWR0aDogMTAwJTtcXG4gICAgICBoZWlnaHQ6IDAuMWVtO1xcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWxpZ2h0KTtcXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xcbiAgICAgIHRyYW5zaXRpb246ICRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlO1xcbiAgICB9XFxuXFxuICAgICY6aG92ZXI6OmFmdGVyIHtcXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodDtcXG4gICAgfVxcblxcbiAgICAmOmFjdGl2ZTo6YWZ0ZXIge1xcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xcbiAgICB9XFxuICB9XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LXNtKSB7XFxuICAudG9wLWxpbmsge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC14bCkge1xcbiAgLnRvcC1saW5rIHtcXG4gICAgaGVpZ2h0OiA0MCU7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGZsZXgtZ3JvdzogMDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vVG9wRHJvcC5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHstLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDstLWNvbG9yLWRhcms6IGJsYWNrOy0tY29sb3ItbWlsZC1kYXJrOiBkaW1ncmF5Oy0tY29sb3ItZGltLW1lZGl1bTogZ3JheTstLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7LS1jb2xvci1icmlnaHQtbWVkaXVtOiBzaWx2ZXI7LS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7LS1jb2xvci1saWdodDogd2hpdGU7LS1jb2xvci1tYWluOiBsaWdodHNreWJsdWV9LnRvcC1kcm9we3dpZHRoOjEwMCU7aGVpZ2h0OjBweDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO29wYWNpdHk6MDt0cmFuc2l0aW9uOi4zcyBlYXNlfS50b3AtZHJvcC0tYWN0aXZle2hlaWdodDoyLjVyZW07b3BhY2l0eToxfS50b3AtZHJvcF9faXRlbXtoZWlnaHQ6LjVyZW07ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS50b3AtZHJvcF9fbGlua3twb3NpdGlvbjpyZWxhdGl2ZTtjb2xvcjp2YXIoLS1jb2xvci1saWdodCl9LnRvcC1kcm9wX19saW5rOjphZnRlcntjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MHB4O2JvdHRvbTotMC4yZW07d2lkdGg6MTAwJTtoZWlnaHQ6LjFlbTtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNvbG9yLWxpZ2h0KTt0cmFuc2Zvcm06c2NhbGVYKDApO3RyYW5zZm9ybS1vcmlnaW46bGVmdDt0cmFuc2l0aW9uOi4zcyBlYXNlfS50b3AtZHJvcF9fbGluazpob3Zlcjo6YWZ0ZXJ7dHJhbnNmb3JtOnNjYWxlWCgxKTt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0fS50b3AtZHJvcF9fbGluazphY3RpdmU6OmFmdGVye3RyYW5zZm9ybTpzY2FsZVgoMSk7dHJhbnNmb3JtLW9yaWdpbjpyaWdodH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3JjL2Jhc2Uuc2Nzc1wiLFwid2VicGFjazovL3NyYy9jb21wb25lbnRzL1RvcERyb3AvVG9wRHJvcC5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLE1BQ0UsZ0NBQUEsQ0FDQSxtQkFBQSxDQUNBLDBCQUFBLENBQ0Esd0JBQUEsQ0FDQSx3QkFBQSxDQUNBLDZCQUFBLENBQ0EsNkJBQUEsQ0FDQSxvQkFBQSxDQUNBLDBCQUFBLENDUEYsVUFHRSxVQUFBLENBQ0EsVUFBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLFNBQUEsQ0FDQSxtQkFBQSxDQUVBLGtCQUNFLGFBQUEsQ0FDQSxTQUFBLENBR0YsZ0JBQ0UsWUFmWSxDQWdCWixZQUFBLENBQ0EsMEJBQUEsQ0FHRixnQkFDRSxpQkFBQSxDQUNBLHdCQUFBLENBRUEsdUJBQ0UsVUFBQSxDQUNBLGlCQUFBLENBQ0EsUUFBQSxDQUNBLGFBQUEsQ0FDQSxVQUFBLENBQ0EsV0FBQSxDQUNBLG1DQUFBLENBQ0EsbUJBQUEsQ0FDQSxxQkFBQSxDQUNBLG1CQUFBLENBR0YsNkJBQ0UsbUJBQUEsQ0FDQSxzQkFBQSxDQUdGLDhCQUNFLG1CQUFBLENBQ0Esc0JBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XFxuICAtLWNvbG9yLWRhcms6IGJsYWNrO1xcbiAgLS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7XFxuICAtLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7XFxuICAtLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7XFxuICAtLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjtcXG4gIC0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5O1xcbiAgLS1jb2xvci1saWdodDogd2hpdGU7XFxuICAtLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZTtcXG59XFxuXFxuJGJyZWFrcG9pbnQteHM6IDBweDtcXG4kYnJlYWtwb2ludC1zbTogNTc2cHg7XFxuJGJyZWFrcG9pbnQtbWQ6IDc2OHB4O1xcbiRicmVha3BvaW50LWxnOiA5OTJweDtcXG4kYnJlYWtwb2ludC14bDogMTIwMHB4O1xcbiRicmVha3BvaW50LXh4bDogMTQwMHB4O1xcblxcbiRuYXYtbnVtYmVyOiA1O1xcbiRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXG5cXG4kcGVyc29uYWwtbG9nbzogXFxcIi4uLy4uL2Fzc2V0cy9pbWcvTWF4LmpwZ1xcXCI7XFxuXCIsXCJAaW1wb3J0IFxcXCIuLi8uLi9iYXNlXFxcIjtcXG5cXG4udG9wLWRyb3Age1xcbiAgJGl0ZW0taGVpZ2h0OiAwLjVyZW07XFxuXFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBvcGFjaXR5OiAwO1xcbiAgdHJhbnNpdGlvbjogJG5hdi10cmFuc2l0aW9uLWR1cmF0aW9uIGVhc2U7XFxuXFxuICAmLS1hY3RpdmUge1xcbiAgICBoZWlnaHQ6ICRpdGVtLWhlaWdodCAqICRuYXYtbnVtYmVyO1xcbiAgICBvcGFjaXR5OiAxO1xcbiAgfVxcblxcbiAgJl9faXRlbSB7XFxuICAgIGhlaWdodDogJGl0ZW0taGVpZ2h0O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICB9XFxuXFxuICAmX19saW5rIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItbGlnaHQpO1xcblxcbiAgICAmOjphZnRlciB7XFxuICAgICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgIGxlZnQ6IDBweDtcXG4gICAgICBib3R0b206IC0wLjJlbTtcXG4gICAgICB3aWR0aDogMTAwJTtcXG4gICAgICBoZWlnaHQ6IDAuMWVtO1xcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWxpZ2h0KTtcXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xcbiAgICAgIHRyYW5zaXRpb246ICRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlO1xcbiAgICB9XFxuXFxuICAgICY6aG92ZXI6OmFmdGVyIHtcXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodDtcXG4gICAgfVxcblxcbiAgICAmOmFjdGl2ZTo6YWZ0ZXIge1xcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xcbiAgICB9XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1RvcE5hdi5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIGZyb20gXCIuLi8uLi9hc3NldHMvaW1nL01heC5qcGdcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHstLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDstLWNvbG9yLWRhcms6IGJsYWNrOy0tY29sb3ItbWlsZC1kYXJrOiBkaW1ncmF5Oy0tY29sb3ItZGltLW1lZGl1bTogZ3JheTstLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7LS1jb2xvci1icmlnaHQtbWVkaXVtOiBzaWx2ZXI7LS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7LS1jb2xvci1saWdodDogd2hpdGU7LS1jb2xvci1tYWluOiBsaWdodHNreWJsdWV9LnRvcC1uYXZ7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo5O3RvcDowcHg7bGVmdDowcHg7cmlnaHQ6MHB4O2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItbWlsZC1kYXJrKX0udG9wLW5hdl9fbWFpbntoZWlnaHQ6NjBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCB2YXIoLS1jb2xvci1taWxkLWxpZ2h0KX0udG9wLW5hdl9fY29udGVudHtoZWlnaHQ6NjBweDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcn0udG9wLW5hdl9faW1ne3dpZHRoOjQwcHg7aGVpZ2h0OjQwcHg7Ym9yZGVyOjJweCBzb2xpZCB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtib3JkZXItcmFkaXVzOjUwJTtiYWNrZ3JvdW5kLWltYWdlOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIik7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTpjb3Zlcn0udG9wLW5hdl9fYnV0dG9uLXNoYXBle3dpZHRoOjI1cHg7aGVpZ2h0OjJweDtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNvbG9yLW1pbGQtbGlnaHQpO3RyYW5zaXRpb246LjNzIGVhc2V9LnRvcC1uYXZfX2J1dHRvbnt3aWR0aDozMHB4O2hlaWdodDozMHB4O2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seTthbGlnbi1pdGVtczpjZW50ZXJ9LnRvcC1uYXZfX2J1dHRvbi0tYWN0aXZlIC50b3AtbmF2X19idXR0b24tc2hhcGU6bnRoLWNoaWxkKDEpe3RyYW5zZm9ybTp0cmFuc2xhdGVZKDhweCkgcm90YXRlKDQ1ZGVnKX0udG9wLW5hdl9fYnV0dG9uLS1hY3RpdmUgLnRvcC1uYXZfX2J1dHRvbi1zaGFwZTpudGgtY2hpbGQoMil7b3BhY2l0eTowfS50b3AtbmF2X19idXR0b24tLWFjdGl2ZSAudG9wLW5hdl9fYnV0dG9uLXNoYXBlOm50aC1jaGlsZCgzKXt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtOHB4KSByb3RhdGUoLTQ1ZGVnKX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NzZweCl7LnRvcC1uYXZfX2J1dHRvbnt2aXNpYmlsaXR5OmhpZGRlbjtjdXJzb3I6bm9uZX19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KXsudG9wLW5hdnt0b3A6MHB4O2JvdHRvbTowcHg7bGVmdDowcHg7d2lkdGg6MjAlfS50b3AtbmF2X19tYWlue2hlaWdodDoxMDB2aDtib3JkZXItYm90dG9tOm5vbmV9LnRvcC1uYXZfX2NvbnRlbnR7aGVpZ2h0OjEwMHZoO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS50b3AtbmF2X19pbWd7d2lkdGg6MS4zcmVtO2hlaWdodDoxLjNyZW07Ym9yZGVyOi4wOHJlbSBzb2xpZCB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKX19XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9iYXNlLnNjc3NcIixcIndlYnBhY2s6Ly9zcmMvY29tcG9uZW50cy9Ub3BOYXYvVG9wTmF2LnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsTUFDRSxnQ0FBQSxDQUNBLG1CQUFBLENBQ0EsMEJBQUEsQ0FDQSx3QkFBQSxDQUNBLHdCQUFBLENBQ0EsNkJBQUEsQ0FDQSw2QkFBQSxDQUNBLG9CQUFBLENBQ0EsMEJBQUEsQ0NQRixTQU1FLGNBQUEsQ0FDQSxTQUFBLENBQ0EsT0FBQSxDQUNBLFFBQUEsQ0FDQSxTQUFBLENBQ0EsdUNBQUEsQ0FFQSxlQUNFLFdBYlcsQ0FjWCwrQ0FBQSxDQUdGLGtCQUNFLFdBbEJXLENBbUJYLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLDZCQUFBLENBQ0Esa0JBQUEsQ0FHRixjQUNFLFVBekJTLENBMEJULFdBMUJTLENBMkJULHdDQUFBLENBQ0EsaUJBQUEsQ0FDQSx3REFBQSxDQUNBLDBCQUFBLENBQ0EsMkJBQUEsQ0FDQSxxQkFBQSxDQUdGLHVCQUNFLFVBQUEsQ0FDQSxVQW5Db0IsQ0FvQ3BCLHdDQUFBLENBQ0EsbUJBQUEsQ0FHRixpQkFDRSxVQTFDWSxDQTJDWixXQTNDWSxDQTRDWixZQUFBLENBQ0EscUJBQUEsQ0FDQSw0QkFBQSxDQUNBLGtCQUFBLENBR0UsNkRBQ0UsdUNBQUEsQ0FHRiw2REFDRSxTQUFBLENBR0YsNkRBQ0UseUNBQUEsQ0FNUixxQ0FDRSxpQkFDRSxpQkFBQSxDQUNBLFdBQUEsQ0FBQSxDQUlKLHNDQUNFLFNBSUUsT0FBQSxDQUNBLFVBQUEsQ0FDQSxRQUFBLENBQ0EsU0FBQSxDQUVBLGVBQ0UsWUFUVyxDQVVYLGtCQUFBLENBR0Ysa0JBQ0UsWUFkVyxDQWVYLHFCQUFBLENBQ0Esc0JBQUEsQ0FHRixjQUNFLFlBbkJTLENBb0JULGFBcEJTLENBcUJULDJDQUFBLENBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XFxuICAtLWNvbG9yLWRhcms6IGJsYWNrO1xcbiAgLS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7XFxuICAtLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7XFxuICAtLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7XFxuICAtLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjtcXG4gIC0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5O1xcbiAgLS1jb2xvci1saWdodDogd2hpdGU7XFxuICAtLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZTtcXG59XFxuXFxuJGJyZWFrcG9pbnQteHM6IDBweDtcXG4kYnJlYWtwb2ludC1zbTogNTc2cHg7XFxuJGJyZWFrcG9pbnQtbWQ6IDc2OHB4O1xcbiRicmVha3BvaW50LWxnOiA5OTJweDtcXG4kYnJlYWtwb2ludC14bDogMTIwMHB4O1xcbiRicmVha3BvaW50LXh4bDogMTQwMHB4O1xcblxcbiRuYXYtbnVtYmVyOiA1O1xcbiRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXG5cXG4kcGVyc29uYWwtbG9nbzogXFxcIi4uLy4uL2Fzc2V0cy9pbWcvTWF4LmpwZ1xcXCI7XFxuXCIsXCJAaW1wb3J0IFxcXCIuLi8uLi9iYXNlXFxcIjtcXG5cXG4udG9wLW5hdiB7XFxuICAkbmF2LWhlaWdodDogNjBweDtcXG4gICRpbWctc2l6ZTogNDBweDtcXG4gICRidXR0b24tc2l6ZTogMzBweDtcXG4gICRidXR0b24tc2hhcGUtaGVpZ2h0OiAycHg7XFxuXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB6LWluZGV4OiA5O1xcbiAgdG9wOiAwcHg7XFxuICBsZWZ0OiAwcHg7XFxuICByaWdodDogMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWlsZC1kYXJrKTtcXG5cXG4gICZfX21haW4ge1xcbiAgICBoZWlnaHQ6ICRuYXYtaGVpZ2h0O1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tY29sb3ItbWlsZC1saWdodCk7XFxuICB9XFxuXFxuICAmX19jb250ZW50IHtcXG4gICAgaGVpZ2h0OiAkbmF2LWhlaWdodDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgfVxcblxcbiAgJl9faW1nIHtcXG4gICAgd2lkdGg6ICRpbWctc2l6ZTtcXG4gICAgaGVpZ2h0OiAkaW1nLXNpemU7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWNvbG9yLWRpbS1tZWRpdW0pO1xcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkcGVyc29uYWwtbG9nbyk7XFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIH1cXG5cXG4gICZfX2J1dHRvbi1zaGFwZSB7XFxuICAgIHdpZHRoOiAyNXB4O1xcbiAgICBoZWlnaHQ6ICRidXR0b24tc2hhcGUtaGVpZ2h0O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1taWxkLWxpZ2h0KTtcXG4gICAgdHJhbnNpdGlvbjogJG5hdi10cmFuc2l0aW9uLWR1cmF0aW9uIGVhc2U7XFxuICB9XFxuXFxuICAmX19idXR0b24ge1xcbiAgICB3aWR0aDogJGJ1dHRvbi1zaXplO1xcbiAgICBoZWlnaHQ6ICRidXR0b24tc2l6ZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAgICYtLWFjdGl2ZSB7XFxuICAgICAgLnRvcC1uYXZfX2J1dHRvbi1zaGFwZTpudGgtY2hpbGQoMSkge1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCRidXR0b24tc2l6ZSAvIDQgKyAwLjUpIHJvdGF0ZSg0NWRlZyk7XFxuICAgICAgfVxcblxcbiAgICAgIC50b3AtbmF2X19idXR0b24tc2hhcGU6bnRoLWNoaWxkKDIpIHtcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxuICAgICAgfVxcblxcbiAgICAgIC50b3AtbmF2X19idXR0b24tc2hhcGU6bnRoLWNoaWxkKDMpIHtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtKCRidXR0b24tc2l6ZSAvIDQgKyAwLjUpKSByb3RhdGUoLTQ1ZGVnKTtcXG4gICAgICB9XFxuICAgIH1cXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtc20pIHtcXG4gIC50b3AtbmF2X19idXR0b24ge1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxuICAgIGN1cnNvcjogbm9uZTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQteGwpIHtcXG4gIC50b3AtbmF2IHtcXG4gICAgJG5hdi1oZWlnaHQ6IDEwMHZoO1xcbiAgICAkaW1nLXNpemU6IDEuM3JlbTtcXG5cXG4gICAgdG9wOiAwcHg7XFxuICAgIGJvdHRvbTogMHB4O1xcbiAgICBsZWZ0OiAwcHg7XFxuICAgIHdpZHRoOiAyMCU7XFxuXFxuICAgICZfX21haW4ge1xcbiAgICAgIGhlaWdodDogJG5hdi1oZWlnaHQ7XFxuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gICAgfVxcblxcbiAgICAmX19jb250ZW50IHtcXG4gICAgICBoZWlnaHQ6ICRuYXYtaGVpZ2h0O1xcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIH1cXG5cXG4gICAgJl9faW1nIHtcXG4gICAgICB3aWR0aDogJGltZy1zaXplO1xcbiAgICAgIGhlaWdodDogJGltZy1zaXplO1xcbiAgICAgIGJvcmRlcjogMC4wOHJlbSBzb2xpZCB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtcXG4gICAgfVxcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9OYXZCYW5uZXIuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm5hdi1iYW5uZXJ7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo1O3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jb2xvci1tZWRpdW0pO29wYWNpdHk6LjV9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL05hdkJhbm5lci9OYXZCYW5uZXIuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxZQUNFLGNBQUEsQ0FDQSxTQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FDQSxvQ0FBQSxDQUNBLFVBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm5hdi1iYW5uZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogNTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWVkaXVtKTtcXG4gIG9wYWNpdHk6IDAuNTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHstLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDstLWNvbG9yLWRhcms6IGJsYWNrOy0tY29sb3ItbWlsZC1kYXJrOiBkaW1ncmF5Oy0tY29sb3ItZGltLW1lZGl1bTogZ3JheTstLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7LS1jb2xvci1icmlnaHQtbWVkaXVtOiBzaWx2ZXI7LS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7LS1jb2xvci1saWdodDogd2hpdGU7LS1jb2xvci1tYWluOiBsaWdodHNreWJsdWV9Lm1haW57d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpey5tYWlue3dpZHRoOjgwJTttYXJnaW4tdG9wOjBweDttYXJnaW4tbGVmdDoyMCV9fVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvYmFzZS5zY3NzXCIsXCJ3ZWJwYWNrOi8vc3JjL2NvbnRhaW5lcnMvTWFpbi9tYWluLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsTUFDRSxnQ0FBQSxDQUNBLG1CQUFBLENBQ0EsMEJBQUEsQ0FDQSx3QkFBQSxDQUNBLHdCQUFBLENBQ0EsNkJBQUEsQ0FDQSw2QkFBQSxDQUNBLG9CQUFBLENBQ0EsMEJBQUEsQ0NQRixNQUNFLFVBQUEsQ0FDQSxXQUFBLENBR0Ysc0NBQ0UsTUFDRSxTQUFBLENBQ0EsY0FBQSxDQUNBLGVBQUEsQ0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAtLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcXG4gIC0tY29sb3ItZGFyazogYmxhY2s7XFxuICAtLWNvbG9yLW1pbGQtZGFyazogZGltZ3JheTtcXG4gIC0tY29sb3ItZGltLW1lZGl1bTogZ3JheTtcXG4gIC0tY29sb3ItbWVkaXVtOiBkYXJrZ3JheTtcXG4gIC0tY29sb3ItYnJpZ2h0LW1lZGl1bTogc2lsdmVyO1xcbiAgLS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7XFxuICAtLWNvbG9yLWxpZ2h0OiB3aGl0ZTtcXG4gIC0tY29sb3ItbWFpbjogbGlnaHRza3libHVlO1xcbn1cXG5cXG4kYnJlYWtwb2ludC14czogMHB4O1xcbiRicmVha3BvaW50LXNtOiA1NzZweDtcXG4kYnJlYWtwb2ludC1tZDogNzY4cHg7XFxuJGJyZWFrcG9pbnQtbGc6IDk5MnB4O1xcbiRicmVha3BvaW50LXhsOiAxMjAwcHg7XFxuJGJyZWFrcG9pbnQteHhsOiAxNDAwcHg7XFxuXFxuJG5hdi1udW1iZXI6IDU7XFxuJG5hdi10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xcblxcbiRwZXJzb25hbC1sb2dvOiBcXFwiLi4vLi4vYXNzZXRzL2ltZy9NYXguanBnXFxcIjtcXG5cIixcIkBpbXBvcnQgXFxcIi4uLy4uL2Jhc2VcXFwiO1xcblxcbi5tYWluIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC14bCkge1xcbiAgLm1haW4ge1xcbiAgICB3aWR0aDogODAlO1xcbiAgICBtYXJnaW4tdG9wOiAwcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAyMCU7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NlY3Rpb24uc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNlY3Rpb257bWluLWhlaWdodDoxMDB2aDtib3JkZXItYm90dG9tOjFweCBzb2xpZCB2YXIoLS1jb2xvci1icmlnaHQtbWVkaXVtKX0uc2VjdGlvbl9fY29udGFpbmVye21pbi1oZWlnaHQ6MTAwdmh9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb250YWluZXJzL1NlY3Rpb24vU2VjdGlvbi5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLFNBQ0UsZ0JBQUEsQ0FDQSxrREFBQSxDQUVBLG9CQUNFLGdCQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zZWN0aW9uIHtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJyaWdodC1tZWRpdW0pO1xcblxcbiAgJl9fY29udGFpbmVyIHtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NlY3Rpb25UaXRsZS5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuc2VjdGlvbi10aXRsZXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjtwYWRkaW5nLXRvcDoxcmVtO3BhZGRpbmctYm90dG9tOjFyZW19LnNlY3Rpb24tdGl0bGVfX3RpdGxle2ZvbnQtd2VpZ2h0OjkwMDttYXJnaW4tYm90dG9tOi41cmVtfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvY29tcG9uZW50cy9TZWN0aW9uVGl0bGUvU2VjdGlvblRpdGxlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsZUFDRSxVQUFBLENBQ0EsV0FBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLHNCQUFBLENBQ0EsZ0JBQUEsQ0FDQSxtQkFBQSxDQUVBLHNCQUNFLGVBQUEsQ0FDQSxtQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2VjdGlvbi10aXRsZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBwYWRkaW5nLXRvcDogMXJlbTtcXG4gIHBhZGRpbmctYm90dG9tOiAxcmVtO1xcblxcbiAgJl9fdGl0bGUge1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Fib3V0TGlua3Muc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmFib3V0LWxpbmtze3dpZHRoOjEuNXJlbTtoZWlnaHQ6LjVyZW07ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdzthbGlnbi1pdGVtczpjZW50ZXJ9LmFib3V0LWxpbmtzX19pdGVte3dpZHRoOi43NXJlbTtoZWlnaHQ6Ljc1cmVtfS5hYm91dC1saW5rc19fbGlua3t3aWR0aDppbmhlcml0O2hlaWdodDppbmhlcml0O2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uYWJvdXQtbGlua3NfX2ltZ3toZWlnaHQ6LjVyZW19XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL0Fib3V0TGlua3MvQWJvdXRMaW5rcy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLGFBSUUsWUFBQSxDQUNBLFlBQUEsQ0FDQSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxrQkFBQSxDQUVBLG1CQUNFLFlBVFcsQ0FVWCxhQVZXLENBYWIsbUJBQ0UsYUFBQSxDQUNBLGNBQUEsQ0FDQSxZQUFBLENBQ0Esc0JBQUEsQ0FDQSxrQkFBQSxDQUdGLGtCQUNFLFlBdkJTXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5hYm91dC1saW5rcyB7XFxuICAkaW1nLXNpemU6IDAuNXJlbTtcXG4gICRsaW5rLXdpZHRoOiAkaW1nLXNpemUgKiAxLjU7XFxuXFxuICB3aWR0aDogJGxpbmstd2lkdGggKiAyO1xcbiAgaGVpZ2h0OiAwLjVyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAmX19pdGVtIHtcXG4gICAgd2lkdGg6ICRsaW5rLXdpZHRoO1xcbiAgICBoZWlnaHQ6ICRsaW5rLXdpZHRoO1xcbiAgfVxcblxcbiAgJl9fbGluayB7XFxuICAgIHdpZHRoOiBpbmhlcml0O1xcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgfVxcblxcbiAgJl9faW1nIHtcXG4gICAgaGVpZ2h0OiAkaW1nLXNpemU7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Fib3V0LnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5hYm91dHt3aWR0aDoxMDAlO2hlaWdodDoxMDB2aDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpjZW50ZXI7bWFyZ2luOjAgYXV0b30uYWJvdXRfX25hbWV7Zm9udC13ZWlnaHQ6OTAwO21hcmdpbi1ib3R0b206LjA1cmVtfS5hYm91dF9fY29udGFjdHtjb2xvcjp2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTttYXJnaW4tYm90dG9tOi4ycmVtO3doaXRlLXNwYWNlOnByZX0uYWJvdXRfX2NvbnRlbnR7Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSk7bWFyZ2luLWJvdHRvbTouMnJlbX1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vc3JjL2NvbXBvbmVudHMvQWJvdXQvQWJvdXQuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxPQUdFLFVBQUEsQ0FDQSxZQUFBLENBQ0EsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSxhQUFBLENBRUEsYUFDRSxlQUFBLENBQ0Esb0JBQUEsQ0FHRixnQkFDRSw2QkFmYyxDQWdCZCxtQkFBQSxDQUNBLGVBQUEsQ0FHRixnQkFDRSw2QkFyQmMsQ0FzQmQsbUJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmFib3V0IHtcXG4gICRjb250ZW50LWNvbG9yOiB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtcXG5cXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBtYXJnaW46IDAgYXV0bztcXG5cXG4gICZfX25hbWUge1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBtYXJnaW4tYm90dG9tOiAwLjA1cmVtO1xcbiAgfVxcblxcbiAgJl9fY29udGFjdCB7XFxuICAgIGNvbG9yOiAkY29udGVudC1jb2xvcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4ycmVtO1xcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xcbiAgfVxcblxcbiAgJl9fY29udGVudCB7XFxuICAgIGNvbG9yOiAkY29udGVudC1jb2xvcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4ycmVtO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9FZHVjYXRpb24uc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmVkdWNhdGlvbntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7bWFyZ2luLWJvdHRvbTouM3JlbX0uZWR1Y2F0aW9uX190aXRsZXtmb250LXdlaWdodDo5MDA7bWFyZ2luLWJvdHRvbTouNWVtfS5lZHVjYXRpb25fX2RlZ3JlZXtmb250LXdlaWdodDo3MDA7Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSk7bWFyZ2luLWJvdHRvbToxZW19LmVkdWNhdGlvbl9fbWFqb3J7Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSk7bWFyZ2luLWJvdHRvbToxZW19LmVkdWNhdGlvbl9fZHVyYXRpb257Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSl9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL0VkdWNhdGlvbi9FZHVjYXRpb24uc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxXQUdFLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLHNCQUFBLENBQ0EsbUJBQUEsQ0FFQSxrQkFDRSxlQUFBLENBQ0Esa0JBQUEsQ0FHRixtQkFDRSxlQUFBLENBQ0EsNkJBZGMsQ0FlZCxpQkFBQSxDQUdGLGtCQUNFLDZCQW5CYyxDQW9CZCxpQkFBQSxDQUdGLHFCQUNFLDZCQXhCY1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZWR1Y2F0aW9uIHtcXG4gICRjb250ZW50LWNvbG9yOiB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICBtYXJnaW4tYm90dG9tOiAwLjNyZW07XFxuXFxuICAmX190aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xcbiAgfVxcblxcbiAgJl9fZGVncmVlIHtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gICAgY29sb3I6ICRjb250ZW50LWNvbG9yO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XFxuICB9XFxuXFxuICAmX19tYWpvciB7XFxuICAgIGNvbG9yOiAkY29udGVudC1jb2xvcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xcbiAgfVxcblxcbiAgJl9fZHVyYXRpb24ge1xcbiAgICBjb2xvcjogJGNvbnRlbnQtY29sb3I7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0V4cGVyaWVuY2Uuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmV4cGVyaWVuY2V7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O2ZvbnQtZmFtaWx5OnZhcigtLWZvbnQtZmFtaWx5LXNhbnMtc2VyaWYpO21hcmdpbi1ib3R0b206LjVyZW19LmV4cGVyaWVuY2VfX3RpdGxle2ZvbnQtd2VpZ2h0OjkwMDttYXJnaW4tYm90dG9tOi41ZW19LmV4cGVyaWVuY2VfX2R1dHl7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOnZhcigtLWNvbG9yLWRpbS1tZWRpdW0pO21hcmdpbi1ib3R0b206MWVtfS5leHBlcmllbmNlX19jb250ZW50e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6ZmxleC1zdGFydDtsaXN0LXN0eWxlOmNpcmNsZSBvdXRzaWRlIG5vbmU7cGFkZGluZy1sZWZ0Oi4ycmVtO21hcmdpbi1ib3R0b206LjFyZW19LmV4cGVyaWVuY2VfX2l0ZW17Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSk7bWFyZ2luLWJvdHRvbTouMXJlbX0uZXhwZXJpZW5jZV9fZHVyYXRpb257Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSl9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL0V4cGVyaWVuY2UvRXhwZXJpZW5jZS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLFlBR0UsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSx5Q0FBQSxDQUNBLG1CQUFBLENBRUEsbUJBQ0UsZUFBQSxDQUNBLGtCQUFBLENBR0Ysa0JBQ0UsZUFBQSxDQUNBLDZCQWZjLENBZ0JkLGlCQUFBLENBR0YscUJBQ0UsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSw4QkFBQSxDQUNBLGtCQUFBLENBQ0EsbUJBQUEsQ0FHRixrQkFDRSw2QkE3QmMsQ0E4QmQsbUJBQUEsQ0FHRixzQkFDRSw2QkFsQ2NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmV4cGVyaWVuY2Uge1xcbiAgJGNvbnRlbnQtY29sb3I6IHZhcigtLWNvbG9yLWRpbS1tZWRpdW0pO1xcblxcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zYW5zLXNlcmlmKTtcXG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcXG5cXG4gICZfX3RpdGxlIHtcXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XFxuICB9XFxuXFxuICAmX19kdXR5IHtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gICAgY29sb3I6ICRjb250ZW50LWNvbG9yO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XFxuICB9XFxuXFxuICAmX19jb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIGxpc3Qtc3R5bGU6IGNpcmNsZSBvdXRzaWRlIG5vbmU7XFxuICAgIHBhZGRpbmctbGVmdDogMC4ycmVtO1xcbiAgICBtYXJnaW4tYm90dG9tOiAwLjFyZW07XFxuICB9XFxuXFxuICAmX19pdGVtIHtcXG4gICAgY29sb3I6ICRjb250ZW50LWNvbG9yO1xcbiAgICBtYXJnaW4tYm90dG9tOiAwLjFyZW07XFxuICB9XFxuXFxuICAmX19kdXJhdGlvbiB7XFxuICAgIGNvbG9yOiAkY29udGVudC1jb2xvcjtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHJvamVjdHMuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnByb2plY3Rze2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6ZmxleC1zdGFydDtmb250LWZhbWlseTp2YXIoLS1mb250LWZhbWlseS1zYW5zLXNlcmlmKTttYXJnaW4tYm90dG9tOi41cmVtfS5wcm9qZWN0c19fdGl0bGV7Zm9udC13ZWlnaHQ6OTAwO21hcmdpbi1ib3R0b206LjVlbX0ucHJvamVjdHNfX2NvbnRlbnR7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O2xpc3Qtc3R5bGU6Y2lyY2xlIG91dHNpZGUgbm9uZTtwYWRkaW5nLWxlZnQ6LjJyZW07bWFyZ2luLWJvdHRvbTouMXJlbX0ucHJvamVjdHNfX2l0ZW17Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSk7bWFyZ2luLWJvdHRvbTouMXJlbX0ucHJvamVjdHNfX2R1cmF0aW9ue2NvbG9yOnZhcigtLWNvbG9yLWRpbS1tZWRpdW0pfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvY29tcG9uZW50cy9Qcm9qZWN0cy9Qcm9qZWN0cy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLFVBR0UsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSx5Q0FBQSxDQUNBLG1CQUFBLENBRUEsaUJBQ0UsZUFBQSxDQUNBLGtCQUFBLENBR0YsbUJBQ0UsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FDQSw4QkFBQSxDQUNBLGtCQUFBLENBQ0EsbUJBQUEsQ0FHRixnQkFDRSw2QkF2QmMsQ0F3QmQsbUJBQUEsQ0FHRixvQkFDRSw2QkE1QmNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnByb2plY3RzIHtcXG4gICRjb250ZW50LWNvbG9yOiB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtcXG5cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Fucy1zZXJpZik7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxuXFxuICAmX190aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xcbiAgfVxcblxcbiAgJl9fY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbiAgICBsaXN0LXN0eWxlOiBjaXJjbGUgb3V0c2lkZSBub25lO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDAuMnJlbTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4xcmVtO1xcbiAgfVxcblxcbiAgJl9faXRlbSB7XFxuICAgIGNvbG9yOiAkY29udGVudC1jb2xvcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4xcmVtO1xcbiAgfVxcblxcbiAgJl9fZHVyYXRpb24ge1xcbiAgICBjb2xvcjogJGNvbnRlbnQtY29sb3I7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NraWxscy5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuc2tpbGxze2ZvbnQtZmFtaWx5OnZhcigtLWZvbnQtZmFtaWx5LXNhbnMtc2VyaWYpO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6ZmxleC1zdGFydH0uc2tpbGxzX190b29se2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LnNraWxsc19fdG9vbC10aXRsZXtjb2xvcjp2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtmb250LXdlaWdodDo5MDA7bWFyZ2luLWJvdHRvbToxZW19LnNraWxsc19fd29ya2Zsb3d7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uc2tpbGxzX193b3JrZmxvdy10aXRsZXtjb2xvcjp2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtmb250LXdlaWdodDo5MDA7bWFyZ2luLWJvdHRvbToxZW19XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL1NraWxscy9Ta2lsbHMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxRQUdFLHlDQUFBLENBQ0EsWUFBQSxDQUNBLHFCQUFBLENBQ0Esc0JBQUEsQ0FFQSxjQUNFLFlBQUEsQ0FDQSxxQkFBQSxDQUdGLG9CQUNFLDZCQWJjLENBY2QsZUFBQSxDQUNBLGlCQUFBLENBR0Ysa0JBQ0UsWUFBQSxDQUNBLHFCQUFBLENBR0Ysd0JBQ0UsNkJBeEJjLENBeUJkLGVBQUEsQ0FDQSxpQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2tpbGxzIHtcXG4gICRjb250ZW50LWNvbG9yOiB2YXIoLS1jb2xvci1kaW0tbWVkaXVtKTtcXG5cXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zYW5zLXNlcmlmKTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuXFxuICAmX190b29sIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIH1cXG5cXG4gICZfX3Rvb2wtdGl0bGUge1xcbiAgICBjb2xvcjogJGNvbnRlbnQtY29sb3I7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcXG4gIH1cXG5cXG4gICZfX3dvcmtmbG93IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIH1cXG5cXG4gICZfX3dvcmtmbG93LXRpdGxlIHtcXG4gICAgY29sb3I6ICRjb250ZW50LWNvbG9yO1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NraWxsc1Rvb2wuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNraWxscy10b29se2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW4tYm90dG9tOi41cmVtfS5za2lsbHMtdG9vbF9faXRlbXt3aWR0aDouODg0cmVtO2hlaWdodDouNjhyZW07ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2FsaWduLXNlbGY6Y2VudGVyO2JveC1zaGFkb3c6LjAxcmVtIC4wMXJlbSAuMDFyZW0gcmdiYSgwLDAsMCwuNSk7bWFyZ2luLXJpZ2h0Oi4zcmVtO21hcmdpbi1ib3R0b206LjNyZW19LnNraWxscy10b29sX19pbWd7bWluLXdpZHRoOi40cmVtO21heC13aWR0aDouOHJlbTttaW4taGVpZ2h0Oi40cmVtO21heC1oZWlnaHQ6LjUycmVtfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvY29tcG9uZW50cy9Ta2lsbHNUb29sL1NraWxsc1Rvb2wuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxhQUlFLGtCQUFBLENBQ0EsbUJBQUEsQ0FFQSxtQkFDRSxhQUFBLENBQ0EsYUFQVSxDQVFWLFlBQUEsQ0FDQSxzQkFBQSxDQUNBLGtCQUFBLENBQ0EsaUJBQUEsQ0FDQSw4Q0FBQSxDQUNBLGtCQUFBLENBQ0EsbUJBQUEsQ0FHRixrQkFDRSxlQW5CUyxDQW9CVCxlQUFBLENBQ0EsZ0JBckJTLENBc0JULGlCQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5za2lsbHMtdG9vbCB7XFxuICAkaW1nLXNpemU6IDAuNHJlbTtcXG4gICRpdGVtLXNpemU6ICRpbWctc2l6ZSAqIDEuNztcXG5cXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxuXFxuICAmX19pdGVtIHtcXG4gICAgd2lkdGg6ICRpdGVtLXNpemUgKiAxLjM7XFxuICAgIGhlaWdodDogJGl0ZW0tc2l6ZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgYm94LXNoYWRvdzogMC4wMXJlbSAwLjAxcmVtIDAuMDFyZW0gcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDAuM3JlbTtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4zcmVtO1xcbiAgfVxcblxcbiAgJl9faW1nIHtcXG4gICAgbWluLXdpZHRoOiAkaW1nLXNpemU7XFxuICAgIG1heC13aWR0aDogJGltZy1zaXplICogMjtcXG4gICAgbWluLWhlaWdodDogJGltZy1zaXplO1xcbiAgICBtYXgtaGVpZ2h0OiAkaW1nLXNpemUgKiAxLjM7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1NraWxsc1dvcmtmbG93LnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5za2lsbHMtd29ya2Zsb3d7Zm9udC1mYW1pbHk6dmFyKC0tZm9udC1mYW1pbHktc2Fucy1zZXJpZik7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7bGlzdC1zdHlsZTpjaXJjbGUgb3V0c2lkZSBub25lO3BhZGRpbmctbGVmdDouMnJlbX0uc2tpbGxzLXdvcmtmbG93X19pdGVte21hcmdpbi1ib3R0b206LjFyZW19LnNraWxscy13b3JrZmxvd19fdGl0bGV7Y29sb3I6dmFyKC0tY29sb3ItZGltLW1lZGl1bSl9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9jb21wb25lbnRzL1NraWxsc1dvcmtmbG93L1NraWxsc1dvcmtmbG93LnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsaUJBR0UseUNBQUEsQ0FDQSxZQUFBLENBQ0EscUJBQUEsQ0FDQSw0QkFBQSxDQUNBLHNCQUFBLENBQ0EsOEJBQUEsQ0FDQSxrQkFBQSxDQUVBLHVCQUNFLG1CQUFBLENBR0Ysd0JBQ0UsNkJBZmNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnNraWxscy13b3JrZmxvdyB7XFxuICAkY29udGVudC1jb2xvcjogdmFyKC0tY29sb3ItZGltLW1lZGl1bSk7XFxuXFxuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Fucy1zZXJpZik7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICBsaXN0LXN0eWxlOiBjaXJjbGUgb3V0c2lkZSBub25lO1xcbiAgcGFkZGluZy1sZWZ0OiAwLjJyZW07XFxuXFxuICAmX19pdGVtIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC4xcmVtO1xcbiAgfVxcblxcbiAgJl9fdGl0bGUge1xcbiAgICBjb2xvcjogJGNvbnRlbnQtY29sb3I7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vcm1hbGl6ZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xcblxcbi8qIERvY3VtZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXFxuICovXFxuXFxuaHRtbCB7XFxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXFxufVxcblxcbi8qIFNlY3Rpb25zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuYm9keSB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi8qKlxcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxcbiAqL1xcblxcbm1haW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMmVtO1xcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcXG59XFxuXFxuLyogR3JvdXBpbmcgY29udGVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cXG4gKi9cXG5cXG5ociB7XFxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xcbiAgaGVpZ2h0OiAwOyAvKiAxICovXFxuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5wcmUge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcblxcbmEge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcblxcbi8qKlxcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXFxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5hYmJyW3RpdGxlXSB7XFxuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYixcXG5zdHJvbmcge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuY29kZSxcXG5rYmQsXFxuc2FtcCB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogODAlO1xcbn1cXG5cXG4vKipcXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cXG4gKiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc3ViLFxcbnN1cCB7XFxuICBmb250LXNpemU6IDc1JTtcXG4gIGxpbmUtaGVpZ2h0OiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG5cXG5zdWIge1xcbiAgYm90dG9tOiAtMC4yNWVtO1xcbn1cXG5cXG5zdXAge1xcbiAgdG9wOiAtMC41ZW07XFxufVxcblxcbi8qIEVtYmVkZGVkIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXFxuICovXFxuXFxuaW1nIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG59XFxuXFxuLyogRm9ybXNcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5idXR0b24sXFxuaW5wdXQsXFxub3B0Z3JvdXAsXFxuc2VsZWN0LFxcbnRleHRhcmVhIHtcXG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXFxuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuICBtYXJnaW46IDA7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXFxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cXG4gKi9cXG5cXG5idXR0b24sXFxuaW5wdXQgeyAvKiAxICovXFxuICBvdmVyZmxvdzogdmlzaWJsZTtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXFxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmJ1dHRvbixcXG5zZWxlY3QgeyAvKiAxICovXFxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5idXR0b24sXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXFxuICovXFxuXFxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06LW1vei1mb2N1c3Jpbmcge1xcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuZmllbGRzZXQge1xcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxubGVnZW5kIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXFxuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXFxuICBwYWRkaW5nOiAwOyAvKiAzICovXFxuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXFxuICovXFxuXFxucHJvZ3Jlc3Mge1xcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cXG4gKi9cXG5cXG50ZXh0YXJlYSB7XFxuICBvdmVyZmxvdzogYXV0bztcXG59XFxuXFxuLyoqXFxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXFxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxcbiAqL1xcblxcblt0eXBlPVxcXCJjaGVja2JveFxcXCJdLFxcblt0eXBlPVxcXCJyYWRpb1xcXCJdIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxcbiAqL1xcblxcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwic2VhcmNoXFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cXG4gKi9cXG5cXG5bdHlwZT1cXFwic2VhcmNoXFxcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cXG4gKi9cXG5cXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXFxuICBmb250OiBpbmhlcml0OyAvKiAyICovXFxufVxcblxcbi8qIEludGVyYWN0aXZlXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXFxuICovXFxuXFxuZGV0YWlscyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc3VtbWFyeSB7XFxuICBkaXNwbGF5OiBsaXN0LWl0ZW07XFxufVxcblxcbi8qIE1pc2NcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cXG4gKi9cXG5cXG50ZW1wbGF0ZSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cXG4gKi9cXG5cXG5baGlkZGVuXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSwyRUFBMkU7O0FBRTNFOytFQUMrRTs7QUFFL0U7OztFQUdFOztBQUVGO0VBQ0UsaUJBQWlCLEVBQUUsTUFBTTtFQUN6Qiw4QkFBOEIsRUFBRSxNQUFNO0FBQ3hDOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7RUFDRSx1QkFBdUIsRUFBRSxNQUFNO0VBQy9CLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLGlCQUFpQixFQUFFLE1BQU07QUFDM0I7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsaUNBQWlDLEVBQUUsTUFBTTtFQUN6QyxjQUFjLEVBQUUsTUFBTTtBQUN4Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxpQ0FBaUMsRUFBRSxNQUFNO0FBQzNDOztBQUVBOztFQUVFOztBQUVGOztFQUVFLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0U7O0FBRUY7OztFQUdFLGlDQUFpQyxFQUFFLE1BQU07RUFDekMsY0FBYyxFQUFFLE1BQU07QUFDeEI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7Ozs7O0VBS0Usb0JBQW9CLEVBQUUsTUFBTTtFQUM1QixlQUFlLEVBQUUsTUFBTTtFQUN2QixpQkFBaUIsRUFBRSxNQUFNO0VBQ3pCLFNBQVMsRUFBRSxNQUFNO0FBQ25COztBQUVBOzs7RUFHRTs7QUFFRjtRQUNRLE1BQU07RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7OztFQUdFOztBQUVGO1NBQ1MsTUFBTTtFQUNiLG9CQUFvQjtBQUN0Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLDBCQUEwQjtBQUM1Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7O0VBRUU7O0FBRUY7Ozs7RUFJRSw4QkFBOEI7QUFDaEM7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7Ozs7O0VBS0U7O0FBRUY7RUFDRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGVBQWUsRUFBRSxNQUFNO0VBQ3ZCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLG1CQUFtQixFQUFFLE1BQU07QUFDN0I7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLFVBQVUsRUFBRSxNQUFNO0FBQ3BCOztBQUVBOztFQUVFOztBQUVGOztFQUVFLFlBQVk7QUFDZDs7QUFFQTs7O0VBR0U7O0FBRUY7RUFDRSw2QkFBNkIsRUFBRSxNQUFNO0VBQ3JDLG9CQUFvQixFQUFFLE1BQU07QUFDOUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxhQUFhLEVBQUUsTUFBTTtBQUN2Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7RUFFRTs7QUFFRjtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cXG5cXG4vKiBEb2N1bWVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiAqL1xcblxcbmh0bWwge1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbn1cXG5cXG4vKiBTZWN0aW9uc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cXG4gKi9cXG5cXG5tYWluIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcblxcbi8qIEdyb3VwaW5nIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXFxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXFxuICovXFxuXFxuaHIge1xcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cXG4gIGhlaWdodDogMDsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxucHJlIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5hIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmIsXFxuc3Ryb25nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zbWFsbCB7XFxuICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLyoqXFxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXFxuICogYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG4gIGJvdHRvbTogLTAuMjVlbTtcXG59XFxuXFxuc3VwIHtcXG4gIHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKiBFbWJlZGRlZCBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcblxcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxufVxcblxcbi8qIEZvcm1zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcbiAgbWFyZ2luOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0IHsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b24sXFxuc2VsZWN0IHsgLyogMSAqL1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXSxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXSxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiAqL1xcblxcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmZpZWxkc2V0IHtcXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXFxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmxlZ2VuZCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMyAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxcbiAqL1xcblxcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXFxuICovXFxuXFxudGV4dGFyZWEge1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSxcXG5bdHlwZT1cXFwicmFkaW9cXFwiXSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBwYWRkaW5nOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXFxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXFxuICovXFxuXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKiBJbnRlcmFjdGl2ZVxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxcbiAqL1xcblxcbmRldGFpbHMge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1bW1hcnkge1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG5cXG4vKiBNaXNjXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXFxuICovXFxuXFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXFxuICovXFxuXFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiwqOjpiZWZvcmUsKjo6YWZ0ZXJ7Ym94LXNpemluZzpib3JkZXItYm94fWh0bWx7c2Nyb2xsLWJlaGF2aW9yOnNtb290aH1ib2R5e2hlaWdodDoxMDB2aDtvdmVyZmxvdzphdXRvfSNyb290e2hlaWdodDoxMDAlfWF7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6aW5oZXJpdDtjdXJzb3I6cG9pbnRlcn1idXR0b257YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtjb2xvcjppbmhlcml0O2JvcmRlci13aWR0aDowO3BhZGRpbmc6MDtjdXJzb3I6cG9pbnRlcn11bCxvbCxkZHttYXJnaW46MDtwYWRkaW5nOjA7bGlzdC1zdHlsZTpub25lfWxpe2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXJ9aDEsaDIsaDMsaDQsaDUsaDZ7bWFyZ2luOjA7Zm9udC1zaXplOmluaGVyaXQ7Zm9udC13ZWlnaHQ6aW5oZXJpdH1we21hcmdpbjowfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zcmMvcmVzZXQuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxxQkFHRSxxQkFBQSxDQUdGLEtBQ0Usc0JBQUEsQ0FHRixLQUNFLFlBQUEsQ0FDQSxhQUFBLENBR0YsTUFDRSxXQUFBLENBR0YsRUFDRSxvQkFBQSxDQUNBLGFBQUEsQ0FDQSxjQUFBLENBR0YsT0FDRSw0QkFBQSxDQUNBLGFBQUEsQ0FDQSxjQUFBLENBQ0EsU0FBQSxDQUNBLGNBQUEsQ0FHRixTQUdFLFFBQUEsQ0FDQSxTQUFBLENBQ0EsZUFBQSxDQUdGLEdBQ0UsWUFBQSxDQUNBLGtCQUFBLENBR0Ysa0JBTUUsUUFBQSxDQUNBLGlCQUFBLENBQ0EsbUJBQUEsQ0FHRixFQUNFLFFBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKixcXG4qOjpiZWZvcmUsXFxuKjo6YWZ0ZXIge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuaHRtbCB7XFxuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcXG59XFxuXFxuYm9keSB7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbiNyb290IHtcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXFxuYSB7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBib3JkZXItd2lkdGg6IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG51bCxcXG5vbCxcXG5kZCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxubGkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbmgxLFxcbmgyLFxcbmgzLFxcbmg0LFxcbmg1LFxcbmg2IHtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG5wIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdHlwb2dyYXBoeS5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHstLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDstLWNvbG9yLWRhcms6IGJsYWNrOy0tY29sb3ItbWlsZC1kYXJrOiBkaW1ncmF5Oy0tY29sb3ItZGltLW1lZGl1bTogZ3JheTstLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7LS1jb2xvci1icmlnaHQtbWVkaXVtOiBzaWx2ZXI7LS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7LS1jb2xvci1saWdodDogd2hpdGU7LS1jb2xvci1tYWluOiBsaWdodHNreWJsdWV9aHRtbHtmb250LXNpemU6MTAwcHh9Ym9keXtmb250LWZhbWlseTpcXFwiUm9ib3RvXFxcIixIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtsaW5lLWhlaWdodDoxLjN9aDF7Zm9udC1zaXplOi40NXJlbX1oMntmb250LXNpemU6LjM1cmVtfWgze2ZvbnQtc2l6ZTouMjFyZW19aDR7Zm9udC1zaXplOi4xOHJlbX1oNXtmb250LXNpemU6LjE2cmVtfWg2e2ZvbnQtc2l6ZTouMTRyZW19cCxzcGFue2ZvbnQtc2l6ZTouMTJyZW19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTc2cHgpe2h0bWx7Zm9udC1zaXplOjExMHB4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7aHRtbHtmb250LXNpemU6MTIwcHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KXtodG1se2ZvbnQtc2l6ZToxMzBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KXtodG1se2ZvbnQtc2l6ZToxNDBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQwMHB4KXtodG1se2ZvbnQtc2l6ZToxNTBweH19XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9iYXNlLnNjc3NcIixcIndlYnBhY2s6Ly9zcmMvdHlwb2dyYXBoeS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLE1BQ0UsZ0NBQUEsQ0FDQSxtQkFBQSxDQUNBLDBCQUFBLENBQ0Esd0JBQUEsQ0FDQSx3QkFBQSxDQUNBLDZCQUFBLENBQ0EsNkJBQUEsQ0FDQSxvQkFBQSxDQUNBLDBCQUFBLENDUEYsS0FDRSxlQUFBLENBR0YsS0FDRSwrQ0FBQSxDQUNBLGVBQUEsQ0FHRixHQUNFLGdCQUFBLENBR0YsR0FDRSxnQkFBQSxDQUdGLEdBQ0UsZ0JBQUEsQ0FHRixHQUNFLGdCQUFBLENBR0YsR0FDRSxnQkFBQSxDQUdGLEdBQ0UsZ0JBQUEsQ0FHRixPQUVFLGdCQUFBLENBR0YscUNBQ0UsS0FDRSxlQUFBLENBQUEsQ0FJSixxQ0FDRSxLQUNFLGVBQUEsQ0FBQSxDQUlKLHFDQUNFLEtBQ0UsZUFBQSxDQUFBLENBSUosc0NBQ0UsS0FDRSxlQUFBLENBQUEsQ0FJSixzQ0FDRSxLQUNFLGVBQUEsQ0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAtLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcXG4gIC0tY29sb3ItZGFyazogYmxhY2s7XFxuICAtLWNvbG9yLW1pbGQtZGFyazogZGltZ3JheTtcXG4gIC0tY29sb3ItZGltLW1lZGl1bTogZ3JheTtcXG4gIC0tY29sb3ItbWVkaXVtOiBkYXJrZ3JheTtcXG4gIC0tY29sb3ItYnJpZ2h0LW1lZGl1bTogc2lsdmVyO1xcbiAgLS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7XFxuICAtLWNvbG9yLWxpZ2h0OiB3aGl0ZTtcXG4gIC0tY29sb3ItbWFpbjogbGlnaHRza3libHVlO1xcbn1cXG5cXG4kYnJlYWtwb2ludC14czogMHB4O1xcbiRicmVha3BvaW50LXNtOiA1NzZweDtcXG4kYnJlYWtwb2ludC1tZDogNzY4cHg7XFxuJGJyZWFrcG9pbnQtbGc6IDk5MnB4O1xcbiRicmVha3BvaW50LXhsOiAxMjAwcHg7XFxuJGJyZWFrcG9pbnQteHhsOiAxNDAwcHg7XFxuXFxuJG5hdi1udW1iZXI6IDU7XFxuJG5hdi10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xcblxcbiRwZXJzb25hbC1sb2dvOiBcXFwiLi4vLi4vYXNzZXRzL2ltZy9NYXguanBnXFxcIjtcXG5cIixcIkBpbXBvcnQgXFxcIi4vYmFzZVxcXCI7XFxuXFxuaHRtbCB7XFxuICBmb250LXNpemU6IDEwMHB4O1xcbn1cXG5cXG5ib2R5IHtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiUm9ib3RvXFxcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcXG4gIGxpbmUtaGVpZ2h0OiAxLjM7XFxufVxcblxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMC40NXJlbTtcXG59XFxuXFxuaDIge1xcbiAgZm9udC1zaXplOiAwLjM1cmVtO1xcbn1cXG5cXG5oMyB7XFxuICBmb250LXNpemU6IDAuMjFyZW07XFxufVxcblxcbmg0IHtcXG4gIGZvbnQtc2l6ZTogMC4xOHJlbTtcXG59XFxuXFxuaDUge1xcbiAgZm9udC1zaXplOiAwLjE2cmVtO1xcbn1cXG5cXG5oNiB7XFxuICBmb250LXNpemU6IDAuMTRyZW07XFxufVxcblxcbnAsXFxuc3BhbiB7XFxuICBmb250LXNpemU6IDAuMTJyZW07XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LXNtKSB7XFxuICBodG1sIHtcXG4gICAgZm9udC1zaXplOiAxMTBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbWQpIHtcXG4gIGh0bWwge1xcbiAgICBmb250LXNpemU6IDEyMHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1sZykge1xcbiAgaHRtbCB7XFxuICAgIGZvbnQtc2l6ZTogMTMwcHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LXhsKSB7XFxuICBodG1sIHtcXG4gICAgZm9udC1zaXplOiAxNDBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQteHhsKSB7XFxuICBodG1sIHtcXG4gICAgZm9udC1zaXplOiAxNTBweDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmFzZS5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdHstLWNvbG9yLXRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDstLWNvbG9yLWRhcms6IGJsYWNrOy0tY29sb3ItbWlsZC1kYXJrOiBkaW1ncmF5Oy0tY29sb3ItZGltLW1lZGl1bTogZ3JheTstLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7LS1jb2xvci1icmlnaHQtbWVkaXVtOiBzaWx2ZXI7LS1jb2xvci1taWxkLWxpZ2h0OiBsaWdodGdyYXk7LS1jb2xvci1saWdodDogd2hpdGU7LS1jb2xvci1tYWluOiBsaWdodHNreWJsdWV9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3NyYy9iYXNlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsTUFDRSxnQ0FBQSxDQUNBLG1CQUFBLENBQ0EsMEJBQUEsQ0FDQSx3QkFBQSxDQUNBLHdCQUFBLENBQ0EsNkJBQUEsQ0FDQSw2QkFBQSxDQUNBLG9CQUFBLENBQ0EsMEJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgLS1jb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XFxuICAtLWNvbG9yLWRhcms6IGJsYWNrO1xcbiAgLS1jb2xvci1taWxkLWRhcms6IGRpbWdyYXk7XFxuICAtLWNvbG9yLWRpbS1tZWRpdW06IGdyYXk7XFxuICAtLWNvbG9yLW1lZGl1bTogZGFya2dyYXk7XFxuICAtLWNvbG9yLWJyaWdodC1tZWRpdW06IHNpbHZlcjtcXG4gIC0tY29sb3ItbWlsZC1saWdodDogbGlnaHRncmF5O1xcbiAgLS1jb2xvci1saWdodDogd2hpdGU7XFxuICAtLWNvbG9yLW1haW46IGxpZ2h0c2t5Ymx1ZTtcXG59XFxuXFxuJGJyZWFrcG9pbnQteHM6IDBweDtcXG4kYnJlYWtwb2ludC1zbTogNTc2cHg7XFxuJGJyZWFrcG9pbnQtbWQ6IDc2OHB4O1xcbiRicmVha3BvaW50LWxnOiA5OTJweDtcXG4kYnJlYWtwb2ludC14bDogMTIwMHB4O1xcbiRicmVha3BvaW50LXh4bDogMTQwMHB4O1xcblxcbiRuYXYtbnVtYmVyOiA1O1xcbiRuYXYtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zcztcXG5cXG4kcGVyc29uYWwtbG9nbzogXFxcIi4uLy4uL2Fzc2V0cy9pbWcvTWF4LmpwZ1xcXCI7XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgdmFyIFJlYWN0UmVkdXhDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cblJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFJlYWN0UmVkdXhDb250ZXh0LmRpc3BsYXlOYW1lID0gJ1JlYWN0UmVkdXgnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBSZWFjdFJlZHV4Q29udGV4dDsiLCIvLyBEZWZhdWx0IHRvIGEgZHVtbXkgXCJiYXRjaFwiIGltcGxlbWVudGF0aW9uIHRoYXQganVzdCBydW5zIHRoZSBjYWxsYmFja1xuZnVuY3Rpb24gZGVmYXVsdE5vb3BCYXRjaChjYWxsYmFjaykge1xuICBjYWxsYmFjaygpO1xufVxuXG52YXIgYmF0Y2ggPSBkZWZhdWx0Tm9vcEJhdGNoOyAvLyBBbGxvdyBpbmplY3RpbmcgYW5vdGhlciBiYXRjaGluZyBmdW5jdGlvbiBsYXRlclxuXG5leHBvcnQgdmFyIHNldEJhdGNoID0gZnVuY3Rpb24gc2V0QmF0Y2gobmV3QmF0Y2gpIHtcbiAgcmV0dXJuIGJhdGNoID0gbmV3QmF0Y2g7XG59OyAvLyBTdXBwbHkgYSBnZXR0ZXIganVzdCB0byBza2lwIGRlYWxpbmcgd2l0aCBFU00gYmluZGluZ3NcblxuZXhwb3J0IHZhciBnZXRCYXRjaCA9IGZ1bmN0aW9uIGdldEJhdGNoKCkge1xuICByZXR1cm4gYmF0Y2g7XG59OyIsImltcG9ydCB7IGdldEJhdGNoIH0gZnJvbSAnLi9iYXRjaCc7IC8vIGVuY2Fwc3VsYXRlcyB0aGUgc3Vic2NyaXB0aW9uIGxvZ2ljIGZvciBjb25uZWN0aW5nIGEgY29tcG9uZW50IHRvIHRoZSByZWR1eCBzdG9yZSwgYXNcbi8vIHdlbGwgYXMgbmVzdGluZyBzdWJzY3JpcHRpb25zIG9mIGRlc2NlbmRhbnQgY29tcG9uZW50cywgc28gdGhhdCB3ZSBjYW4gZW5zdXJlIHRoZVxuLy8gYW5jZXN0b3IgY29tcG9uZW50cyByZS1yZW5kZXIgYmVmb3JlIGRlc2NlbmRhbnRzXG5cbnZhciBudWxsTGlzdGVuZXJzID0ge1xuICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHt9XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKSB7XG4gIHZhciBiYXRjaCA9IGdldEJhdGNoKCk7XG4gIHZhciBmaXJzdCA9IG51bGw7XG4gIHZhciBsYXN0ID0gbnVsbDtcbiAgcmV0dXJuIHtcbiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICBmaXJzdCA9IG51bGw7XG4gICAgICBsYXN0ID0gbnVsbDtcbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge1xuICAgICAgYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbGlzdGVuZXIgPSBmaXJzdDtcblxuICAgICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgICBsaXN0ZW5lci5jYWxsYmFjaygpO1xuICAgICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBbXTtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsaXN0ZW5lcnM7XG4gICAgfSxcbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjaykge1xuICAgICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBsYXN0ID0ge1xuICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgIG5leHQ6IG51bGwsXG4gICAgICAgIHByZXY6IGxhc3RcbiAgICAgIH07XG5cbiAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgIGxpc3RlbmVyLnByZXYubmV4dCA9IGxpc3RlbmVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmlyc3QgPSBsaXN0ZW5lcjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICBpZiAoIWlzU3Vic2NyaWJlZCB8fCBmaXJzdCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcblxuICAgICAgICBpZiAobGlzdGVuZXIubmV4dCkge1xuICAgICAgICAgIGxpc3RlbmVyLm5leHQucHJldiA9IGxpc3RlbmVyLnByZXY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGFzdCA9IGxpc3RlbmVyLnByZXY7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGlzdGVuZXIucHJldikge1xuICAgICAgICAgIGxpc3RlbmVyLnByZXYubmV4dCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZmlyc3QgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1cblxudmFyIFN1YnNjcmlwdGlvbiA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFN1YnNjcmlwdGlvbihzdG9yZSwgcGFyZW50U3ViKSB7XG4gICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMucGFyZW50U3ViID0gcGFyZW50U3ViO1xuICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIgPSB0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdWJzY3JpcHRpb24ucHJvdG90eXBlO1xuXG4gIF9wcm90by5hZGROZXN0ZWRTdWIgPSBmdW5jdGlvbiBhZGROZXN0ZWRTdWIobGlzdGVuZXIpIHtcbiAgICB0aGlzLnRyeVN1YnNjcmliZSgpO1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICB9O1xuXG4gIF9wcm90by5ub3RpZnlOZXN0ZWRTdWJzID0gZnVuY3Rpb24gbm90aWZ5TmVzdGVkU3VicygpIHtcbiAgICB0aGlzLmxpc3RlbmVycy5ub3RpZnkoKTtcbiAgfTtcblxuICBfcHJvdG8uaGFuZGxlQ2hhbmdlV3JhcHBlciA9IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZVdyYXBwZXIoKSB7XG4gICAgaWYgKHRoaXMub25TdGF0ZUNoYW5nZSkge1xuICAgICAgdGhpcy5vblN0YXRlQ2hhbmdlKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5pc1N1YnNjcmliZWQgPSBmdW5jdGlvbiBpc1N1YnNjcmliZWQoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy51bnN1YnNjcmliZSk7XG4gIH07XG5cbiAgX3Byb3RvLnRyeVN1YnNjcmliZSA9IGZ1bmN0aW9uIHRyeVN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSB0aGlzLnBhcmVudFN1YiA/IHRoaXMucGFyZW50U3ViLmFkZE5lc3RlZFN1Yih0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpIDogdGhpcy5zdG9yZS5zdWJzY3JpYmUodGhpcy5oYW5kbGVDaGFuZ2VXcmFwcGVyKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by50cnlVbnN1YnNjcmliZSA9IGZ1bmN0aW9uIHRyeVVuc3Vic2NyaWJlKCkge1xuICAgIGlmICh0aGlzLnVuc3Vic2NyaWJlKSB7XG4gICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgICB0aGlzLnVuc3Vic2NyaWJlID0gbnVsbDtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmNsZWFyKCk7XG4gICAgICB0aGlzLmxpc3RlbmVycyA9IG51bGxMaXN0ZW5lcnM7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBTdWJzY3JpcHRpb247XG59KCk7XG5cbmV4cG9ydCB7IFN1YnNjcmlwdGlvbiBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8sIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dCc7XG5pbXBvcnQgU3Vic2NyaXB0aW9uIGZyb20gJy4uL3V0aWxzL1N1YnNjcmlwdGlvbic7XG5cbmZ1bmN0aW9uIFByb3ZpZGVyKF9yZWYpIHtcbiAgdmFyIHN0b3JlID0gX3JlZi5zdG9yZSxcbiAgICAgIGNvbnRleHQgPSBfcmVmLmNvbnRleHQsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG4gIHZhciBjb250ZXh0VmFsdWUgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbihzdG9yZSk7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicztcbiAgICByZXR1cm4ge1xuICAgICAgc3RvcmU6IHN0b3JlLFxuICAgICAgc3Vic2NyaXB0aW9uOiBzdWJzY3JpcHRpb25cbiAgICB9O1xuICB9LCBbc3RvcmVdKTtcbiAgdmFyIHByZXZpb3VzU3RhdGUgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgfSwgW3N0b3JlXSk7XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb247XG4gICAgc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuXG4gICAgaWYgKHByZXZpb3VzU3RhdGUgIT09IHN0b3JlLmdldFN0YXRlKCkpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBudWxsO1xuICAgIH07XG4gIH0sIFtjb250ZXh0VmFsdWUsIHByZXZpb3VzU3RhdGVdKTtcbiAgdmFyIENvbnRleHQgPSBjb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0O1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICB9LCBjaGlsZHJlbik7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFByb3ZpZGVyLnByb3BUeXBlcyA9IHtcbiAgICBzdG9yZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGRpc3BhdGNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KSxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7IC8vIFJlYWN0IGN1cnJlbnRseSB0aHJvd3MgYSB3YXJuaW5nIHdoZW4gdXNpbmcgdXNlTGF5b3V0RWZmZWN0IG9uIHRoZSBzZXJ2ZXIuXG4vLyBUbyBnZXQgYXJvdW5kIGl0LCB3ZSBjYW4gY29uZGl0aW9uYWxseSB1c2VFZmZlY3Qgb24gdGhlIHNlcnZlciAobm8tb3ApIGFuZFxuLy8gdXNlTGF5b3V0RWZmZWN0IGluIHRoZSBicm93c2VyLiBXZSBuZWVkIHVzZUxheW91dEVmZmVjdCB0byBlbnN1cmUgdGhlIHN0b3JlXG4vLyBzdWJzY3JpcHRpb24gY2FsbGJhY2sgYWx3YXlzIGhhcyB0aGUgc2VsZWN0b3IgZnJvbSB0aGUgbGF0ZXN0IHJlbmRlciBjb21taXRcbi8vIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBoYXBwZW4gYmV0d2VlbiByZW5kZXIgYW5kIHRoZSBlZmZlY3QsXG4vLyB3aGljaCBtYXkgY2F1c2UgbWlzc2VkIHVwZGF0ZXM7IHdlIGFsc28gbXVzdCBlbnN1cmUgdGhlIHN0b3JlIHN1YnNjcmlwdGlvblxuLy8gaXMgY3JlYXRlZCBzeW5jaHJvbm91c2x5LCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IG9jY3VyIGJlZm9yZSB0aGVcbi8vIHN1YnNjcmlwdGlvbiBpcyBjcmVhdGVkIGFuZCBhbiBpbmNvbnNpc3RlbnQgc3RhdGUgbWF5IGJlIG9ic2VydmVkXG5cbmV4cG9ydCB2YXIgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcgPyB1c2VMYXlvdXRFZmZlY3QgOiB1c2VFZmZlY3Q7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZVJlZiwgdXNlUmVkdWNlciB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSwgaXNDb250ZXh0Q29uc3VtZXIgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgU3Vic2NyaXB0aW9uIGZyb20gJy4uL3V0aWxzL1N1YnNjcmlwdGlvbic7XG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4vdXRpbHMvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dCc7IC8vIERlZmluZSBzb21lIGNvbnN0YW50IGFycmF5cyBqdXN0IHRvIGF2b2lkIHJlLWNyZWF0aW5nIHRoZXNlXG5cbnZhciBFTVBUWV9BUlJBWSA9IFtdO1xudmFyIE5PX1NVQlNDUklQVElPTl9BUlJBWSA9IFtudWxsLCBudWxsXTtcblxudmFyIHN0cmluZ2lmeUNvbXBvbmVudCA9IGZ1bmN0aW9uIHN0cmluZ2lmeUNvbXBvbmVudChDb21wKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KENvbXApO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4gU3RyaW5nKENvbXApO1xuICB9XG59O1xuXG5mdW5jdGlvbiBzdG9yZVN0YXRlVXBkYXRlc1JlZHVjZXIoc3RhdGUsIGFjdGlvbikge1xuICB2YXIgdXBkYXRlQ291bnQgPSBzdGF0ZVsxXTtcbiAgcmV0dXJuIFthY3Rpb24ucGF5bG9hZCwgdXBkYXRlQ291bnQgKyAxXTtcbn1cblxuZnVuY3Rpb24gdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzKGVmZmVjdEZ1bmMsIGVmZmVjdEFyZ3MsIGRlcGVuZGVuY2llcykge1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZWZmZWN0RnVuYy5hcHBseSh2b2lkIDAsIGVmZmVjdEFyZ3MpO1xuICB9LCBkZXBlbmRlbmNpZXMpO1xufVxuXG5mdW5jdGlvbiBjYXB0dXJlV3JhcHBlclByb3BzKGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgd3JhcHBlclByb3BzLCBhY3R1YWxDaGlsZFByb3BzLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzKSB7XG4gIC8vIFdlIHdhbnQgdG8gY2FwdHVyZSB0aGUgd3JhcHBlciBwcm9wcyBhbmQgY2hpbGQgcHJvcHMgd2UgdXNlZCBmb3IgbGF0ZXIgY29tcGFyaXNvbnNcbiAgbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50ID0gd3JhcHBlclByb3BzO1xuICBsYXN0Q2hpbGRQcm9wcy5jdXJyZW50ID0gYWN0dWFsQ2hpbGRQcm9wcztcbiAgcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCA9IGZhbHNlOyAvLyBJZiB0aGUgcmVuZGVyIHdhcyBmcm9tIGEgc3RvcmUgdXBkYXRlLCBjbGVhciBvdXQgdGhhdCByZWZlcmVuY2UgYW5kIGNhc2NhZGUgdGhlIHN1YnNjcmliZXIgdXBkYXRlXG5cbiAgaWYgKGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCkge1xuICAgIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCA9IG51bGw7XG4gICAgbm90aWZ5TmVzdGVkU3VicygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN1YnNjcmliZVVwZGF0ZXMoc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLCBzdG9yZSwgc3Vic2NyaXB0aW9uLCBjaGlsZFByb3BzU2VsZWN0b3IsIGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3VicywgZm9yY2VDb21wb25lbnRVcGRhdGVEaXNwYXRjaCkge1xuICAvLyBJZiB3ZSdyZSBub3Qgc3Vic2NyaWJlZCB0byB0aGUgc3RvcmUsIG5vdGhpbmcgdG8gZG8gaGVyZVxuICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuOyAvLyBDYXB0dXJlIHZhbHVlcyBmb3IgY2hlY2tpbmcgaWYgYW5kIHdoZW4gdGhpcyBjb21wb25lbnQgdW5tb3VudHNcblxuICB2YXIgZGlkVW5zdWJzY3JpYmUgPSBmYWxzZTtcbiAgdmFyIGxhc3RUaHJvd25FcnJvciA9IG51bGw7IC8vIFdlJ2xsIHJ1biB0aGlzIGNhbGxiYWNrIGV2ZXJ5IHRpbWUgYSBzdG9yZSBzdWJzY3JpcHRpb24gdXBkYXRlIHByb3BhZ2F0ZXMgdG8gdGhpcyBjb21wb25lbnRcblxuICB2YXIgY2hlY2tGb3JVcGRhdGVzID0gZnVuY3Rpb24gY2hlY2tGb3JVcGRhdGVzKCkge1xuICAgIGlmIChkaWRVbnN1YnNjcmliZSkge1xuICAgICAgLy8gRG9uJ3QgcnVuIHN0YWxlIGxpc3RlbmVycy5cbiAgICAgIC8vIFJlZHV4IGRvZXNuJ3QgZ3VhcmFudGVlIHVuc3Vic2NyaXB0aW9ucyBoYXBwZW4gdW50aWwgbmV4dCBkaXNwYXRjaC5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbGF0ZXN0U3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgdmFyIG5ld0NoaWxkUHJvcHMsIGVycm9yO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIEFjdHVhbGx5IHJ1biB0aGUgc2VsZWN0b3Igd2l0aCB0aGUgbW9zdCByZWNlbnQgc3RvcmUgc3RhdGUgYW5kIHdyYXBwZXIgcHJvcHNcbiAgICAgIC8vIHRvIGRldGVybWluZSB3aGF0IHRoZSBjaGlsZCBwcm9wcyBzaG91bGQgYmVcbiAgICAgIG5ld0NoaWxkUHJvcHMgPSBjaGlsZFByb3BzU2VsZWN0b3IobGF0ZXN0U3RvcmVTdGF0ZSwgbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBlcnJvciA9IGU7XG4gICAgICBsYXN0VGhyb3duRXJyb3IgPSBlO1xuICAgIH1cblxuICAgIGlmICghZXJyb3IpIHtcbiAgICAgIGxhc3RUaHJvd25FcnJvciA9IG51bGw7XG4gICAgfSAvLyBJZiB0aGUgY2hpbGQgcHJvcHMgaGF2ZW4ndCBjaGFuZ2VkLCBub3RoaW5nIHRvIGRvIGhlcmUgLSBjYXNjYWRlIHRoZSBzdWJzY3JpcHRpb24gdXBkYXRlXG5cblxuICAgIGlmIChuZXdDaGlsZFByb3BzID09PSBsYXN0Q2hpbGRQcm9wcy5jdXJyZW50KSB7XG4gICAgICBpZiAoIXJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQpIHtcbiAgICAgICAgbm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTYXZlIHJlZmVyZW5jZXMgdG8gdGhlIG5ldyBjaGlsZCBwcm9wcy4gIE5vdGUgdGhhdCB3ZSB0cmFjayB0aGUgXCJjaGlsZCBwcm9wcyBmcm9tIHN0b3JlIHVwZGF0ZVwiXG4gICAgICAvLyBhcyBhIHJlZiBpbnN0ZWFkIG9mIGEgdXNlU3RhdGUvdXNlUmVkdWNlciBiZWNhdXNlIHdlIG5lZWQgYSB3YXkgdG8gZGV0ZXJtaW5lIGlmIHRoYXQgdmFsdWUgaGFzXG4gICAgICAvLyBiZWVuIHByb2Nlc3NlZC4gIElmIHRoaXMgd2VudCBpbnRvIHVzZVN0YXRlL3VzZVJlZHVjZXIsIHdlIGNvdWxkbid0IGNsZWFyIG91dCB0aGUgdmFsdWUgd2l0aG91dFxuICAgICAgLy8gZm9yY2luZyBhbm90aGVyIHJlLXJlbmRlciwgd2hpY2ggd2UgZG9uJ3Qgd2FudC5cbiAgICAgIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbmV3Q2hpbGRQcm9wcztcbiAgICAgIHJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQgPSB0cnVlOyAvLyBJZiB0aGUgY2hpbGQgcHJvcHMgX2RpZF8gY2hhbmdlIChvciB3ZSBjYXVnaHQgYW4gZXJyb3IpLCB0aGlzIHdyYXBwZXIgY29tcG9uZW50IG5lZWRzIHRvIHJlLXJlbmRlclxuXG4gICAgICBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogJ1NUT1JFX1VQREFURUQnLFxuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgZXJyb3I6IGVycm9yXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTsgLy8gQWN0dWFsbHkgc3Vic2NyaWJlIHRvIHRoZSBuZWFyZXN0IGNvbm5lY3RlZCBhbmNlc3RvciAob3Igc3RvcmUpXG5cblxuICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IGNoZWNrRm9yVXBkYXRlcztcbiAgc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpOyAvLyBQdWxsIGRhdGEgZnJvbSB0aGUgc3RvcmUgYWZ0ZXIgZmlyc3QgcmVuZGVyIGluIGNhc2UgdGhlIHN0b3JlIGhhc1xuICAvLyBjaGFuZ2VkIHNpbmNlIHdlIGJlZ2FuLlxuXG4gIGNoZWNrRm9yVXBkYXRlcygpO1xuXG4gIHZhciB1bnN1YnNjcmliZVdyYXBwZXIgPSBmdW5jdGlvbiB1bnN1YnNjcmliZVdyYXBwZXIoKSB7XG4gICAgZGlkVW5zdWJzY3JpYmUgPSB0cnVlO1xuICAgIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gbnVsbDtcblxuICAgIGlmIChsYXN0VGhyb3duRXJyb3IpIHtcbiAgICAgIC8vIEl0J3MgcG9zc2libGUgdGhhdCB3ZSBjYXVnaHQgYW4gZXJyb3IgZHVlIHRvIGEgYmFkIG1hcFN0YXRlIGZ1bmN0aW9uLCBidXQgdGhlXG4gICAgICAvLyBwYXJlbnQgcmUtcmVuZGVyZWQgd2l0aG91dCB0aGlzIGNvbXBvbmVudCBhbmQgd2UncmUgYWJvdXQgdG8gdW5tb3VudC5cbiAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGhhcHBlbiBhcyBsb25nIGFzIHdlIGRvIHRvcC1kb3duIHN1YnNjcmlwdGlvbnMgY29ycmVjdGx5LCBidXRcbiAgICAgIC8vIGlmIHdlIGV2ZXIgZG8gdGhvc2Ugd3JvbmcsIHRoaXMgdGhyb3cgd2lsbCBzdXJmYWNlIHRoZSBlcnJvciBpbiBvdXIgdGVzdHMuXG4gICAgICAvLyBJbiB0aGF0IGNhc2UsIHRocm93IHRoZSBlcnJvciBmcm9tIGhlcmUgc28gaXQgZG9lc24ndCBnZXQgbG9zdC5cbiAgICAgIHRocm93IGxhc3RUaHJvd25FcnJvcjtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVuc3Vic2NyaWJlV3JhcHBlcjtcbn1cblxudmFyIGluaXRTdGF0ZVVwZGF0ZXMgPSBmdW5jdGlvbiBpbml0U3RhdGVVcGRhdGVzKCkge1xuICByZXR1cm4gW251bGwsIDBdO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdEFkdmFuY2VkKFxuLypcclxuICBzZWxlY3RvckZhY3RvcnkgaXMgYSBmdW5jIHRoYXQgaXMgcmVzcG9uc2libGUgZm9yIHJldHVybmluZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gdXNlZCB0b1xyXG4gIGNvbXB1dGUgbmV3IHByb3BzIGZyb20gc3RhdGUsIHByb3BzLCBhbmQgZGlzcGF0Y2guIEZvciBleGFtcGxlOlxyXG4gICAgICBleHBvcnQgZGVmYXVsdCBjb25uZWN0QWR2YW5jZWQoKGRpc3BhdGNoLCBvcHRpb25zKSA9PiAoc3RhdGUsIHByb3BzKSA9PiAoe1xyXG4gICAgICB0aGluZzogc3RhdGUudGhpbmdzW3Byb3BzLnRoaW5nSWRdLFxyXG4gICAgICBzYXZlVGhpbmc6IGZpZWxkcyA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9ycy5zYXZlVGhpbmcocHJvcHMudGhpbmdJZCwgZmllbGRzKSksXHJcbiAgICB9KSkoWW91ckNvbXBvbmVudClcclxuICAgIEFjY2VzcyB0byBkaXNwYXRjaCBpcyBwcm92aWRlZCB0byB0aGUgZmFjdG9yeSBzbyBzZWxlY3RvckZhY3RvcmllcyBjYW4gYmluZCBhY3Rpb25DcmVhdG9yc1xyXG4gIG91dHNpZGUgb2YgdGhlaXIgc2VsZWN0b3IgYXMgYW4gb3B0aW1pemF0aW9uLiBPcHRpb25zIHBhc3NlZCB0byBjb25uZWN0QWR2YW5jZWQgYXJlIHBhc3NlZCB0b1xyXG4gIHRoZSBzZWxlY3RvckZhY3RvcnksIGFsb25nIHdpdGggZGlzcGxheU5hbWUgYW5kIFdyYXBwZWRDb21wb25lbnQsIGFzIHRoZSBzZWNvbmQgYXJndW1lbnQuXHJcbiAgICBOb3RlIHRoYXQgc2VsZWN0b3JGYWN0b3J5IGlzIHJlc3BvbnNpYmxlIGZvciBhbGwgY2FjaGluZy9tZW1vaXphdGlvbiBvZiBpbmJvdW5kIGFuZCBvdXRib3VuZFxyXG4gIHByb3BzLiBEbyBub3QgdXNlIGNvbm5lY3RBZHZhbmNlZCBkaXJlY3RseSB3aXRob3V0IG1lbW9pemluZyByZXN1bHRzIGJldHdlZW4gY2FsbHMgdG8geW91clxyXG4gIHNlbGVjdG9yLCBvdGhlcndpc2UgdGhlIENvbm5lY3QgY29tcG9uZW50IHdpbGwgcmUtcmVuZGVyIG9uIGV2ZXJ5IHN0YXRlIG9yIHByb3BzIGNoYW5nZS5cclxuKi9cbnNlbGVjdG9yRmFjdG9yeSwgLy8gb3B0aW9ucyBvYmplY3Q6XG5fcmVmKSB7XG4gIGlmIChfcmVmID09PSB2b2lkIDApIHtcbiAgICBfcmVmID0ge307XG4gIH1cblxuICB2YXIgX3JlZjIgPSBfcmVmLFxuICAgICAgX3JlZjIkZ2V0RGlzcGxheU5hbWUgPSBfcmVmMi5nZXREaXNwbGF5TmFtZSxcbiAgICAgIGdldERpc3BsYXlOYW1lID0gX3JlZjIkZ2V0RGlzcGxheU5hbWUgPT09IHZvaWQgMCA/IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIFwiQ29ubmVjdEFkdmFuY2VkKFwiICsgbmFtZSArIFwiKVwiO1xuICB9IDogX3JlZjIkZ2V0RGlzcGxheU5hbWUsXG4gICAgICBfcmVmMiRtZXRob2ROYW1lID0gX3JlZjIubWV0aG9kTmFtZSxcbiAgICAgIG1ldGhvZE5hbWUgPSBfcmVmMiRtZXRob2ROYW1lID09PSB2b2lkIDAgPyAnY29ubmVjdEFkdmFuY2VkJyA6IF9yZWYyJG1ldGhvZE5hbWUsXG4gICAgICBfcmVmMiRyZW5kZXJDb3VudFByb3AgPSBfcmVmMi5yZW5kZXJDb3VudFByb3AsXG4gICAgICByZW5kZXJDb3VudFByb3AgPSBfcmVmMiRyZW5kZXJDb3VudFByb3AgPT09IHZvaWQgMCA/IHVuZGVmaW5lZCA6IF9yZWYyJHJlbmRlckNvdW50UHJvcCxcbiAgICAgIF9yZWYyJHNob3VsZEhhbmRsZVN0YSA9IF9yZWYyLnNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyA9IF9yZWYyJHNob3VsZEhhbmRsZVN0YSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYyJHNob3VsZEhhbmRsZVN0YSxcbiAgICAgIF9yZWYyJHN0b3JlS2V5ID0gX3JlZjIuc3RvcmVLZXksXG4gICAgICBzdG9yZUtleSA9IF9yZWYyJHN0b3JlS2V5ID09PSB2b2lkIDAgPyAnc3RvcmUnIDogX3JlZjIkc3RvcmVLZXksXG4gICAgICBfcmVmMiR3aXRoUmVmID0gX3JlZjIud2l0aFJlZixcbiAgICAgIHdpdGhSZWYgPSBfcmVmMiR3aXRoUmVmID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJHdpdGhSZWYsXG4gICAgICBfcmVmMiRmb3J3YXJkUmVmID0gX3JlZjIuZm9yd2FyZFJlZixcbiAgICAgIGZvcndhcmRSZWYgPSBfcmVmMiRmb3J3YXJkUmVmID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJGZvcndhcmRSZWYsXG4gICAgICBfcmVmMiRjb250ZXh0ID0gX3JlZjIuY29udGV4dCxcbiAgICAgIGNvbnRleHQgPSBfcmVmMiRjb250ZXh0ID09PSB2b2lkIDAgPyBSZWFjdFJlZHV4Q29udGV4dCA6IF9yZWYyJGNvbnRleHQsXG4gICAgICBjb25uZWN0T3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJnZXREaXNwbGF5TmFtZVwiLCBcIm1ldGhvZE5hbWVcIiwgXCJyZW5kZXJDb3VudFByb3BcIiwgXCJzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXNcIiwgXCJzdG9yZUtleVwiLCBcIndpdGhSZWZcIiwgXCJmb3J3YXJkUmVmXCIsIFwiY29udGV4dFwiXSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAocmVuZGVyQ291bnRQcm9wICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcInJlbmRlckNvdW50UHJvcCBpcyByZW1vdmVkLiByZW5kZXIgY291bnRpbmcgaXMgYnVpbHQgaW50byB0aGUgbGF0ZXN0IFJlYWN0IERldiBUb29scyBwcm9maWxpbmcgZXh0ZW5zaW9uXCIpO1xuICAgIH1cblxuICAgIGlmICh3aXRoUmVmKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dpdGhSZWYgaXMgcmVtb3ZlZC4gVG8gYWNjZXNzIHRoZSB3cmFwcGVkIGluc3RhbmNlLCB1c2UgYSByZWYgb24gdGhlIGNvbm5lY3RlZCBjb21wb25lbnQnKTtcbiAgICB9XG5cbiAgICB2YXIgY3VzdG9tU3RvcmVXYXJuaW5nTWVzc2FnZSA9ICdUbyB1c2UgYSBjdXN0b20gUmVkdXggc3RvcmUgZm9yIHNwZWNpZmljIGNvbXBvbmVudHMsIGNyZWF0ZSBhIGN1c3RvbSBSZWFjdCBjb250ZXh0IHdpdGggJyArIFwiUmVhY3QuY3JlYXRlQ29udGV4dCgpLCBhbmQgcGFzcyB0aGUgY29udGV4dCBvYmplY3QgdG8gUmVhY3QgUmVkdXgncyBQcm92aWRlciBhbmQgc3BlY2lmaWMgY29tcG9uZW50c1wiICsgJyBsaWtlOiA8UHJvdmlkZXIgY29udGV4dD17TXlDb250ZXh0fT48Q29ubmVjdGVkQ29tcG9uZW50IGNvbnRleHQ9e015Q29udGV4dH0gLz48L1Byb3ZpZGVyPi4gJyArICdZb3UgbWF5IGFsc28gcGFzcyBhIHtjb250ZXh0IDogTXlDb250ZXh0fSBvcHRpb24gdG8gY29ubmVjdCc7XG5cbiAgICBpZiAoc3RvcmVLZXkgIT09ICdzdG9yZScpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignc3RvcmVLZXkgaGFzIGJlZW4gcmVtb3ZlZCBhbmQgZG9lcyBub3QgZG8gYW55dGhpbmcuICcgKyBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgQ29udGV4dCA9IGNvbnRleHQ7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwV2l0aENvbm5lY3QoV3JhcHBlZENvbXBvbmVudCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFpc1ZhbGlkRWxlbWVudFR5cGUoV3JhcHBlZENvbXBvbmVudCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBtdXN0IHBhc3MgYSBjb21wb25lbnQgdG8gdGhlIGZ1bmN0aW9uIHJldHVybmVkIGJ5IFwiICsgKG1ldGhvZE5hbWUgKyBcIi4gSW5zdGVhZCByZWNlaXZlZCBcIiArIHN0cmluZ2lmeUNvbXBvbmVudChXcmFwcGVkQ29tcG9uZW50KSkpO1xuICAgIH1cblxuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50TmFtZSA9IFdyYXBwZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgV3JhcHBlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnO1xuICAgIHZhciBkaXNwbGF5TmFtZSA9IGdldERpc3BsYXlOYW1lKHdyYXBwZWRDb21wb25lbnROYW1lKTtcblxuICAgIHZhciBzZWxlY3RvckZhY3RvcnlPcHRpb25zID0gX2V4dGVuZHMoe30sIGNvbm5lY3RPcHRpb25zLCB7XG4gICAgICBnZXREaXNwbGF5TmFtZTogZ2V0RGlzcGxheU5hbWUsXG4gICAgICBtZXRob2ROYW1lOiBtZXRob2ROYW1lLFxuICAgICAgcmVuZGVyQ291bnRQcm9wOiByZW5kZXJDb3VudFByb3AsXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXM6IHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHN0b3JlS2V5OiBzdG9yZUtleSxcbiAgICAgIGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSxcbiAgICAgIHdyYXBwZWRDb21wb25lbnROYW1lOiB3cmFwcGVkQ29tcG9uZW50TmFtZSxcbiAgICAgIFdyYXBwZWRDb21wb25lbnQ6IFdyYXBwZWRDb21wb25lbnRcbiAgICB9KTtcblxuICAgIHZhciBwdXJlID0gY29ubmVjdE9wdGlvbnMucHVyZTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUNoaWxkU2VsZWN0b3Ioc3RvcmUpIHtcbiAgICAgIHJldHVybiBzZWxlY3RvckZhY3Rvcnkoc3RvcmUuZGlzcGF0Y2gsIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMpO1xuICAgIH0gLy8gSWYgd2UgYXJlbid0IHJ1bm5pbmcgaW4gXCJwdXJlXCIgbW9kZSwgd2UgZG9uJ3Qgd2FudCB0byBtZW1vaXplIHZhbHVlcy5cbiAgICAvLyBUbyBhdm9pZCBjb25kaXRpb25hbGx5IGNhbGxpbmcgaG9va3MsIHdlIGZhbGwgYmFjayB0byBhIHRpbnkgd3JhcHBlclxuICAgIC8vIHRoYXQganVzdCBleGVjdXRlcyB0aGUgZ2l2ZW4gY2FsbGJhY2sgaW1tZWRpYXRlbHkuXG5cblxuICAgIHZhciB1c2VQdXJlT25seU1lbW8gPSBwdXJlID8gdXNlTWVtbyA6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIENvbm5lY3RGdW5jdGlvbihwcm9wcykge1xuICAgICAgdmFyIF91c2VNZW1vID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIERpc3Rpbmd1aXNoIGJldHdlZW4gYWN0dWFsIFwiZGF0YVwiIHByb3BzIHRoYXQgd2VyZSBwYXNzZWQgdG8gdGhlIHdyYXBwZXIgY29tcG9uZW50LFxuICAgICAgICAvLyBhbmQgdmFsdWVzIG5lZWRlZCB0byBjb250cm9sIGJlaGF2aW9yIChmb3J3YXJkZWQgcmVmcywgYWx0ZXJuYXRlIGNvbnRleHQgaW5zdGFuY2VzKS5cbiAgICAgICAgLy8gVG8gbWFpbnRhaW4gdGhlIHdyYXBwZXJQcm9wcyBvYmplY3QgcmVmZXJlbmNlLCBtZW1vaXplIHRoaXMgZGVzdHJ1Y3R1cmluZy5cbiAgICAgICAgdmFyIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWYgPSBwcm9wcy5yZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLFxuICAgICAgICAgICAgd3JhcHBlclByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcInJlYWN0UmVkdXhGb3J3YXJkZWRSZWZcIl0pO1xuXG4gICAgICAgIHJldHVybiBbcHJvcHMuY29udGV4dCwgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiwgd3JhcHBlclByb3BzXTtcbiAgICAgIH0sIFtwcm9wc10pLFxuICAgICAgICAgIHByb3BzQ29udGV4dCA9IF91c2VNZW1vWzBdLFxuICAgICAgICAgIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWYgPSBfdXNlTWVtb1sxXSxcbiAgICAgICAgICB3cmFwcGVyUHJvcHMgPSBfdXNlTWVtb1syXTtcblxuICAgICAgdmFyIENvbnRleHRUb1VzZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBVc2VycyBtYXkgb3B0aW9uYWxseSBwYXNzIGluIGEgY3VzdG9tIGNvbnRleHQgaW5zdGFuY2UgdG8gdXNlIGluc3RlYWQgb2Ygb3VyIFJlYWN0UmVkdXhDb250ZXh0LlxuICAgICAgICAvLyBNZW1vaXplIHRoZSBjaGVjayB0aGF0IGRldGVybWluZXMgd2hpY2ggY29udGV4dCBpbnN0YW5jZSB3ZSBzaG91bGQgdXNlLlxuICAgICAgICByZXR1cm4gcHJvcHNDb250ZXh0ICYmIHByb3BzQ29udGV4dC5Db25zdW1lciAmJiBpc0NvbnRleHRDb25zdW1lcihSZWFjdC5jcmVhdGVFbGVtZW50KHByb3BzQ29udGV4dC5Db25zdW1lciwgbnVsbCkpID8gcHJvcHNDb250ZXh0IDogQ29udGV4dDtcbiAgICAgIH0sIFtwcm9wc0NvbnRleHQsIENvbnRleHRdKTsgLy8gUmV0cmlldmUgdGhlIHN0b3JlIGFuZCBhbmNlc3RvciBzdWJzY3JpcHRpb24gdmlhIGNvbnRleHQsIGlmIGF2YWlsYWJsZVxuXG4gICAgICB2YXIgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChDb250ZXh0VG9Vc2UpOyAvLyBUaGUgc3RvcmUgX211c3RfIGV4aXN0IGFzIGVpdGhlciBhIHByb3Agb3IgaW4gY29udGV4dC5cbiAgICAgIC8vIFdlJ2xsIGNoZWNrIHRvIHNlZSBpZiBpdCBfbG9va3NfIGxpa2UgYSBSZWR1eCBzdG9yZSBmaXJzdC5cbiAgICAgIC8vIFRoaXMgYWxsb3dzIHVzIHRvIHBhc3MgdGhyb3VnaCBhIGBzdG9yZWAgcHJvcCB0aGF0IGlzIGp1c3QgYSBwbGFpbiB2YWx1ZS5cblxuICAgICAgdmFyIGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA9IEJvb2xlYW4ocHJvcHMuc3RvcmUpICYmIEJvb2xlYW4ocHJvcHMuc3RvcmUuZ2V0U3RhdGUpICYmIEJvb2xlYW4ocHJvcHMuc3RvcmUuZGlzcGF0Y2gpO1xuICAgICAgdmFyIGRpZFN0b3JlQ29tZUZyb21Db250ZXh0ID0gQm9vbGVhbihjb250ZXh0VmFsdWUpICYmIEJvb2xlYW4oY29udGV4dFZhbHVlLnN0b3JlKTtcblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWRpZFN0b3JlQ29tZUZyb21Qcm9wcyAmJiAhZGlkU3RvcmVDb21lRnJvbUNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgXFxcInN0b3JlXFxcIiBpbiB0aGUgY29udGV4dCBvZiBcIiArIChcIlxcXCJcIiArIGRpc3BsYXlOYW1lICsgXCJcXFwiLiBFaXRoZXIgd3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYSA8UHJvdmlkZXI+LCBcIikgKyBcIm9yIHBhc3MgYSBjdXN0b20gUmVhY3QgY29udGV4dCBwcm92aWRlciB0byA8UHJvdmlkZXI+IGFuZCB0aGUgY29ycmVzcG9uZGluZyBcIiArIChcIlJlYWN0IGNvbnRleHQgY29uc3VtZXIgdG8gXCIgKyBkaXNwbGF5TmFtZSArIFwiIGluIGNvbm5lY3Qgb3B0aW9ucy5cIikpO1xuICAgICAgfSAvLyBCYXNlZCBvbiB0aGUgcHJldmlvdXMgY2hlY2ssIG9uZSBvZiB0aGVzZSBtdXN0IGJlIHRydWVcblxuXG4gICAgICB2YXIgc3RvcmUgPSBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPyBwcm9wcy5zdG9yZSA6IGNvbnRleHRWYWx1ZS5zdG9yZTtcbiAgICAgIHZhciBjaGlsZFByb3BzU2VsZWN0b3IgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gVGhlIGNoaWxkIHByb3BzIHNlbGVjdG9yIG5lZWRzIHRoZSBzdG9yZSByZWZlcmVuY2UgYXMgYW4gaW5wdXQuXG4gICAgICAgIC8vIFJlLWNyZWF0ZSB0aGlzIHNlbGVjdG9yIHdoZW5ldmVyIHRoZSBzdG9yZSBjaGFuZ2VzLlxuICAgICAgICByZXR1cm4gY3JlYXRlQ2hpbGRTZWxlY3RvcihzdG9yZSk7XG4gICAgICB9LCBbc3RvcmVdKTtcblxuICAgICAgdmFyIF91c2VNZW1vMiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuIE5PX1NVQlNDUklQVElPTl9BUlJBWTsgLy8gVGhpcyBTdWJzY3JpcHRpb24ncyBzb3VyY2Ugc2hvdWxkIG1hdGNoIHdoZXJlIHN0b3JlIGNhbWUgZnJvbTogcHJvcHMgdnMuIGNvbnRleHQuIEEgY29tcG9uZW50XG4gICAgICAgIC8vIGNvbm5lY3RlZCB0byB0aGUgc3RvcmUgdmlhIHByb3BzIHNob3VsZG4ndCB1c2Ugc3Vic2NyaXB0aW9uIGZyb20gY29udGV4dCwgb3IgdmljZSB2ZXJzYS5cblxuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbihzdG9yZSwgZGlkU3RvcmVDb21lRnJvbVByb3BzID8gbnVsbCA6IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb24pOyAvLyBgbm90aWZ5TmVzdGVkU3Vic2AgaXMgZHVwbGljYXRlZCB0byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQgaW5cbiAgICAgICAgLy8gdGhlIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AsIHdoZXJlIGBzdWJzY3JpcHRpb25gIHdpbGwgdGhlbiBiZSBudWxsLiBUaGlzIGNhblxuICAgICAgICAvLyBwcm9iYWJseSBiZSBhdm9pZGVkIGlmIFN1YnNjcmlwdGlvbidzIGxpc3RlbmVycyBsb2dpYyBpcyBjaGFuZ2VkIHRvIG5vdCBjYWxsIGxpc3RlbmVyc1xuICAgICAgICAvLyB0aGF0IGhhdmUgYmVlbiB1bnN1YnNjcmliZWQgaW4gdGhlICBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLlxuXG4gICAgICAgIHZhciBub3RpZnlOZXN0ZWRTdWJzID0gc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZChzdWJzY3JpcHRpb24pO1xuICAgICAgICByZXR1cm4gW3N1YnNjcmlwdGlvbiwgbm90aWZ5TmVzdGVkU3Vic107XG4gICAgICB9LCBbc3RvcmUsIGRpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlXSksXG4gICAgICAgICAgc3Vic2NyaXB0aW9uID0gX3VzZU1lbW8yWzBdLFxuICAgICAgICAgIG5vdGlmeU5lc3RlZFN1YnMgPSBfdXNlTWVtbzJbMV07IC8vIERldGVybWluZSB3aGF0IHtzdG9yZSwgc3Vic2NyaXB0aW9ufSB2YWx1ZSBzaG91bGQgYmUgcHV0IGludG8gbmVzdGVkIGNvbnRleHQsIGlmIG5lY2Vzc2FyeSxcbiAgICAgIC8vIGFuZCBtZW1vaXplIHRoYXQgdmFsdWUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgY29udGV4dCB1cGRhdGVzLlxuXG5cbiAgICAgIHZhciBvdmVycmlkZGVuQ29udGV4dFZhbHVlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChkaWRTdG9yZUNvbWVGcm9tUHJvcHMpIHtcbiAgICAgICAgICAvLyBUaGlzIGNvbXBvbmVudCBpcyBkaXJlY3RseSBzdWJzY3JpYmVkIHRvIGEgc3RvcmUgZnJvbSBwcm9wcy5cbiAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IGRlc2NlbmRhbnRzIHJlYWRpbmcgZnJvbSB0aGlzIHN0b3JlIC0gcGFzcyBkb3duIHdoYXRldmVyXG4gICAgICAgICAgLy8gdGhlIGV4aXN0aW5nIGNvbnRleHQgdmFsdWUgaXMgZnJvbSB0aGUgbmVhcmVzdCBjb25uZWN0ZWQgYW5jZXN0b3IuXG4gICAgICAgICAgcmV0dXJuIGNvbnRleHRWYWx1ZTtcbiAgICAgICAgfSAvLyBPdGhlcndpc2UsIHB1dCB0aGlzIGNvbXBvbmVudCdzIHN1YnNjcmlwdGlvbiBpbnN0YW5jZSBpbnRvIGNvbnRleHQsIHNvIHRoYXRcbiAgICAgICAgLy8gY29ubmVjdGVkIGRlc2NlbmRhbnRzIHdvbid0IHVwZGF0ZSB1bnRpbCBhZnRlciB0aGlzIGNvbXBvbmVudCBpcyBkb25lXG5cblxuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIGNvbnRleHRWYWx1ZSwge1xuICAgICAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSwgW2RpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlLCBzdWJzY3JpcHRpb25dKTsgLy8gV2UgbmVlZCB0byBmb3JjZSB0aGlzIHdyYXBwZXIgY29tcG9uZW50IHRvIHJlLXJlbmRlciB3aGVuZXZlciBhIFJlZHV4IHN0b3JlIHVwZGF0ZVxuICAgICAgLy8gY2F1c2VzIGEgY2hhbmdlIHRvIHRoZSBjYWxjdWxhdGVkIGNoaWxkIGNvbXBvbmVudCBwcm9wcyAob3Igd2UgY2F1Z2h0IGFuIGVycm9yIGluIG1hcFN0YXRlKVxuXG4gICAgICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKHN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlciwgRU1QVFlfQVJSQVksIGluaXRTdGF0ZVVwZGF0ZXMpLFxuICAgICAgICAgIF91c2VSZWR1Y2VyJCA9IF91c2VSZWR1Y2VyWzBdLFxuICAgICAgICAgIHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQgPSBfdXNlUmVkdWNlciRbMF0sXG4gICAgICAgICAgZm9yY2VDb21wb25lbnRVcGRhdGVEaXNwYXRjaCA9IF91c2VSZWR1Y2VyWzFdOyAvLyBQcm9wYWdhdGUgYW55IG1hcFN0YXRlL21hcERpc3BhdGNoIGVycm9ycyB1cHdhcmRzXG5cblxuICAgICAgaWYgKHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQgJiYgcHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdC5lcnJvcikge1xuICAgICAgICB0aHJvdyBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0LmVycm9yO1xuICAgICAgfSAvLyBTZXQgdXAgcmVmcyB0byBjb29yZGluYXRlIHZhbHVlcyBiZXR3ZWVuIHRoZSBzdWJzY3JpcHRpb24gZWZmZWN0IGFuZCB0aGUgcmVuZGVyIGxvZ2ljXG5cblxuICAgICAgdmFyIGxhc3RDaGlsZFByb3BzID0gdXNlUmVmKCk7XG4gICAgICB2YXIgbGFzdFdyYXBwZXJQcm9wcyA9IHVzZVJlZih3cmFwcGVyUHJvcHMpO1xuICAgICAgdmFyIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUgPSB1c2VSZWYoKTtcbiAgICAgIHZhciByZW5kZXJJc1NjaGVkdWxlZCA9IHVzZVJlZihmYWxzZSk7XG4gICAgICB2YXIgYWN0dWFsQ2hpbGRQcm9wcyA9IHVzZVB1cmVPbmx5TWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFRyaWNreSBsb2dpYyBoZXJlOlxuICAgICAgICAvLyAtIFRoaXMgcmVuZGVyIG1heSBoYXZlIGJlZW4gdHJpZ2dlcmVkIGJ5IGEgUmVkdXggc3RvcmUgdXBkYXRlIHRoYXQgcHJvZHVjZWQgbmV3IGNoaWxkIHByb3BzXG4gICAgICAgIC8vIC0gSG93ZXZlciwgd2UgbWF5IGhhdmUgZ290dGVuIG5ldyB3cmFwcGVyIHByb3BzIGFmdGVyIHRoYXRcbiAgICAgICAgLy8gSWYgd2UgaGF2ZSBuZXcgY2hpbGQgcHJvcHMsIGFuZCB0aGUgc2FtZSB3cmFwcGVyIHByb3BzLCB3ZSBrbm93IHdlIHNob3VsZCB1c2UgdGhlIG5ldyBjaGlsZCBwcm9wcyBhcy1pcy5cbiAgICAgICAgLy8gQnV0LCBpZiB3ZSBoYXZlIG5ldyB3cmFwcGVyIHByb3BzLCB0aG9zZSBtaWdodCBjaGFuZ2UgdGhlIGNoaWxkIHByb3BzLCBzbyB3ZSBoYXZlIHRvIHJlY2FsY3VsYXRlIHRoaW5ncy5cbiAgICAgICAgLy8gU28sIHdlJ2xsIHVzZSB0aGUgY2hpbGQgcHJvcHMgZnJvbSBzdG9yZSB1cGRhdGUgb25seSBpZiB0aGUgd3JhcHBlciBwcm9wcyBhcmUgdGhlIHNhbWUgYXMgbGFzdCB0aW1lLlxuICAgICAgICBpZiAoY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ICYmIHdyYXBwZXJQcm9wcyA9PT0gbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50KSB7XG4gICAgICAgICAgcmV0dXJuIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudDtcbiAgICAgICAgfSAvLyBUT0RPIFdlJ3JlIHJlYWRpbmcgdGhlIHN0b3JlIGRpcmVjdGx5IGluIHJlbmRlcigpIGhlcmUuIEJhZCBpZGVhP1xuICAgICAgICAvLyBUaGlzIHdpbGwgbGlrZWx5IGNhdXNlIEJhZCBUaGluZ3MgKFRNKSB0byBoYXBwZW4gaW4gQ29uY3VycmVudCBNb2RlLlxuICAgICAgICAvLyBOb3RlIHRoYXQgd2UgZG8gdGhpcyBiZWNhdXNlIG9uIHJlbmRlcnMgX25vdF8gY2F1c2VkIGJ5IHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdGhlIGxhdGVzdCBzdG9yZSBzdGF0ZVxuICAgICAgICAvLyB0byBkZXRlcm1pbmUgd2hhdCB0aGUgY2hpbGQgcHJvcHMgc2hvdWxkIGJlLlxuXG5cbiAgICAgICAgcmV0dXJuIGNoaWxkUHJvcHNTZWxlY3RvcihzdG9yZS5nZXRTdGF0ZSgpLCB3cmFwcGVyUHJvcHMpO1xuICAgICAgfSwgW3N0b3JlLCBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0LCB3cmFwcGVyUHJvcHNdKTsgLy8gV2UgbmVlZCB0aGlzIHRvIGV4ZWN1dGUgc3luY2hyb25vdXNseSBldmVyeSB0aW1lIHdlIHJlLXJlbmRlci4gSG93ZXZlciwgUmVhY3Qgd2FybnNcbiAgICAgIC8vIGFib3V0IHVzZUxheW91dEVmZmVjdCBpbiBTU1IsIHNvIHdlIHRyeSB0byBkZXRlY3QgZW52aXJvbm1lbnQgYW5kIGZhbGwgYmFjayB0b1xuICAgICAgLy8ganVzdCB1c2VFZmZlY3QgaW5zdGVhZCB0byBhdm9pZCB0aGUgd2FybmluZywgc2luY2UgbmVpdGhlciB3aWxsIHJ1biBhbnl3YXkuXG5cbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3RXaXRoQXJncyhjYXB0dXJlV3JhcHBlclByb3BzLCBbbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCB3cmFwcGVyUHJvcHMsIGFjdHVhbENoaWxkUHJvcHMsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnNdKTsgLy8gT3VyIHJlLXN1YnNjcmliZSBsb2dpYyBvbmx5IHJ1bnMgd2hlbiB0aGUgc3RvcmUvc3Vic2NyaXB0aW9uIHNldHVwIGNoYW5nZXNcblxuICAgICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzKHN1YnNjcmliZVVwZGF0ZXMsIFtzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsIHN0b3JlLCBzdWJzY3JpcHRpb24sIGNoaWxkUHJvcHNTZWxlY3RvciwgbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzLCBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoXSwgW3N0b3JlLCBzdWJzY3JpcHRpb24sIGNoaWxkUHJvcHNTZWxlY3Rvcl0pOyAvLyBOb3cgdGhhdCBhbGwgdGhhdCdzIGRvbmUsIHdlIGNhbiBmaW5hbGx5IHRyeSB0byBhY3R1YWxseSByZW5kZXIgdGhlIGNoaWxkIGNvbXBvbmVudC5cbiAgICAgIC8vIFdlIG1lbW9pemUgdGhlIGVsZW1lbnRzIGZvciB0aGUgcmVuZGVyZWQgY2hpbGQgY29tcG9uZW50IGFzIGFuIG9wdGltaXphdGlvbi5cblxuICAgICAgdmFyIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgYWN0dWFsQ2hpbGRQcm9wcywge1xuICAgICAgICAgIHJlZjogcmVhY3RSZWR1eEZvcndhcmRlZFJlZlxuICAgICAgICB9KSk7XG4gICAgICB9LCBbcmVhY3RSZWR1eEZvcndhcmRlZFJlZiwgV3JhcHBlZENvbXBvbmVudCwgYWN0dWFsQ2hpbGRQcm9wc10pOyAvLyBJZiBSZWFjdCBzZWVzIHRoZSBleGFjdCBzYW1lIGVsZW1lbnQgcmVmZXJlbmNlIGFzIGxhc3QgdGltZSwgaXQgYmFpbHMgb3V0IG9mIHJlLXJlbmRlcmluZ1xuICAgICAgLy8gdGhhdCBjaGlsZCwgc2FtZSBhcyBpZiBpdCB3YXMgd3JhcHBlZCBpbiBSZWFjdC5tZW1vKCkgb3IgcmV0dXJuZWQgZmFsc2UgZnJvbSBzaG91bGRDb21wb25lbnRVcGRhdGUuXG5cbiAgICAgIHZhciByZW5kZXJlZENoaWxkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCBpcyBzdWJzY3JpYmVkIHRvIHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdG8gcGFzcyBpdHMgb3duXG4gICAgICAgICAgLy8gc3Vic2NyaXB0aW9uIGluc3RhbmNlIGRvd24gdG8gb3VyIGRlc2NlbmRhbnRzLiBUaGF0IG1lYW5zIHJlbmRlcmluZyB0aGUgc2FtZVxuICAgICAgICAgIC8vIENvbnRleHQgaW5zdGFuY2UsIGFuZCBwdXR0aW5nIGEgZGlmZmVyZW50IHZhbHVlIGludG8gdGhlIGNvbnRleHQuXG4gICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dFRvVXNlLlByb3ZpZGVyLCB7XG4gICAgICAgICAgICB2YWx1ZTogb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZVxuICAgICAgICAgIH0sIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgfSwgW0NvbnRleHRUb1VzZSwgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50LCBvdmVycmlkZGVuQ29udGV4dFZhbHVlXSk7XG4gICAgICByZXR1cm4gcmVuZGVyZWRDaGlsZDtcbiAgICB9IC8vIElmIHdlJ3JlIGluIFwicHVyZVwiIG1vZGUsIGVuc3VyZSBvdXIgd3JhcHBlciBjb21wb25lbnQgb25seSByZS1yZW5kZXJzIHdoZW4gaW5jb21pbmcgcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuXG5cbiAgICB2YXIgQ29ubmVjdCA9IHB1cmUgPyBSZWFjdC5tZW1vKENvbm5lY3RGdW5jdGlvbikgOiBDb25uZWN0RnVuY3Rpb247XG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgdmFyIGZvcndhcmRlZCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gZm9yd2FyZENvbm5lY3RSZWYocHJvcHMsIHJlZikge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb25uZWN0LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmOiByZWZcbiAgICAgICAgfSkpO1xuICAgICAgfSk7XG4gICAgICBmb3J3YXJkZWQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgIGZvcndhcmRlZC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICAgIHJldHVybiBob2lzdFN0YXRpY3MoZm9yd2FyZGVkLCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaG9pc3RTdGF0aWNzKENvbm5lY3QsIFdyYXBwZWRDb21wb25lbnQpO1xuICB9O1xufSIsImZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59IiwiaW1wb3J0ICQkb2JzZXJ2YWJsZSBmcm9tICdzeW1ib2wtb2JzZXJ2YWJsZSc7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG52YXIgcmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpLnNwbGl0KCcnKS5qb2luKCcuJyk7XG59O1xuXG52YXIgQWN0aW9uVHlwZXMgPSB7XG4gIElOSVQ6IFwiQEByZWR1eC9JTklUXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUkVQTEFDRTogXCJAQHJlZHV4L1JFUExBQ0VcIiArIHJhbmRvbVN0cmluZygpLFxuICBQUk9CRV9VTktOT1dOX0FDVElPTjogZnVuY3Rpb24gUFJPQkVfVU5LTk9XTl9BQ1RJT04oKSB7XG4gICAgcmV0dXJuIFwiQEByZWR1eC9QUk9CRV9VTktOT1dOX0FDVElPTlwiICsgcmFuZG9tU3RyaW5nKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYXJndW1lbnQgYXBwZWFycyB0byBiZSBhIHBsYWluIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICB2YXIgcHJvdG8gPSBvYmo7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBSZWR1eCBzdG9yZSB0aGF0IGhvbGRzIHRoZSBzdGF0ZSB0cmVlLlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZVN0b3JlKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlLCBlbmhhbmNlcikge1xuICB2YXIgX3JlZjI7XG5cbiAgaWYgKHR5cGVvZiBwcmVsb2FkZWRTdGF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGVuaGFuY2VyID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBhcmd1bWVudHNbM10gPT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAndW5kZWZpbmVkJykge1xuICAgIGVuaGFuY2VyID0gcHJlbG9hZGVkU3RhdGU7XG4gICAgcHJlbG9hZGVkU3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuaGFuY2VyKGNyZWF0ZVN0b3JlKShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSByZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgY3VycmVudFJlZHVjZXIgPSByZWR1Y2VyO1xuICB2YXIgY3VycmVudFN0YXRlID0gcHJlbG9hZGVkU3RhdGU7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcbiAgdmFyIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgLyoqXG4gICAqIFRoaXMgbWFrZXMgYSBzaGFsbG93IGNvcHkgb2YgY3VycmVudExpc3RlbmVycyBzbyB3ZSBjYW4gdXNlXG4gICAqIG5leHRMaXN0ZW5lcnMgYXMgYSB0ZW1wb3JhcnkgbGlzdCB3aGlsZSBkaXNwYXRjaGluZy5cbiAgICpcbiAgICogVGhpcyBwcmV2ZW50cyBhbnkgYnVncyBhcm91bmQgY29uc3VtZXJzIGNhbGxpbmdcbiAgICogc3Vic2NyaWJlL3Vuc3Vic2NyaWJlIGluIHRoZSBtaWRkbGUgb2YgYSBkaXNwYXRjaC5cbiAgICovXG5cbiAgZnVuY3Rpb24gZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpIHtcbiAgICBpZiAobmV4dExpc3RlbmVycyA9PT0gY3VycmVudExpc3RlbmVycykge1xuICAgICAgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMuc2xpY2UoKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFJlYWRzIHRoZSBzdGF0ZSB0cmVlIG1hbmFnZWQgYnkgdGhlIHN0b3JlLlxuICAgKlxuICAgKiBAcmV0dXJucyB7YW55fSBUaGUgY3VycmVudCBzdGF0ZSB0cmVlIG9mIHlvdXIgYXBwbGljYXRpb24uXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBsaXN0ZW5lciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IGNhbGwgc3RvcmUuc3Vic2NyaWJlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ0lmIHlvdSB3b3VsZCBsaWtlIHRvIGJlIG5vdGlmaWVkIGFmdGVyIHRoZSBzdG9yZSBoYXMgYmVlbiB1cGRhdGVkLCBzdWJzY3JpYmUgZnJvbSBhICcgKyAnY29tcG9uZW50IGFuZCBpbnZva2Ugc3RvcmUuZ2V0U3RhdGUoKSBpbiB0aGUgY2FsbGJhY2sgdG8gYWNjZXNzIHRoZSBsYXRlc3Qgc3RhdGUuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgdW5zdWJzY3JpYmUgZnJvbSBhIHN0b3JlIGxpc3RlbmVyIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvYXBpLXJlZmVyZW5jZS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtdXN0IGJlIHBsYWluIG9iamVjdHMuICcgKyAnVXNlIGN1c3RvbSBtaWRkbGV3YXJlIGZvciBhc3luYyBhY3Rpb25zLicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgYWN0aW9uLnR5cGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbWF5IG5vdCBoYXZlIGFuIHVuZGVmaW5lZCBcInR5cGVcIiBwcm9wZXJ0eS4gJyArICdIYXZlIHlvdSBtaXNzcGVsbGVkIGEgY29uc3RhbnQ/Jyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUmVkdWNlcnMgbWF5IG5vdCBkaXNwYXRjaCBhY3Rpb25zLicpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gdHJ1ZTtcbiAgICAgIGN1cnJlbnRTdGF0ZSA9IGN1cnJlbnRSZWR1Y2VyKGN1cnJlbnRTdGF0ZSwgYWN0aW9uKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBsaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzID0gbmV4dExpc3RlbmVycztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIHJldHVybiBhY3Rpb247XG4gIH1cbiAgLyoqXG4gICAqIFJlcGxhY2VzIHRoZSByZWR1Y2VyIGN1cnJlbnRseSB1c2VkIGJ5IHRoZSBzdG9yZSB0byBjYWxjdWxhdGUgdGhlIHN0YXRlLlxuICAgKlxuICAgKiBZb3UgbWlnaHQgbmVlZCB0aGlzIGlmIHlvdXIgYXBwIGltcGxlbWVudHMgY29kZSBzcGxpdHRpbmcgYW5kIHlvdSB3YW50IHRvXG4gICAqIGxvYWQgc29tZSBvZiB0aGUgcmVkdWNlcnMgZHluYW1pY2FsbHkuIFlvdSBtaWdodCBhbHNvIG5lZWQgdGhpcyBpZiB5b3VcbiAgICogaW1wbGVtZW50IGEgaG90IHJlbG9hZGluZyBtZWNoYW5pc20gZm9yIFJlZHV4LlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBuZXh0UmVkdWNlciBUaGUgcmVkdWNlciBmb3IgdGhlIHN0b3JlIHRvIHVzZSBpbnN0ZWFkLlxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG5cblxuICBmdW5jdGlvbiByZXBsYWNlUmVkdWNlcihuZXh0UmVkdWNlcikge1xuICAgIGlmICh0eXBlb2YgbmV4dFJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIG5leHRSZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuXG4vKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbn1cblxuZnVuY3Rpb24gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2Uoa2V5LCBhY3Rpb24pIHtcbiAgdmFyIGFjdGlvblR5cGUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGU7XG4gIHZhciBhY3Rpb25EZXNjcmlwdGlvbiA9IGFjdGlvblR5cGUgJiYgXCJhY3Rpb24gXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgfHwgJ2FuIGFjdGlvbic7XG4gIHJldHVybiBcIkdpdmVuIFwiICsgYWN0aW9uRGVzY3JpcHRpb24gKyBcIiwgcmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCI7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyBcIlxcXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgXCIgKyAoXCJrZXlzOiBcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG4gIHVuZXhwZWN0ZWRLZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFUExBQ0UpIHJldHVybjtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBcIlVuZXhwZWN0ZWQgXCIgKyAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMSA/ICdrZXlzJyA6ICdrZXknKSArIFwiIFwiICsgKFwiXFxcIlwiICsgdW5leHBlY3RlZEtleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIgZm91bmQgaW4gXCIgKyBhcmd1bWVudE5hbWUgKyBcIi4gXCIpICsgXCJFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6IFwiICsgKFwiXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIuIFVuZXhwZWN0ZWQga2V5cyB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICAgIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkIHdoZW4gcHJvYmVkIHdpdGggYSByYW5kb20gdHlwZS4gXCIgKyAoXCJEb24ndCB0cnkgdG8gaGFuZGxlIFwiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiIG9yIG90aGVyIGFjdGlvbnMgaW4gXFxcInJlZHV4LypcXFwiIFwiKSArIFwibmFtZXNwYWNlLiBUaGV5IGFyZSBjb25zaWRlcmVkIHByaXZhdGUuIEluc3RlYWQsIHlvdSBtdXN0IHJldHVybiB0aGUgXCIgKyBcImN1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsIFwiICsgXCJpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgXCIgKyBcImFjdGlvbiB0eXBlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgbm90IGJlIHVuZGVmaW5lZCwgYnV0IGNhbiBiZSBudWxsLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5cblxuZnVuY3Rpb24gY29tYmluZVJlZHVjZXJzKHJlZHVjZXJzKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGZpbmFsUmVkdWNlcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZyhcIk5vIHJlZHVjZXIgcHJvdmlkZWQgZm9yIGtleSBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmaW5hbFJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMoZmluYWxSZWR1Y2Vycyk7IC8vIFRoaXMgaXMgdXNlZCB0byBtYWtlIHN1cmUgd2UgZG9uJ3Qgd2FybiBhYm91dCB0aGUgc2FtZVxuICAvLyBrZXlzIG11bHRpcGxlIHRpbWVzLlxuXG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB7fTtcbiAgfVxuXG4gIHZhciBzaGFwZUFzc2VydGlvbkVycm9yO1xuXG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGlmIChzaGFwZUFzc2VydGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBzaGFwZUFzc2VydGlvbkVycm9yO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgd2FybmluZ01lc3NhZ2UgPSBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKHN0YXRlLCBmaW5hbFJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSk7XG5cbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuXG4gICAgICBpZiAodHlwZW9mIG5leHRTdGF0ZUZvcktleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IGdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlKF9rZXksIGFjdGlvbik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGggIT09IE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGg7XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYW4gYWN0aW9uIGNyZWF0b3IgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGRpc3BhdGNoIHdyYXBwZWQgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYmluZEFjdGlvbkNyZWF0b3JzIGV4cGVjdGVkIGFuIG9iamVjdCBvciBhIGZ1bmN0aW9uLCBpbnN0ZWFkIHJlY2VpdmVkIFwiICsgKGFjdGlvbkNyZWF0b3JzID09PSBudWxsID8gJ251bGwnIDogdHlwZW9mIGFjdGlvbkNyZWF0b3JzKSArIFwiLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBib3VuZEFjdGlvbkNyZWF0b3JzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBib3VuZEFjdGlvbkNyZWF0b3JzW2tleV0gPSBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kQWN0aW9uQ3JlYXRvcnM7XG59XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KSk7XG4gIH1cblxuICBpZiAoZW51bWVyYWJsZU9ubHkpIGtleXMgPSBrZXlzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gIH0pO1xuICByZXR1cm4ga2V5cztcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5cbmZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG5cbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEaXNwYXRjaGluZyB3aGlsZSBjb25zdHJ1Y3RpbmcgeW91ciBtaWRkbGV3YXJlIGlzIG5vdCBhbGxvd2VkLiAnICsgJ090aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC4nKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh2b2lkIDAsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZDIoe30sIHN0b3JlLCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgQWN0aW9uVHlwZXMgYXMgX19ET19OT1RfVVNFX19BY3Rpb25UeXBlcywgYXBwbHlNaWRkbGV3YXJlLCBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgY3JlYXRlU3RvcmUgfTtcbiIsImltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNDb25zdGFudChnZXRDb25zdGFudCkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdENvbnN0YW50U2VsZWN0b3IoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29uc3RhbnQgPSBnZXRDb25zdGFudChkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgICBmdW5jdGlvbiBjb25zdGFudFNlbGVjdG9yKCkge1xuICAgICAgcmV0dXJuIGNvbnN0YW50O1xuICAgIH1cblxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn0gLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vL1xuLy8gQSBsZW5ndGggb2Ygb25lIHNpZ25hbHMgdGhhdCBtYXBUb1Byb3BzIGRvZXMgbm90IGRlcGVuZCBvbiBwcm9wcyBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuLy8gQSBsZW5ndGggb2YgemVybyBpcyBhc3N1bWVkIHRvIG1lYW4gbWFwVG9Qcm9wcyBpcyBnZXR0aW5nIGFyZ3MgdmlhIGFyZ3VtZW50cyBvciAuLi5hcmdzIGFuZFxuLy8gdGhlcmVmb3JlIG5vdCByZXBvcnRpbmcgaXRzIGxlbmd0aCBhY2N1cmF0ZWx5Li5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IG51bGwgJiYgbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gdW5kZWZpbmVkID8gQm9vbGVhbihtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSA6IG1hcFRvUHJvcHMubGVuZ3RoICE9PSAxO1xufSAvLyBVc2VkIGJ5IHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uIGFuZCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbixcbi8vIHRoaXMgZnVuY3Rpb24gd3JhcHMgbWFwVG9Qcm9wcyBpbiBhIHByb3h5IGZ1bmN0aW9uIHdoaWNoIGRvZXMgc2V2ZXJhbCB0aGluZ3M6XG4vL1xuLy8gICogRGV0ZWN0cyB3aGV0aGVyIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBkZXBlbmRzIG9uIHByb3BzLCB3aGljaFxuLy8gICAgaXMgdXNlZCBieSBzZWxlY3RvckZhY3RvcnkgdG8gZGVjaWRlIGlmIGl0IHNob3VsZCByZWludm9rZSBvbiBwcm9wcyBjaGFuZ2VzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIGhhbmRsZXMgbWFwVG9Qcm9wcyBpZiByZXR1cm5zIGFub3RoZXIgZnVuY3Rpb24sIGFuZCB0cmVhdHMgdGhhdFxuLy8gICAgbmV3IGZ1bmN0aW9uIGFzIHRoZSB0cnVlIG1hcFRvUHJvcHMgZm9yIHN1YnNlcXVlbnQgY2FsbHMuXG4vL1xuLy8gICogT24gZmlyc3QgY2FsbCwgdmVyaWZpZXMgdGhlIGZpcnN0IHJlc3VsdCBpcyBhIHBsYWluIG9iamVjdCwgaW4gb3JkZXIgdG8gd2FyblxuLy8gICAgdGhlIGRldmVsb3BlciB0aGF0IHRoZWlyIG1hcFRvUHJvcHMgZnVuY3Rpb24gaXMgbm90IHJldHVybmluZyBhIHZhbGlkIHJlc3VsdC5cbi8vXG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwVG9Qcm9wcywgbWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdFByb3h5U2VsZWN0b3IoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lO1xuXG4gICAgdmFyIHByb3h5ID0gZnVuY3Rpb24gbWFwVG9Qcm9wc1Byb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHJldHVybiBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA/IHByb3h5Lm1hcFRvUHJvcHMoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykgOiBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCk7XG4gICAgfTsgLy8gYWxsb3cgZGV0ZWN0RmFjdG9yeUFuZFZlcmlmeSB0byBnZXQgb3duUHJvcHNcblxuXG4gICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSB0cnVlO1xuXG4gICAgcHJveHkubWFwVG9Qcm9wcyA9IGZ1bmN0aW9uIGRldGVjdEZhY3RvcnlBbmRWZXJpZnkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykge1xuICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IG1hcFRvUHJvcHM7XG4gICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpO1xuICAgICAgdmFyIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IHByb3BzO1xuICAgICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKHByb3BzKTtcbiAgICAgICAgcHJvcHMgPSBwcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KHByb3BzLCBkaXNwbGF5TmFtZSwgbWV0aG9kTmFtZSk7XG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm94eTtcbiAgfTtcbn0iLCJpbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbihtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBEaXNwYXRjaFRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwRGlzcGF0Y2hUb1Byb3BzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZyhtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuICFtYXBEaXNwYXRjaFRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiB7XG4gICAgICBkaXNwYXRjaDogZGlzcGF0Y2hcbiAgICB9O1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3QobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcnMobWFwRGlzcGF0Y2hUb1Byb3BzLCBkaXNwYXRjaCk7XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3RdOyIsImltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcFN0YXRlVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcFN0YXRlVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmddOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0TWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcykge1xuICByZXR1cm4gX2V4dGVuZHMoe30sIG93blByb3BzLCB7fSwgc3RhdGVQcm9wcywge30sIGRpc3BhdGNoUHJvcHMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0TWVyZ2VQcm9wc1Byb3h5KGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZSxcbiAgICAgICAgcHVyZSA9IF9yZWYucHVyZSxcbiAgICAgICAgYXJlTWVyZ2VkUHJvcHNFcXVhbCA9IF9yZWYuYXJlTWVyZ2VkUHJvcHNFcXVhbDtcbiAgICB2YXIgaGFzUnVuT25jZSA9IGZhbHNlO1xuICAgIHZhciBtZXJnZWRQcm9wcztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICB2YXIgbmV4dE1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmIChoYXNSdW5PbmNlKSB7XG4gICAgICAgIGlmICghcHVyZSB8fCAhYXJlTWVyZ2VkUHJvcHNFcXVhbChuZXh0TWVyZ2VkUHJvcHMsIG1lcmdlZFByb3BzKSkgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNSdW5PbmNlID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChtZXJnZWRQcm9wcywgZGlzcGxheU5hbWUsICdtZXJnZVByb3BzJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgICB9O1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNGdW5jdGlvbihtZXJnZVByb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWVyZ2VQcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZChtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGVmYXVsdE1lcmdlUHJvcHM7XG4gIH0gOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZF07IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgdmVyaWZ5U3Vic2VsZWN0b3JzIGZyb20gJy4vdmVyaWZ5U3Vic2VsZWN0b3JzJztcbmV4cG9ydCBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yKHN0YXRlLCBvd25Qcm9wcykge1xuICAgIHJldHVybiBtZXJnZVByb3BzKG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpLCBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKSwgb3duUHJvcHMpO1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgX3JlZikge1xuICB2YXIgYXJlU3RhdGVzRXF1YWwgPSBfcmVmLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYuYXJlU3RhdGVQcm9wc0VxdWFsO1xuICB2YXIgaGFzUnVuQXRMZWFzdE9uY2UgPSBmYWxzZTtcbiAgdmFyIHN0YXRlO1xuICB2YXIgb3duUHJvcHM7XG4gIHZhciBzdGF0ZVByb3BzO1xuICB2YXIgZGlzcGF0Y2hQcm9wcztcbiAgdmFyIG1lcmdlZFByb3BzO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUZpcnN0Q2FsbChmaXJzdFN0YXRlLCBmaXJzdE93blByb3BzKSB7XG4gICAgc3RhdGUgPSBmaXJzdFN0YXRlO1xuICAgIG93blByb3BzID0gZmlyc3RPd25Qcm9wcztcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgaGFzUnVuQXRMZWFzdE9uY2UgPSB0cnVlO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzQW5kTmV3U3RhdGUoKSB7XG4gICAgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzKCkge1xuICAgIGlmIChtYXBTdGF0ZVRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBpZiAobWFwRGlzcGF0Y2hUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVOZXdTdGF0ZSgpIHtcbiAgICB2YXIgbmV4dFN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICB2YXIgc3RhdGVQcm9wc0NoYW5nZWQgPSAhYXJlU3RhdGVQcm9wc0VxdWFsKG5leHRTdGF0ZVByb3BzLCBzdGF0ZVByb3BzKTtcbiAgICBzdGF0ZVByb3BzID0gbmV4dFN0YXRlUHJvcHM7XG4gICAgaWYgKHN0YXRlUHJvcHNDaGFuZ2VkKSBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVN1YnNlcXVlbnRDYWxscyhuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykge1xuICAgIHZhciBwcm9wc0NoYW5nZWQgPSAhYXJlT3duUHJvcHNFcXVhbChuZXh0T3duUHJvcHMsIG93blByb3BzKTtcbiAgICB2YXIgc3RhdGVDaGFuZ2VkID0gIWFyZVN0YXRlc0VxdWFsKG5leHRTdGF0ZSwgc3RhdGUpO1xuICAgIHN0YXRlID0gbmV4dFN0YXRlO1xuICAgIG93blByb3BzID0gbmV4dE93blByb3BzO1xuICAgIGlmIChwcm9wc0NoYW5nZWQgJiYgc3RhdGVDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpO1xuICAgIGlmIChwcm9wc0NoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wcygpO1xuICAgIGlmIChzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdTdGF0ZSgpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBwdXJlRmluYWxQcm9wc1NlbGVjdG9yKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgcmV0dXJuIGhhc1J1bkF0TGVhc3RPbmNlID8gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA6IGhhbmRsZUZpcnN0Q2FsbChuZXh0U3RhdGUsIG5leHRPd25Qcm9wcyk7XG4gIH07XG59IC8vIFRPRE86IEFkZCBtb3JlIGNvbW1lbnRzXG4vLyBJZiBwdXJlIGlzIHRydWUsIHRoZSBzZWxlY3RvciByZXR1cm5lZCBieSBzZWxlY3RvckZhY3Rvcnkgd2lsbCBtZW1vaXplIGl0cyByZXN1bHRzLFxuLy8gYWxsb3dpbmcgY29ubmVjdEFkdmFuY2VkJ3Mgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHRvIHJldHVybiBmYWxzZSBpZiBmaW5hbFxuLy8gcHJvcHMgaGF2ZSBub3QgY2hhbmdlZC4gSWYgZmFsc2UsIHRoZSBzZWxlY3RvciB3aWxsIGFsd2F5cyByZXR1cm4gYSBuZXdcbi8vIG9iamVjdCBhbmQgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHdpbGwgYWx3YXlzIHJldHVybiB0cnVlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KGRpc3BhdGNoLCBfcmVmMikge1xuICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IF9yZWYyLmluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gX3JlZjIuaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzID0gX3JlZjIuaW5pdE1lcmdlUHJvcHMsXG4gICAgICBvcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImluaXRNYXBTdGF0ZVRvUHJvcHNcIiwgXCJpbml0TWFwRGlzcGF0Y2hUb1Byb3BzXCIsIFwiaW5pdE1lcmdlUHJvcHNcIl0pO1xuXG4gIHZhciBtYXBTdGF0ZVRvUHJvcHMgPSBpbml0TWFwU3RhdGVUb1Byb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcbiAgdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGluaXRNYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWVyZ2VQcm9wcyA9IGluaXRNZXJnZVByb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHZlcmlmeVN1YnNlbGVjdG9ycyhtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgb3B0aW9ucy5kaXNwbGF5TmFtZSk7XG4gIH1cblxuICB2YXIgc2VsZWN0b3JGYWN0b3J5ID0gb3B0aW9ucy5wdXJlID8gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkgOiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5O1xuICByZXR1cm4gc2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgb3B0aW9ucyk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBjb25uZWN0QWR2YW5jZWQgZnJvbSAnLi4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHNoYWxsb3dFcXVhbCBmcm9tICcuLi91dGlscy9zaGFsbG93RXF1YWwnO1xuaW1wb3J0IGRlZmF1bHRNYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tYXBEaXNwYXRjaFRvUHJvcHMnO1xuaW1wb3J0IGRlZmF1bHRNYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tYXBTdGF0ZVRvUHJvcHMnO1xuaW1wb3J0IGRlZmF1bHRNZXJnZVByb3BzRmFjdG9yaWVzIGZyb20gJy4vbWVyZ2VQcm9wcyc7XG5pbXBvcnQgZGVmYXVsdFNlbGVjdG9yRmFjdG9yeSBmcm9tICcuL3NlbGVjdG9yRmFjdG9yeSc7XG4vKlxyXG4gIGNvbm5lY3QgaXMgYSBmYWNhZGUgb3ZlciBjb25uZWN0QWR2YW5jZWQuIEl0IHR1cm5zIGl0cyBhcmdzIGludG8gYSBjb21wYXRpYmxlXHJcbiAgc2VsZWN0b3JGYWN0b3J5LCB3aGljaCBoYXMgdGhlIHNpZ25hdHVyZTpcclxuXHJcbiAgICAoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgPT4gbmV4dEZpbmFsUHJvcHNcclxuICBcclxuICBjb25uZWN0IHBhc3NlcyBpdHMgYXJncyB0byBjb25uZWN0QWR2YW5jZWQgYXMgb3B0aW9ucywgd2hpY2ggd2lsbCBpbiB0dXJuIHBhc3MgdGhlbSB0b1xyXG4gIHNlbGVjdG9yRmFjdG9yeSBlYWNoIHRpbWUgYSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSBpcyBpbnN0YW50aWF0ZWQgb3IgaG90IHJlbG9hZGVkLlxyXG5cclxuICBzZWxlY3RvckZhY3RvcnkgcmV0dXJucyBhIGZpbmFsIHByb3BzIHNlbGVjdG9yIGZyb20gaXRzIG1hcFN0YXRlVG9Qcm9wcyxcclxuICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCBtZXJnZVByb3BzLFxyXG4gIG1lcmdlUHJvcHNGYWN0b3JpZXMsIGFuZCBwdXJlIGFyZ3MuXHJcblxyXG4gIFRoZSByZXN1bHRpbmcgZmluYWwgcHJvcHMgc2VsZWN0b3IgaXMgY2FsbGVkIGJ5IHRoZSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSB3aGVuZXZlclxyXG4gIGl0IHJlY2VpdmVzIG5ldyBwcm9wcyBvciBzdG9yZSBzdGF0ZS5cclxuICovXG5cbmZ1bmN0aW9uIG1hdGNoKGFyZywgZmFjdG9yaWVzLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSBmYWN0b3JpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcmVzdWx0ID0gZmFjdG9yaWVzW2ldKGFyZyk7XG4gICAgaWYgKHJlc3VsdCkgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHZhbHVlIG9mIHR5cGUgXCIgKyB0eXBlb2YgYXJnICsgXCIgZm9yIFwiICsgbmFtZSArIFwiIGFyZ3VtZW50IHdoZW4gY29ubmVjdGluZyBjb21wb25lbnQgXCIgKyBvcHRpb25zLndyYXBwZWRDb21wb25lbnROYW1lICsgXCIuXCIpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHJpY3RFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufSAvLyBjcmVhdGVDb25uZWN0IHdpdGggZGVmYXVsdCBhcmdzIGJ1aWxkcyB0aGUgJ29mZmljaWFsJyBjb25uZWN0IGJlaGF2aW9yLiBDYWxsaW5nIGl0IHdpdGhcbi8vIGRpZmZlcmVudCBvcHRpb25zIG9wZW5zIHVwIHNvbWUgdGVzdGluZyBhbmQgZXh0ZW5zaWJpbGl0eSBzY2VuYXJpb3NcblxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdChfdGVtcCkge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgX3JlZiRjb25uZWN0SE9DID0gX3JlZi5jb25uZWN0SE9DLFxuICAgICAgY29ubmVjdEhPQyA9IF9yZWYkY29ubmVjdEhPQyA9PT0gdm9pZCAwID8gY29ubmVjdEFkdmFuY2VkIDogX3JlZiRjb25uZWN0SE9DLFxuICAgICAgX3JlZiRtYXBTdGF0ZVRvUHJvcHNGID0gX3JlZi5tYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsXG4gICAgICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPT09IHZvaWQgMCA/IGRlZmF1bHRNYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YsXG4gICAgICBfcmVmJG1hcERpc3BhdGNoVG9Qcm8gPSBfcmVmLm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyxcbiAgICAgIF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9IF9yZWYubWVyZ2VQcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1lcmdlUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1lcmdlUHJvcHNGYWN0b3IgPT09IHZvaWQgMCA/IGRlZmF1bHRNZXJnZVByb3BzRmFjdG9yaWVzIDogX3JlZiRtZXJnZVByb3BzRmFjdG9yLFxuICAgICAgX3JlZiRzZWxlY3RvckZhY3RvcnkgPSBfcmVmLnNlbGVjdG9yRmFjdG9yeSxcbiAgICAgIHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYkc2VsZWN0b3JGYWN0b3J5ID09PSB2b2lkIDAgPyBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IDogX3JlZiRzZWxlY3RvckZhY3Rvcnk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIF9yZWYyKSB7XG4gICAgaWYgKF9yZWYyID09PSB2b2lkIDApIHtcbiAgICAgIF9yZWYyID0ge307XG4gICAgfVxuXG4gICAgdmFyIF9yZWYzID0gX3JlZjIsXG4gICAgICAgIF9yZWYzJHB1cmUgPSBfcmVmMy5wdXJlLFxuICAgICAgICBwdXJlID0gX3JlZjMkcHVyZSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYzJHB1cmUsXG4gICAgICAgIF9yZWYzJGFyZVN0YXRlc0VxdWFsID0gX3JlZjMuYXJlU3RhdGVzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlc0VxdWFsID0gX3JlZjMkYXJlU3RhdGVzRXF1YWwgPT09IHZvaWQgMCA/IHN0cmljdEVxdWFsIDogX3JlZjMkYXJlU3RhdGVzRXF1YWwsXG4gICAgICAgIF9yZWYzJGFyZU93blByb3BzRXF1YSA9IF9yZWYzLmFyZU93blByb3BzRXF1YWwsXG4gICAgICAgIGFyZU93blByb3BzRXF1YWwgPSBfcmVmMyRhcmVPd25Qcm9wc0VxdWEgPT09IHZvaWQgMCA/IHNoYWxsb3dFcXVhbCA6IF9yZWYzJGFyZU93blByb3BzRXF1YSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVQcm9wc0VxID0gX3JlZjMuYXJlU3RhdGVQcm9wc0VxdWFsLFxuICAgICAgICBhcmVTdGF0ZVByb3BzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPT09IHZvaWQgMCA/IHNoYWxsb3dFcXVhbCA6IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSxcbiAgICAgICAgX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID0gX3JlZjMuYXJlTWVyZ2VkUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlTWVyZ2VkUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU1lcmdlZFByb3BzRSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlTWVyZ2VkUHJvcHNFLFxuICAgICAgICBleHRyYU9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMywgW1wicHVyZVwiLCBcImFyZVN0YXRlc0VxdWFsXCIsIFwiYXJlT3duUHJvcHNFcXVhbFwiLCBcImFyZVN0YXRlUHJvcHNFcXVhbFwiLCBcImFyZU1lcmdlZFByb3BzRXF1YWxcIl0pO1xuXG4gICAgdmFyIGluaXRNYXBTdGF0ZVRvUHJvcHMgPSBtYXRjaChtYXBTdGF0ZVRvUHJvcHMsIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcywgJ21hcFN0YXRlVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gbWF0Y2gobWFwRGlzcGF0Y2hUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKTtcbiAgICB2YXIgaW5pdE1lcmdlUHJvcHMgPSBtYXRjaChtZXJnZVByb3BzLCBtZXJnZVByb3BzRmFjdG9yaWVzLCAnbWVyZ2VQcm9wcycpO1xuICAgIHJldHVybiBjb25uZWN0SE9DKHNlbGVjdG9yRmFjdG9yeSwgX2V4dGVuZHMoe1xuICAgICAgLy8gdXNlZCBpbiBlcnJvciBtZXNzYWdlc1xuICAgICAgbWV0aG9kTmFtZTogJ2Nvbm5lY3QnLFxuICAgICAgLy8gdXNlZCB0byBjb21wdXRlIENvbm5lY3QncyBkaXNwbGF5TmFtZSBmcm9tIHRoZSB3cmFwcGVkIGNvbXBvbmVudCdzIGRpc3BsYXlOYW1lLlxuICAgICAgZ2V0RGlzcGxheU5hbWU6IGZ1bmN0aW9uIGdldERpc3BsYXlOYW1lKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIFwiQ29ubmVjdChcIiArIG5hbWUgKyBcIilcIjtcbiAgICAgIH0sXG4gICAgICAvLyBpZiBtYXBTdGF0ZVRvUHJvcHMgaXMgZmFsc3ksIHRoZSBDb25uZWN0IGNvbXBvbmVudCBkb2Vzbid0IHN1YnNjcmliZSB0byBzdG9yZSBzdGF0ZSBjaGFuZ2VzXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXM6IEJvb2xlYW4obWFwU3RhdGVUb1Byb3BzKSxcbiAgICAgIC8vIHBhc3NlZCB0aHJvdWdoIHRvIHNlbGVjdG9yRmFjdG9yeVxuICAgICAgaW5pdE1hcFN0YXRlVG9Qcm9wczogaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHM6IGluaXRNYXBEaXNwYXRjaFRvUHJvcHMsXG4gICAgICBpbml0TWVyZ2VQcm9wczogaW5pdE1lcmdlUHJvcHMsXG4gICAgICBwdXJlOiBwdXJlLFxuICAgICAgYXJlU3RhdGVzRXF1YWw6IGFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbDogYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbDogYXJlU3RhdGVQcm9wc0VxdWFsLFxuICAgICAgYXJlTWVyZ2VkUHJvcHNFcXVhbDogYXJlTWVyZ2VkUHJvcHNFcXVhbFxuICAgIH0sIGV4dHJhT3B0aW9ucykpO1xuICB9O1xufVxuZXhwb3J0IGRlZmF1bHRcbi8qI19fUFVSRV9fKi9cbmNyZWF0ZUNvbm5lY3QoKTsiLCJpbXBvcnQgeyB1c2VSZWR1Y2VyLCB1c2VSZWYsIHVzZU1lbW8sIHVzZUNvbnRleHQsIHVzZURlYnVnVmFsdWUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxudmFyIHJlZkVxdWFsaXR5ID0gZnVuY3Rpb24gcmVmRXF1YWxpdHkoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yikge1xuICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKGZ1bmN0aW9uIChzKSB7XG4gICAgcmV0dXJuIHMgKyAxO1xuICB9LCAwKSxcbiAgICAgIGZvcmNlUmVuZGVyID0gX3VzZVJlZHVjZXJbMV07XG5cbiAgdmFyIHN1YnNjcmlwdGlvbiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlLCBjb250ZXh0U3ViKTtcbiAgfSwgW3N0b3JlLCBjb250ZXh0U3ViXSk7XG4gIHZhciBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RvciA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U3RvcmVTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U2VsZWN0ZWRTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgc3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gIHZhciBzZWxlY3RlZFN0YXRlO1xuXG4gIHRyeSB7XG4gICAgaWYgKHNlbGVjdG9yICE9PSBsYXRlc3RTZWxlY3Rvci5jdXJyZW50IHx8IHN0b3JlU3RhdGUgIT09IGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCB8fCBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIHNlbGVjdGVkU3RhdGUgPSBzZWxlY3RvcihzdG9yZVN0YXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIGVyci5tZXNzYWdlICs9IFwiXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG5cIiArIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFjayArIFwiXFxuXFxuXCI7XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbGF0ZXN0U2VsZWN0b3IuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgIGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCA9IHN0b3JlU3RhdGU7XG4gICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gc2VsZWN0ZWRTdGF0ZTtcbiAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV3U2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQoc3RvcmUuZ2V0U3RhdGUoKSk7XG5cbiAgICAgICAgaWYgKGVxdWFsaXR5Rm4obmV3U2VsZWN0ZWRTdGF0ZSwgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudCA9IG5ld1NlbGVjdGVkU3RhdGU7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgLy8gd2UgaWdub3JlIGFsbCBlcnJvcnMgaGVyZSwgc2luY2Ugd2hlbiB0aGUgY29tcG9uZW50XG4gICAgICAgIC8vIGlzIHJlLXJlbmRlcmVkLCB0aGUgc2VsZWN0b3JzIGFyZSBjYWxsZWQgYWdhaW4sIGFuZFxuICAgICAgICAvLyB3aWxsIHRocm93IGFnYWluLCBpZiBuZWl0aGVyIHByb3BzIG5vciBzdG9yZSBzdGF0ZVxuICAgICAgICAvLyBjaGFuZ2VkXG4gICAgICAgIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCA9IGVycjtcbiAgICAgIH1cblxuICAgICAgZm9yY2VSZW5kZXIoKTtcbiAgICB9XG5cbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IGNoZWNrRm9yVXBkYXRlcztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG4gICAgY2hlY2tGb3JVcGRhdGVzKCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9LCBbc3RvcmUsIHN1YnNjcmlwdGlvbl0pO1xuICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbn1cbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU2VsZWN0b3JgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZWxlY3Rvckhvb2soY29udGV4dCkge1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0O1xuICB9XG5cbiAgdmFyIHVzZVJlZHV4Q29udGV4dCA9IGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFJlZHV4Q29udGV4dCA6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgfTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNlbGVjdG9yKHNlbGVjdG9yLCBlcXVhbGl0eUZuKSB7XG4gICAgaWYgKGVxdWFsaXR5Rm4gPT09IHZvaWQgMCkge1xuICAgICAgZXF1YWxpdHlGbiA9IHJlZkVxdWFsaXR5O1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFzZWxlY3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIHNlbGVjdG9yIHRvIHVzZVNlbGVjdG9yXCIpO1xuICAgIH1cblxuICAgIHZhciBfdXNlUmVkdXhDb250ZXh0ID0gdXNlUmVkdXhDb250ZXh0KCksXG4gICAgICAgIHN0b3JlID0gX3VzZVJlZHV4Q29udGV4dC5zdG9yZSxcbiAgICAgICAgY29udGV4dFN1YiA9IF91c2VSZWR1eENvbnRleHQuc3Vic2NyaXB0aW9uO1xuXG4gICAgdmFyIHNlbGVjdGVkU3RhdGUgPSB1c2VTZWxlY3RvcldpdGhTdG9yZUFuZFN1YnNjcmlwdGlvbihzZWxlY3RvciwgZXF1YWxpdHlGbiwgc3RvcmUsIGNvbnRleHRTdWIpO1xuICAgIHVzZURlYnVnVmFsdWUoc2VsZWN0ZWRTdGF0ZSk7XG4gICAgcmV0dXJuIHNlbGVjdGVkU3RhdGU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUncyBzdGF0ZS4gVGhpcyBob29rIHRha2VzIGEgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogYXMgYW4gYXJndW1lbnQuIFRoZSBzZWxlY3RvciBpcyBjYWxsZWQgd2l0aCB0aGUgc3RvcmUgc3RhdGUuXHJcbiAqXHJcbiAqIFRoaXMgaG9vayB0YWtlcyBhbiBvcHRpb25hbCBlcXVhbGl0eSBjb21wYXJpc29uIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyXHJcbiAqIHRoYXQgYWxsb3dzIHlvdSB0byBjdXN0b21pemUgdGhlIHdheSB0aGUgc2VsZWN0ZWQgc3RhdGUgaXMgY29tcGFyZWQgdG8gZGV0ZXJtaW5lXHJcbiAqIHdoZXRoZXIgdGhlIGNvbXBvbmVudCBuZWVkcyB0byBiZSByZS1yZW5kZXJlZC5cclxuICpcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2VsZWN0b3IgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb249fSBlcXVhbGl0eUZuIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgZXF1YWxpdHlcclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHNlbGVjdGVkIHN0YXRlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvdW50ZXJDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3QgY291bnRlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmNvdW50ZXIpXHJcbiAqICAgcmV0dXJuIDxkaXY+e2NvdW50ZXJ9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCB2YXIgdXNlU2VsZWN0b3IgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU2VsZWN0b3JIb29rKCk7IiwiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rIH0gZnJvbSAnLi9ob29rcy91c2VEaXNwYXRjaCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTdG9yZSc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgYXMgYmF0Y2ggfSBmcm9tICcuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMnO1xuaW1wb3J0IHNoYWxsb3dFcXVhbCBmcm9tICcuL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5zZXRCYXRjaChiYXRjaCk7XG5leHBvcnQgeyBQcm92aWRlciwgY29ubmVjdEFkdmFuY2VkLCBSZWFjdFJlZHV4Q29udGV4dCwgY29ubmVjdCwgYmF0Y2gsIHVzZURpc3BhdGNoLCBjcmVhdGVEaXNwYXRjaEhvb2ssIHVzZVNlbGVjdG9yLCBjcmVhdGVTZWxlY3Rvckhvb2ssIHVzZVN0b3JlLCBjcmVhdGVTdG9yZUhvb2ssIHNoYWxsb3dFcXVhbCB9OyIsImNvbnN0IHRvcERyb3BEaXNwbGF5ID0gKHN0YXRlID0gZmFsc2UsIGFjdGlvbikgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBcIlNIT1dfVE9QX0RST1BcIjpcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIGNhc2UgXCJISURFX1RPUF9EUk9QXCI6XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdG9wRHJvcERpc3BsYXk7XG4iLCJpbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB0b3BEcm9wRGlzcGxheSBmcm9tIFwiLi9Ub3BEcm9wRGlzcGxheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjb21iaW5lUmVkdWNlcnMoe1xuICB0b3BEcm9wRGlzcGxheSxcbn0pO1xuIiwiZnVuY3Rpb24gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKGV4dHJhQXJndW1lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG52YXIgdGh1bmsgPSBjcmVhdGVUaHVua01pZGRsZXdhcmUoKTtcbnRodW5rLndpdGhFeHRyYUFyZ3VtZW50ID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlO1xuXG5leHBvcnQgZGVmYXVsdCB0aHVuazsiLCJpbXBvcnQgcmVkdWNlciBmcm9tIFwiLi4vcmVkdWNlcnMvaW5kZXhcIjtcbmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBhcHBseU1pZGRsZXdhcmUsIGNvbXBvc2UgfSBmcm9tIFwicmVkdXhcIjtcbmltcG9ydCB0aHVuayBmcm9tIFwicmVkdXgtdGh1bmtcIjtcblxubGV0IHN0b3JlO1xuY29uc3QgbWlkd2FyZXMgPSBbdGh1bmtdO1xuXG5pZiAoXG4gIHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9fICYmXG4gIHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9fKClcbikge1xuICBzdG9yZSA9IGNyZWF0ZVN0b3JlKFxuICAgIHJlZHVjZXIsXG4gICAgY29tcG9zZShcbiAgICAgIGFwcGx5TWlkZGxld2FyZSguLi5taWR3YXJlcyksXG4gICAgICB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyAmJlxuICAgICAgICB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXygpXG4gICAgKVxuICApO1xufSBlbHNlIHtcbiAgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2VyLCBhcHBseU1pZGRsZXdhcmUoLi4ubWlkd2FyZXMpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RvcmU7XG4iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGhpc3RvcnlDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQkMShcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJleHBvcnQgY29uc3QgaGFuZGxlVG9wRHJvcERpc3BsYXkgPSAodG9wRHJvcERpc3BsYXkpID0+IHtcbiAgaWYgKHRvcERyb3BEaXNwbGF5KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiSElERV9UT1BfRFJPUFwiLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiU0hPV19UT1BfRFJPUFwiLFxuICAgIH07XG4gIH1cbn07XG4iLCJjb25zdCBkYXRhID0ge1xuICBsaW5rczogW1xuICAgIHsgdGl0bGU6IFwiQUJPVVRcIiwgY29udGVudDogXCIjYWJvdXRcIiB9LFxuICAgIHsgdGl0bGU6IFwiRURVQ0FUSU9OXCIsIGNvbnRlbnQ6IFwiI2VkdWNhdGlvblwiIH0sXG4gICAgeyB0aXRsZTogXCJFWFBFUklFTkNFXCIsIGNvbnRlbnQ6IFwiI2V4cGVyaWVuY2VcIiB9LFxuICAgIHsgdGl0bGU6IFwiUFJPSkVDVFNcIiwgY29udGVudDogXCIjcHJvamVjdHNcIiB9LFxuICAgIHsgdGl0bGU6IFwiU0tJTExTXCIsIGNvbnRlbnQ6IFwiI3NraWxsc1wiIH0sXG4gIF0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBkYXRhO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFwiLi9Db250YWluZXIuc2Nzc1wiO1xuXG5jb25zdCBjb250YWluZXIgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YGNvbnRhaW5lciAke2NsYXNzTmFtZSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGNsYXNzTmFtZX1gfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRhaW5lcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBcIi4vUm93LnNjc3NcIjtcblxuY29uc3Qgcm93ID0gKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2Byb3cgJHtjbGFzc05hbWUgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBjbGFzc05hbWV9YH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCByb3c7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgXCIuL1RvcGxpbmsuc2Nzc1wiO1xuXG5jb25zdCB0b3BMaW5rID0gKHsgbGlua3MgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDx1bCBjbGFzc05hbWU9e2B0b3AtbGlua2B9PlxuICAgICAge2xpbmtzLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8bGkga2V5PXtpbmRleH0+XG4gICAgICAgICAgICA8aDU+XG4gICAgICAgICAgICAgIDxhIGhyZWY9e2l0ZW0uY29udGVudH0gY2xhc3NOYW1lPXtgdG9wLWxpbmtfX2xpbmtgfT5cbiAgICAgICAgICAgICAgICB7aXRlbS50aXRsZX1cbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPC9oNT5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApO1xuICAgICAgfSl9XG4gICAgPC91bD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRvcExpbms7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgXCIuL1RvcERyb3Auc2Nzc1wiO1xuXG5jb25zdCB0b3BEcm9wID0gKHsgbGlua3MsIHRvcERyb3BEaXNwbGF5IH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8dWwgY2xhc3NOYW1lPXtgdG9wLWRyb3AgJHt0b3BEcm9wRGlzcGxheSA/IFwidG9wLWRyb3AtLWFjdGl2ZVwiIDogXCJcIn1gfT5cbiAgICAgIHtsaW5rcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGxpIGtleT17aW5kZXh9IGNsYXNzTmFtZT17YHRvcC1kcm9wX19pdGVtYH0+XG4gICAgICAgICAgICA8aDU+XG4gICAgICAgICAgICAgIDxhIGhyZWY9e2l0ZW0uY29udGVudH0gY2xhc3NOYW1lPXtgdG9wLWRyb3BfX2xpbmtgfT5cbiAgICAgICAgICAgICAgICB7aXRlbS50aXRsZX1cbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPC9oNT5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApO1xuICAgICAgfSl9XG4gICAgPC91bD5cbiAgKTtcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4ge1xuICByZXR1cm4ge1xuICAgIHRvcERyb3BEaXNwbGF5OiBzdGF0ZS50b3BEcm9wRGlzcGxheSxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKSh0b3BEcm9wKTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IGhhbmRsZVRvcERyb3BEaXNwbGF5IH0gZnJvbSBcIi4uLy4uL2FjdGlvbnMvVG9wRHJvcERpc3BsYXlcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL1RvcE5hdkRhdGFcIjtcbmltcG9ydCBDb250YWluZXIgZnJvbSBcIi4uLy4uL2NvbnRhaW5lcnMvQ29udGFpbmVyL0NvbnRhaW5lclwiO1xuaW1wb3J0IFJvdyBmcm9tIFwiLi4vLi4vY29udGFpbmVycy9Sb3cvUm93XCI7XG5pbXBvcnQgVG9wTGluayBmcm9tIFwiLi4vVG9wTGluay9Ub3BMaW5rXCI7XG5pbXBvcnQgVG9wRHJvcCBmcm9tIFwiLi4vVG9wRHJvcC9Ub3BEcm9wXCI7XG5pbXBvcnQgXCIuL1RvcE5hdi5zY3NzXCI7XG5cbmNvbnN0IHRvcE5hdiA9ICh7IHRvcERyb3BEaXNwbGF5LCBoYW5kbGVUb3BEcm9wRGlzcGxheSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2B0b3AtbmF2YH0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHRvcC1uYXZfX21haW5gfT5cbiAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICA8Um93IGNsYXNzTmFtZT17YHRvcC1uYXZfX2NvbnRlbnRgfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdG9wLW5hdl9faW1nYH0+PC9kaXY+XG4gICAgICAgICAgICA8VG9wTGluayBsaW5rcz17ZGF0YS5saW5rc30gLz5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdG9wLW5hdl9fYnV0dG9uICR7XG4gICAgICAgICAgICAgICAgdG9wRHJvcERpc3BsYXkgPyBcInRvcC1uYXZfX2J1dHRvbi0tYWN0aXZlXCIgOiBcIlwiXG4gICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlVG9wRHJvcERpc3BsYXkodG9wRHJvcERpc3BsYXkpO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2B0b3AtbmF2X19idXR0b24tc2hhcGVgfT48L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YHRvcC1uYXZfX2J1dHRvbi1zaGFwZWB9Pjwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgdG9wLW5hdl9fYnV0dG9uLXNoYXBlYH0+PC9zcGFuPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9Sb3c+XG4gICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHRvcC1uYXZfX3N1YmB9PlxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgIDxUb3BEcm9wIGxpbmtzPXtkYXRhLmxpbmtzfSAvPlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiB7XG4gIHJldHVybiB7XG4gICAgdG9wRHJvcERpc3BsYXk6IHN0YXRlLnRvcERyb3BEaXNwbGF5LFxuICB9O1xufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gKGRpc3BhdGNoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgaGFuZGxlVG9wRHJvcERpc3BsYXk6ICh0b3BEcm9wRGlzcGxheSkgPT4ge1xuICAgICAgZGlzcGF0Y2goaGFuZGxlVG9wRHJvcERpc3BsYXkodG9wRHJvcERpc3BsYXkpKTtcbiAgICB9LFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykodG9wTmF2KTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IGhhbmRsZVRvcERyb3BEaXNwbGF5IH0gZnJvbSBcIi4uLy4uL2FjdGlvbnMvVG9wRHJvcERpc3BsYXlcIjtcbmltcG9ydCBcIi4vTmF2QmFubmVyLnNjc3NcIjtcblxuY29uc3QgbmF2QmFubmVyID0gKHsgdG9wRHJvcERpc3BsYXksIGhhbmRsZVRvcERyb3BEaXNwbGF5IH0pID0+IHtcbiAgcmV0dXJuIHRvcERyb3BEaXNwbGF5ID8gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17YG5hdi1iYW5uZXJgfVxuICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICBoYW5kbGVUb3BEcm9wRGlzcGxheSh0b3BEcm9wRGlzcGxheSk7XG4gICAgICB9fVxuICAgID48L2Rpdj5cbiAgKSA6IG51bGw7XG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB0b3BEcm9wRGlzcGxheTogc3RhdGUudG9wRHJvcERpc3BsYXksXG4gIH07XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSAoZGlzcGF0Y2gpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBoYW5kbGVUb3BEcm9wRGlzcGxheTogKHRvcERyb3BEaXNwbGF5KSA9PiB7XG4gICAgICBkaXNwYXRjaChoYW5kbGVUb3BEcm9wRGlzcGxheSh0b3BEcm9wRGlzcGxheSkpO1xuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShuYXZCYW5uZXIpO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFwiLi9tYWluLnNjc3NcIjtcblxuY29uc3QgbWFpbiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtgbWFpbmB9PntjaGlsZHJlbn08L2Rpdj47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtYWluO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IENvbnRhaW5lciBmcm9tIFwiLi4vLi4vY29udGFpbmVycy9Db250YWluZXIvQ29udGFpbmVyXCI7XG5pbXBvcnQgXCIuL1NlY3Rpb24uc2Nzc1wiO1xuXG5jb25zdCBzZWN0aW9uID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgc2VjdGlvbmB9PlxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9e2BzZWN0aW9uX19jb250YWluZXJgfT57Y2hpbGRyZW59PC9Db250YWluZXI+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzZWN0aW9uO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFwiLi9TZWN0aW9uVGl0bGUuc2Nzc1wiO1xuXG5jb25zdCBzZWN0aW9uVGl0bGUgPSAoeyBjaGlsZHJlbiwgdGl0bGUgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgc2VjdGlvbi10aXRsZWB9PlxuICAgICAgPGgyIGNsYXNzTmFtZT17YHNlY3Rpb24tdGl0bGVfX3RpdGxlYH0+e3RpdGxlfTwvaDI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzZWN0aW9uVGl0bGU7XG4iLCJjb25zdCBkYXRhID0ge1xuICBuYW1lOiBcIlNIVVlBTkcgSEVcIixcbiAgY29udGFjdDogXCJtYXhoZTIwMTlAZ21haWwuY29tICAgICAyMDYtODQ5LTkxMDVcIixcbiAgY29udGVudDogXCJUcmFpbmVkIGVuZ2luZWVyIHNlZWtpbmcgY2hhbGxlbmdpbmcgam9iIGluIGZyb250LWVuZCBlbmdpbmVlci5cIixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGRhdGE7XG4iLCJjb25zdCBkYXRhID0gW1xuICB7XG4gICAgaW1nOiBcImFzc2V0cy9pbWcvbGlua2VkaW4uc3ZnXCIsXG4gICAgbGluazogXCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vc2h1eWFuZy1oZS01OTI3MTkxMDYvXCIsXG4gIH0sXG4gIHtcbiAgICBpbWc6IFwiYXNzZXRzL2ltZy9naXRodWIuc3ZnXCIsXG4gICAgbGluazogXCJodHRwczovL2dpdGh1Yi5jb20vc2h1eWFuZy1oZVwiLFxuICB9LFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL0Fib3V0TGlua3NEYXRhXCI7XG5pbXBvcnQgXCIuL0Fib3V0TGlua3Muc2Nzc1wiO1xuXG5jb25zdCBhYm91dExpbmtzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDx1bCBjbGFzc05hbWU9e2BhYm91dC1saW5rc2B9PlxuICAgICAge2RhdGEubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxsaSBrZXk9e2luZGV4fSBjbGFzc05hbWU9e2BhYm91dC1saW5rc19faXRlbWB9PlxuICAgICAgICAgICAgPGEgaHJlZj17aXRlbS5saW5rfSBjbGFzc05hbWU9e2BhYm91dC1saW5rc19fbGlua2B9PlxuICAgICAgICAgICAgICA8aW1nIHNyYz17aXRlbS5pbWd9IGNsYXNzTmFtZT17YGFib3V0LWxpbmtzX19pbWdgfSAvPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L3VsPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYWJvdXRMaW5rcztcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL0Fib3V0RGF0YVwiO1xuaW1wb3J0IEFib3V0TGlua3MgZnJvbSBcIi4uL0Fib3V0TGlua3MvQWJvdXRMaW5rc1wiO1xuaW1wb3J0IFwiLi9BYm91dC5zY3NzXCI7XG5cbmNvbnN0IGFib3V0ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgYWJvdXRgfT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgYWJvdXRfX3RpdGxlYH0+XG4gICAgICAgIDxoMSBjbGFzc05hbWU9e2BhYm91dF9fbmFtZWB9PntkYXRhLm5hbWV9PC9oMT5cbiAgICAgICAgPGg1IGNsYXNzTmFtZT17YGFib3V0X19jb250YWN0YH0+e2RhdGEuY29udGFjdH08L2g1PlxuICAgICAgPC9kaXY+XG4gICAgICA8aDQgY2xhc3NOYW1lPXtgYWJvdXRfX2NvbnRlbnRgfT57ZGF0YS5jb250ZW50fTwvaDQ+XG4gICAgICA8QWJvdXRMaW5rcyAvPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYWJvdXQ7XG4iLCJjb25zdCBkYXRhID0gW1xuICB7XG4gICAgdGl0bGU6IFwiV0FTSElOR1RPTiBVTklWRVJTSVRZIElOIFNULiBMT1VJU1wiLFxuICAgIGRlZ3JlZTogXCJNQVNURVIgT0YgU0NJRU5DRVwiLFxuICAgIG1ham9yOiBcIkNvbXB1dGVyIFNjaWVuY2UsIEVuZ2luZWVyaW5nIGFuZCBBcHBsaWVkIFNjaWVuY2VcIixcbiAgICBkdXJhdGlvbjogXCIwOC8yMDE3IC0gMDUvMjAxOVwiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiVU5JVkVSU0lUWSBPRiBXQVNISU5HVE9OXCIsXG4gICAgZGVncmVlOiBcIkJBQ0hFTE9SIE9GIFNDSUVOQ0VcIixcbiAgICBtYWpvcjogXCJFbGVjdHJpY2FsIEVuZ2luZWVyaW5nLCBDb2xsZWdlIG9mIEVuZ2luZWVyaW5nXCIsXG4gICAgZHVyYXRpb246IFwiMDgvMjAxMyAtIDA2LzIwMTdcIixcbiAgfSxcbl07XG5cbmV4cG9ydCBkZWZhdWx0IGRhdGE7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgZGF0YSBmcm9tIFwiLi9FZHVjYXRpb25EYXRhXCI7XG5pbXBvcnQgXCIuL0VkdWNhdGlvbi5zY3NzXCI7XG5cbmNvbnN0IGVkdWNhdGlvbiA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8dWw+XG4gICAgICB7ZGF0YS5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGxpIGtleT17aW5kZXh9IGNsYXNzTmFtZT17YGVkdWNhdGlvbmB9PlxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT17YGVkdWNhdGlvbl9fdGl0bGVgfT57aXRlbS50aXRsZX08L2gzPlxuICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT17YGVkdWNhdGlvbl9fZGVncmVlYH0+e2l0ZW0uZGVncmVlfTwvaDQ+XG4gICAgICAgICAgICA8aDUgY2xhc3NOYW1lPXtgZWR1Y2F0aW9uX19tYWpvcmB9PntpdGVtLm1ham9yfTwvaDU+XG4gICAgICAgICAgICA8aDUgY2xhc3NOYW1lPXtgZWR1Y2F0aW9uX19kdXJhdGlvbmB9PntpdGVtLmR1cmF0aW9ufTwvaDU+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvdWw+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBlZHVjYXRpb247XG4iLCJjb25zdCBkYXRhID0gW1xuICB7XG4gICAgdGl0bGU6IFwiQUxUT01OSVwiLFxuICAgIGR1dHk6IFwiSVBHIFdFQlNJVEVcIixcbiAgICBjb250ZW50OiBbXG4gICAgICBcIkRlc2lnbmVkIG1vYmlsZSBmaXJzdCwgcmVzcG9uc2l2ZSBJUEcgY29tcGFueSB3ZWJzaXRlIHN0cnVjdHVyZSB3aXRoIEJFTSBtZXRob2RvbG9naWVzLlwiLFxuICAgICAgXCJEZXNpZ25lZCB0aGUgQ1NTIHJlc2V0LCBncmlkIHN5c3RlbS5cIixcbiAgICAgIFwiSW1wbGVtZW50IHdlYnNpdGUgZXZlbnRzIGJ5IGpRdWVyeS5cIixcbiAgICAgIFwiV2ViIHNjcmFwaW5nIGluZm9ybWF0aW9uIGZvciBBbHRvbW5pIGNhbmRpZGF0ZSBkYXRhYmFzZSB1c2luZyBQdXBwZXRlZXIgTm9kZS5qcy5cIixcbiAgICBdLFxuICAgIGR1cmF0aW9uOiBcIjA2LzIwMjAgLSAwOC8yMDIwXCIsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJNT0JJTEUgUFJPR1JBTU1JTkdcIixcbiAgICBkdXR5OiBcIlJFU1RBVVJBTlQgUkVDT01NRU5EQVRJT04gV0VCU0lURVwiLFxuICAgIGNvbnRlbnQ6IFtcbiAgICAgIFwiQnVpbHQgdXAgdXNlciBpbmZvcm1hdGlvbiBkYXRhYmFzZSB3aXRoIE1vbmdvREIuXCIsXG4gICAgICBcIkJ1aWx0IHVwIE1vZGVsLCBDb250cm9sbGVyIGxheWVyIHRvIGFjY29tcGxpc2ggcmVnaXN0ZXIsIGxvZ2luIHdpdGggRXhwcmVzcyBOb2RlLmpzLlwiLFxuICAgICAgXCJCdWlsdCBSZWFjdCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCB1c2luZyBXZWJwYWNrLlwiLFxuICAgICAgXCJCdWlsdCB1cCByZWdpc3RlciwgbG9naW4sIGFuZCByZXN0YXVyYW50IHBhZ2Ugd2l0aCBSZWFjdCBhbmQgc2hvdyByZXN0YXVyYW50cyBsb2NhdGlvbiBvbiBtYXAgdXNpbmcgR29vZ2xlIE1hcCBBUEkuXCIsXG4gICAgICBcIlVzaW5nIFJlZHV4IHRvIG1hbmFnZSBzdGF0ZXMgYW5kIEJvb3RzdHJhcCB0byBtYW5hZ2Ugc3R5bGluZy5cIixcbiAgICBdLFxuICAgIGR1cmF0aW9uOiBcIjA4LzIwMTkgLSAwMy8yMDIwXCIsXG4gIH0sXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBkYXRhO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGRhdGEgZnJvbSBcIi4vRXhwZXJpZW5jZURhdGFcIjtcbmltcG9ydCBcIi4vRXhwZXJpZW5jZS5zY3NzXCI7XG5cbmNvbnN0IGV4cGVyaWVuY2UgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPHVsPlxuICAgICAge2RhdGEubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxsaSBrZXk9e2luZGV4fSBjbGFzc05hbWU9e2BleHBlcmllbmNlYH0+XG4gICAgICAgICAgICA8aDMgY2xhc3NOYW1lPXtgZXhwZXJpZW5jZV9fdGl0bGVgfT57aXRlbS50aXRsZX08L2gzPlxuICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT17YGV4cGVyaWVuY2VfX2R1dHlgfT57aXRlbS5kdXR5fTwvaDQ+XG4gICAgICAgICAgICA8dWwgY2xhc3NOYW1lPXtgZXhwZXJpZW5jZV9fY29udGVudGB9PlxuICAgICAgICAgICAgICB7aXRlbS5jb250ZW50Lm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGxpIGtleT17aW5kZXh9IGNsYXNzTmFtZT17YGV4cGVyaWVuY2VfX2l0ZW1gfT5cbiAgICAgICAgICAgICAgICAgICAgPGg1PntpdGVtfTwvaDU+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDxoNSBjbGFzc05hbWU9e2BleHBlcmllbmNlX19kdXJhdGlvbmB9PntpdGVtLmR1cmF0aW9ufTwvaDU+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvdWw+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBleHBlcmllbmNlO1xuIiwiY29uc3QgZGF0YSA9IFtcbiAge1xuICAgIHRpdGxlOiBcIldFQlNJVEUgU1BFRUQgVEVTVEVSXCIsXG4gICAgY29udGVudDogW1xuICAgICAgXCJCdWlsdCBDTEkgY2xpZW50IGludGVyZmFjZSB1c2luZyBOb2RlLmpzLlwiLFxuICAgICAgXCJCdWlsdCBzZXJ2ZXIgdXNpbmcgTm9kZS5qcyBhbmQgdXNlIFdlYlNvY2tldCB0byBjb25uZWN0IGNsaWVudC5cIixcbiAgICAgIFwiRGVzaWduZWQgY29tbWFuZHMgdG8gdGVzdCBtdWx0aXBsZSB3ZWJzaXRlcyByZXNwb25zZSBzcGVlZCBhbmQgY2FsY3VsYXRlIHRoZSBtaW4sIG1heCwgYXZlcmFnZSByZXNwb25zZSB0aW1lIGZvciBlYWNoIHdlYnNpdGUgdXNpbmcgUHJvbWlzZS5cIixcbiAgICAgIFwiU2VydmVyIGNhbiBoYW5kbGUgbXVsdGlwbGUgdGVzdHMgYW5kIHNhdmUgYWxsIHRlc3RzIHJlc3VsdHMgaW4gdXNpbmcgZmlsZSBzeXN0ZW0uXCIsXG4gICAgXSxcbiAgICBkdXJhdGlvbjogXCIwNC8yMDIwIC0gMDUvMjAyMFwiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiT05MSU5FIENIQVQgUk9PTVwiLFxuICAgIGNvbnRlbnQ6IFtcbiAgICAgIFwiRXZhbHVhdGVkIGFuZCBzZWxlY3RlZCB0Mi5taWNybyBhcyB0aGUgc2VydmVyLlwiLFxuICAgICAgXCJEZXNpZ25lZCBhbmQgaW1wbGVtZW50ZWQgdGhlIGNoYXQgcm9vbSB1c2VyIGludGVyZmFjZSB1c2luZyBIVE1MLCBDU1MuXCIsXG4gICAgICBcIkltcGxlbWVudCB1c2VycyByZWdpc3RlciBhbmQgbG9naW4gZnVuY3Rpb25zIHVzaW5nIE5vZGUuanMuXCIsXG4gICAgICBcIkltcGxlbWVudCBncm91cCBjaGF0IGFuZCBwcml2YXRlIGNoYXQgZnVuY3Rpb25zIHVzaW5nIE5vZGUuanMgV2ViU29ja2V0LlwiLFxuICAgIF0sXG4gICAgZHVyYXRpb246IFwiMDQvMjAxOCAtIDA1LzIwMThcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIk9OTElORSBDQUxFTkRBUlwiLFxuICAgIGNvbnRlbnQ6IFtcbiAgICAgIFwiQnVpbHQgdXAgdXNlcnPigJkgdGFibGUgYW5kIG1lbW8gdGFibGUgd2l0aCBNeVNRTC5cIixcbiAgICAgIFwiSW1wbGVtZW50IGNhbGVuZGFyIHJlZ2lzdGVyLCBsb2dpbiBhbmQgc2hvdyB1cCBjb3JyZXNwb25kaW5nIG1lbW9zIG9uIGNhbGVuZGFyIHVzaW5nIEphdmFTY3JpcHQgYW5kIFBIUC5cIixcbiAgICAgIFwiSW1wbGVtZW50IG1lbW8gY3JlYXRpbmcsIHVwZGF0aW5nLCBkZWxldGluZyB1c2luZyBKYXZhU2NyaXB0IEFqYXggd2l0aCBQSFAuXCIsXG4gICAgXSxcbiAgICBkdXJhdGlvbjogXCIwMy8yMDE4IC0gMDQvMjAxOFwiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiU0lNUExJRklFRCBTUUwgREFUQUJBU0VcIixcbiAgICBjb250ZW50OiBbXG4gICAgICBcIkltcGxlbWVudGVkIHRoZSBwaHlzaWNhbCBsYXllciB3aGljaCBzdXBwb3J0cyBpbnRlZ2VyIGFuZCBzdHJpbmcgdHlwZSB1c2luZyBKYXZhLlwiLFxuICAgICAgXCJJbXBsZW1lbnRlZCBhZ2dyZWdhdGlvbiBmdW5jdGlvbnMgbGlrZSBDT1VOVCwgQVZHLCBTVU0sIE1BWCwgTUlOIGFuZCBwYXJzZSBTUUwgdXNpbmcganNxbHBhcnNlciBBUEkuXCIsXG4gICAgICBcIkltcGxlbWVudGVkIEIrIHRyZWUgaW5kZXggc3RydWN0dXJlIHRvIHRoZSBkYXRhYmFzZSB1c2luZyBKYXZhLlwiLFxuICAgICAgXCJJbXBsZW1lbnRlZCByZWFkIGxvY2ssIHdyaXRlIGxvY2sgYW5kIGJ1ZmZlciB0byBzdXBwb3J0IHJvbGxiYWNrIHVzaW5nIEphdmEuXCIsXG4gICAgXSxcbiAgICBkdXJhdGlvbjogXCIwMS8yMDE4IC0gMDUvMjAxOFwiLFxuICB9LFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL1Byb2plY3RzRGF0YVwiO1xuaW1wb3J0IFwiLi9Qcm9qZWN0cy5zY3NzXCI7XG5cbmNvbnN0IHByb2plY3RzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDx1bD5cbiAgICAgIHtkYXRhLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8bGkga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtgcHJvamVjdHNgfT5cbiAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9e2Bwcm9qZWN0c19fdGl0bGVgfT57aXRlbS50aXRsZX08L2gzPlxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT17YHByb2plY3RzX19jb250ZW50YH0+XG4gICAgICAgICAgICAgIHtpdGVtLmNvbnRlbnQubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8bGkga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtgcHJvamVjdHNfX2l0ZW1gfT5cbiAgICAgICAgICAgICAgICAgICAgPGg1PntpdGVtfTwvaDU+XG4gICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDxoNSBjbGFzc05hbWU9e2Bwcm9qZWN0c19fZHVyYXRpb25gfT57aXRlbS5kdXJhdGlvbn08L2g1PlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L3VsPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcHJvamVjdHM7XG4iLCJjb25zdCBkYXRhID0ge1xuICB0b29sOiBcIlBST0dSQU1NSU5HIExBTkdVQUdFUyBBTkQgVE9PTFNcIixcbiAgd29ya2Zsb3c6IFwiV09SS0ZMT1dcIixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGRhdGE7XG4iLCJjb25zdCBkYXRhID0gW1xuICBcImFzc2V0cy9pbWcvaHRtbDUuc3ZnXCIsXG4gIFwiYXNzZXRzL2ltZy9jc3MzLnN2Z1wiLFxuICBcImFzc2V0cy9pbWcvamF2YXNjcmlwdC5zdmdcIixcbiAgXCJhc3NldHMvaW1nL3JlYWN0LnN2Z1wiLFxuICBcImFzc2V0cy9pbWcvcmVkdXguc3ZnXCIsXG4gIFwiYXNzZXRzL2ltZy93ZWJwYWNrLnN2Z1wiLFxuICBcImFzc2V0cy9pbWcvc2Fzcy5zdmdcIixcbiAgXCJhc3NldHMvaW1nL2V4cHJlc3Muc3ZnXCIsXG4gIFwiYXNzZXRzL2ltZy9ub2RlanMuc3ZnXCIsXG4gIFwiYXNzZXRzL2ltZy9qcXVlcnkuc3ZnXCIsXG4gIFwiYXNzZXRzL2ltZy9qYXZhLnN2Z1wiLFxuICBcImFzc2V0cy9pbWcvbW9uZ29kYi5zdmdcIixcbiAgXCJhc3NldHMvaW1nL215c3FsLnN2Z1wiLFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuY29uc3QgbWFrZVN0eWxlID0gKHNpemUgPSAwKSA9PiB7XG4gIGxldCBiYXNpcyA9IFwiYXV0b1wiO1xuICBpZiAoc2l6ZSA+IDApIHtcbiAgICBiYXNpcyA9IGAkeyhzaXplIC8gMTIpICogMTAwfSVgO1xuICB9XG4gIHJldHVybiB7XG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgZmxleEJhc2lzOiBiYXNpcyxcbiAgfTtcbn07XG5cbmNvbnN0IGNvbCA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHNpemUgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e21ha2VTdHlsZShzaXplKX0gY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29sO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGRhdGEgZnJvbSBcIi4vU2tpbGxzVG9vbERhdGFcIjtcbmltcG9ydCBcIi4vU2tpbGxzVG9vbC5zY3NzXCI7XG5pbXBvcnQgUm93IGZyb20gXCIuLi8uLi9jb250YWluZXJzL1Jvdy9Sb3dcIjtcbmltcG9ydCBDb2wgZnJvbSBcIi4uLy4uL2NvbnRhaW5lcnMvQ29sL0NvbFwiO1xuXG5jb25zdCBza2lsbHNUb29sID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxSb3cgY2xhc3NOYW1lPXtgc2tpbGxzLXRvb2xgfT5cbiAgICAgIHtkYXRhLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8Q29sIGtleT17aW5kZXh9IGNsYXNzTmFtZT17YHNraWxscy10b29sX19pdGVtYH0+XG4gICAgICAgICAgICA8aW1nIHNyYz17aXRlbX0gY2xhc3NOYW1lPXtgc2tpbGxzLXRvb2xfX2ltZ2B9IC8+XG4gICAgICAgICAgPC9Db2w+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L1Jvdz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNraWxsc1Rvb2w7XG4iLCJjb25zdCBkYXRhID0gW1xuICBcIk1vYmlsZS1GaXJzdCwgUmVzcG9uc2l2ZSBEZXNpZ25cIixcbiAgXCJDcm9zcyBCcm93c2VyIFRlc3RpbmcgYW5kIERlYnVnZ2luZ1wiLFxuICBcIlJFU1RmdWwgQVBJIERlc2lnblwiLFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL1NraWxsc1dvcmtmbG93RGF0YVwiO1xuaW1wb3J0IFwiLi9Ta2lsbHNXb3JrZmxvdy5zY3NzXCI7XG5cbmNvbnN0IHNraWxsc1dvcmtmbG93ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDx1bCBjbGFzc05hbWU9e2Bza2lsbHMtd29ya2Zsb3dgfT5cbiAgICAgIHtkYXRhLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8bGkga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtgc2tpbGxzLXdvcmtmbG93X19pdGVtYH0+XG4gICAgICAgICAgICA8aDQgY2xhc3NOYW1lPXtgc2tpbGxzLXdvcmtmbG93X190aXRsZWB9PntpdGVtfTwvaDQ+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvdWw+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBza2lsbHNXb3JrZmxvdztcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBkYXRhIGZyb20gXCIuL1NraWxsc0RhdGFcIjtcbmltcG9ydCBcIi4vU2tpbGxzLnNjc3NcIjtcbmltcG9ydCBTa2lsbHNUb29sIGZyb20gXCIuLi9Ta2lsbHNUb29sL1NraWxsc1Rvb2xcIjtcbmltcG9ydCBTa2lsbHNXb3JrZmxvdyBmcm9tIFwiLi4vU2tpbGxzV29ya2Zsb3cvU2tpbGxzV29ya2Zsb3dcIjtcblxuY29uc3Qgc2tpbGxzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgc2tpbGxzYH0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHNraWxsc19fdG9vbGB9PlxuICAgICAgICA8aDMgY2xhc3NOYW1lPXtgc2tpbGxzX190b29sLXRpdGxlYH0+e2RhdGEudG9vbH08L2gzPlxuICAgICAgICA8U2tpbGxzVG9vbCAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHNraWxsc19fd29ya2Zsb3dgfT5cbiAgICAgICAgPGgzIGNsYXNzTmFtZT17YHNraWxsc19fd29ya2Zsb3ctdGl0bGVgfT57ZGF0YS53b3JrZmxvd308L2gzPlxuICAgICAgICA8U2tpbGxzV29ya2Zsb3cgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc2tpbGxzO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciwgU3dpdGNoLCBSb3V0ZSB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQgVG9wTmF2IGZyb20gXCIuL2NvbXBvbmVudHMvVG9wTmF2L1RvcE5hdlwiO1xuaW1wb3J0IE5hdkJhbm5lciBmcm9tIFwiLi9jb21wb25lbnRzL05hdkJhbm5lci9OYXZCYW5uZXJcIjtcbmltcG9ydCBNYWluIGZyb20gXCIuL2NvbnRhaW5lcnMvTWFpbi9NYWluXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi9jb250YWluZXJzL1NlY3Rpb24vU2VjdGlvblwiO1xuaW1wb3J0IFNlY3Rpb25UaXRsZSBmcm9tIFwiLi9jb21wb25lbnRzL1NlY3Rpb25UaXRsZS9TZWN0aW9uVGl0bGVcIjtcbmltcG9ydCBBYm91dCBmcm9tIFwiLi9jb21wb25lbnRzL0Fib3V0L0Fib3V0XCI7XG5pbXBvcnQgRWR1Y2F0aW9uIGZyb20gXCIuL2NvbXBvbmVudHMvRWR1Y2F0aW9uL0VkdWNhdGlvblwiO1xuaW1wb3J0IEV4cGVyaWVuY2UgZnJvbSBcIi4vY29tcG9uZW50cy9FeHBlcmllbmNlL0V4cGVyaWVuY2VcIjtcbmltcG9ydCBQcm9qZWN0cyBmcm9tIFwiLi9jb21wb25lbnRzL1Byb2plY3RzL1Byb2plY3RzXCI7XG5pbXBvcnQgU2tpbGxzIGZyb20gXCIuL2NvbXBvbmVudHMvU2tpbGxzL1NraWxsc1wiO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCcm93c2VyUm91dGVyPlxuICAgICAgICA8VG9wTmF2IC8+XG4gICAgICAgIDxOYXZCYW5uZXIgLz5cbiAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cIi9cIj5cbiAgICAgICAgICAgIDxNYWluPlxuICAgICAgICAgICAgICA8U2VjdGlvbj5cbiAgICAgICAgICAgICAgICA8QWJvdXQgLz5cbiAgICAgICAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgICAgICAgICA8U2VjdGlvbj5cbiAgICAgICAgICAgICAgICA8U2VjdGlvblRpdGxlIHRpdGxlPXtgRURVQ0FUSU9OYH0+XG4gICAgICAgICAgICAgICAgICA8RWR1Y2F0aW9uIC8+XG4gICAgICAgICAgICAgICAgPC9TZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIDwvU2VjdGlvbj5cbiAgICAgICAgICAgICAgPFNlY3Rpb24+XG4gICAgICAgICAgICAgICAgPFNlY3Rpb25UaXRsZSB0aXRsZT17YEVYUEVSSUVOQ0VgfT5cbiAgICAgICAgICAgICAgICAgIDxFeHBlcmllbmNlIC8+XG4gICAgICAgICAgICAgICAgPC9TZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIDwvU2VjdGlvbj5cbiAgICAgICAgICAgICAgPFNlY3Rpb24+XG4gICAgICAgICAgICAgICAgPFNlY3Rpb25UaXRsZSB0aXRsZT17YFBST0pFQ1RTYH0+XG4gICAgICAgICAgICAgICAgICA8UHJvamVjdHMgLz5cbiAgICAgICAgICAgICAgICA8L1NlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgICAgICAgICA8U2VjdGlvbj5cbiAgICAgICAgICAgICAgICA8U2VjdGlvblRpdGxlIHRpdGxlPXtgU0tJTExTYH0+XG4gICAgICAgICAgICAgICAgICA8U2tpbGxzIC8+XG4gICAgICAgICAgICAgICAgPC9TZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICAgIDwvU2VjdGlvbj5cbiAgICAgICAgICAgIDwvTWFpbj5cbiAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiKlwiPnsvKiA8Tm90Rm91bmQgLz4gKi99PC9Sb3V0ZT5cbiAgICAgICAgPC9Td2l0Y2g+XG4gICAgICA8L0Jyb3dzZXJSb3V0ZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBzdG9yZSBmcm9tIFwiLi9zdG9yZS9pbmRleFwiO1xuaW1wb3J0IEFwcCBmcm9tIFwiLi9BcHBcIjtcbmltcG9ydCBcIm5vcm1hbGl6ZS5jc3NcIjtcbmltcG9ydCBcIi4vcmVzZXQuc2Nzc1wiO1xuaW1wb3J0IFwiLi90eXBvZ3JhcGh5LnNjc3NcIjtcbmltcG9ydCBcIi4vYmFzZS5zY3NzXCI7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgPEFwcCAvPlxuICA8L1Byb3ZpZGVyPixcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyb290XCIpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==